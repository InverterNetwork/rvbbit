{:orders
 {:fields-sys [:field_name :field_type :data_type],
  :client_memory
  [:mem_time
   :client_name
   :packets
   :batches
   :mem_limit
   :mem_used
   :mem_used_mb
   :mem_total
   :latency
   :client_subs
   :server_subs
   :messages_per_second
   :recent_messages_per_second
   :ts],
  :tables-sys
  [:db_schema :db_catalog :connection_id :schema_cat :table_name :fields],
  :new-query (:diff :mem_used :ts_hour),
  :client-stats-drag-36
  [:ack
   :client_latency
   :client_name
   :last_seen
   :last_seen_seconds
   :memory
   :recent_messages_per_second
   :push
   :queue_distro
   :server_subs
   :uptime
   :styler_highlight_8717],
  :client_stats
  [:client_name
   :ack
   :client_latency
   :client_subs
   :last_seen
   :memory
   :push
   :queue_size
   :server_subs
   :last_seen_seconds
   :booted_ts
   :queue_distro
   :uptime_seconds
   :uptime
   :messages_per_second
   :recent_messages_per_second
   :ts],
  :connections-sys [:database_name :connection_id :styler_highlight_8717ss],
  :client-memory-drag-36
  [:client_name
   :recent_messages_per_second
   :messages_per_second
   :mem_used
   :batches
   :packets
   :ts],
  :gen-viz-516 (:mb :mem_used :messages_per_second :ts)},
 :reco-preview nil,
 :sql-source
 {:client_memory
  {:select [:*], :connection-id "system-db", :from [:client_memory], :limit 111},
  :client_stats
  {:select [:*], :connection-id "system-db", :from [:client_stats], :limit 111},
  :client-memory-drag-36
  {:select
   [:client_name
    :recent_messages_per_second
    :messages_per_second
    :mem_used
    :batches
    :packets
    :ts],
   :where [:= :client_name :*client-name-str],
   :from [[:client_memory :ee183]],
   :refresh-every 200,
   :cache? false,
   :_last-run "21:23:00",
   :order-by [[:mem_time :desc]],
   :col-widths {:batches 131, :packets 131, :ts 151}},
  :gen-viz-516
  {:cache? false,
   :where [:= :client_name :*client-name-str],
   :limit 50,
   :group-by [:ts],
   :_last-run "21:23:00",
   :refresh-every 200,
   :from
   [{:select
     [:client_name
      :recent_messages_per_second
      :messages_per_second
      :mem_used
      :batches
      :packets
      :ts],
     :where [:= :client_name :*client-name-str],
     :from [[:client_memory :ee183]],
     :order-by [[:mem_time :desc]]}],
   :order-by [[:ts :desc]],
   :connection-id "system-db",
   :select
   [[[[:sum :mem_used]] :mem_used]
    [[:sum :recent_messages_per_second] :messages_per_second]
    :ts],
   :post-process-fn
   (fn [x]
     (vec
       (reverse
         (for [row x] (assoc row :mb (int (/ (get row :mem_used) 1048576)))))))},
  :client-stats-drag-36
  {:select
   [:ack
    :client_latency
    :client_name
    :last_seen
    :last_seen_seconds
    :memory
    :recent_messages_per_second
    :push
    :queue_distro
    :server_subs
    :uptime],
   :from [[:client_stats :gg588]],
   :refresh-every 210,
   :cache? false,
   :_last-run "21:21:29",
   :col-widths
   {:ack 81,
    :client_latency 141,
    :client_name 261,
    :memory 81,
    :push 91,
    :server_subs 111,
    :uptime 201,
    :last_seen 171},
   :order-by [[:last_seen_seconds :asc]],
   :style-rules
   {[:* :highlight-8717]
    {:logic [:= :client_name :*client-name-str],
     :style {:border "1px solid #cac18255"}}}},
  :new-query
  {:cache? false,
   :where [:= :client_name :*client-name-str],
   :limit 26,
   :group-by [2],
   :_last-run "21:23:31",
   :refresh-every 230,
   :from
   [{:select
     [:client_name
      :recent_messages_per_second
      :messages_per_second
      :mem_used
      :batches
      :packets
      :ts],
     :where [:= :client_name :*client-name-str],
     :from [[:client_memory :ee183]],
     :order-by [[:mem_time :desc]]}],
   :order-by [[:ts :desc]],
   :connection-id "system-db",
   :select [[[[:avg :mem_used]] :mem_used] [[:substring :ts 1 13] :ts_hour]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:mem_used 0})
           row
           (get rx idx {:mem_used 0})
           pre-mb
           (/ (get prev-row :mem_used) 1048576)
           mb
           (/ (get row :mem_used) 1048576)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))}},
 :meta
 {nil
  {:fields
   {:vec-val
    {:data-type "string",
     :distinct 302,
     :group-by? true,
     :commons {},
     :cardinality 66}},
   :rowcount 454},
  :fields-sys {:fields {}, :rowcount 0},
  :client_memory
  {:fields
   {:mem_limit
    {:data-type "integer",
     :distinct 2,
     :group-by? true,
     :commons {4294705152 91, 2172649472 20},
     :cardinality 1},
    :server_subs
    {:data-type "integer",
     :distinct 4,
     :group-by? true,
     :commons {24 52, 10 36, 21 17},
     :cardinality 3},
    :mem_used
    {:data-type "integer",
     :distinct 111,
     :group-by? true,
     :commons {766164599 1, 75430102 1, 75352244 1},
     :cardinality 100},
    :client_subs
    {:data-type "integer",
     :distinct 5,
     :group-by? true,
     :commons {24 52, 10 36, 21 16},
     :cardinality 4},
    :recent_messages_per_second
    {:data-type "float",
     :distinct 30,
     :group-by? true,
     :commons {0.07 14, 6.87 11, 1.07 11},
     :cardinality 27},
    :mem_time
    {:data-type "string",
     :distinct 110,
     :group-by? true,
     :commons
     {"2024-07-23T19:08:21.445Z" 2,
      "2024-07-23T19:10:36.929Z" 1,
      "2024-07-23T19:07:21.567Z" 1},
     :cardinality 99},
    :ts
    {:data-type "string",
     :distinct 22,
     :group-by? true,
     :commons
     {"2024-07-23 15:10:51" 6, "2024-07-23 15:08:40" 6, "2024-07-23 15:10:36" 6},
     :cardinality 19},
    :messages_per_second
    {:data-type "float",
     :distinct 64,
     :group-by? true,
     :commons {0.13 7, 1.15 6, nil 6},
     :cardinality 57},
    :latency
    {:data-type "integer",
     :distinct 101,
     :group-by? true,
     :commons {245 3, 126 2, 346 2},
     :cardinality 90},
    :batches
    {:data-type "integer",
     :distinct 97,
     :group-by? true,
     :commons {375 11, 379 3, 377 3},
     :cardinality 87},
    :client_name
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons
     {":pleasant-prismatic-echidna-43" 20,
      ":unwavering-plum-cat-19" 19,
      ":learned-round-penguin-30" 18},
     :cardinality 5},
    :mem_total
    {:data-type "integer",
     :distinct 111,
     :group-by? true,
     :commons {590102019 1, 303504726 1, 866458800 1},
     :cardinality 100},
    :packets
    {:data-type "integer",
     :distinct 111,
     :group-by? true,
     :commons {133547 1, 1051216 1, 11569 1},
     :cardinality 100},
    :mem_used_mb
    {:data-type "string",
     :distinct 111,
     :group-by? true,
     :commons {"793.5562" 1, "741.3863" 1, "272.5954" 1},
     :cardinality 100}},
   :rowcount 111},
  :tables-sys
  {:fields
   {:db_schema
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"none" 24},
     :cardinality 4},
    :db_catalog
    {:data-type "unknown",
     :distinct 1,
     :group-by? true,
     :commons {nil 24},
     :cardinality 4},
    :connection_id
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"system-db" 24},
     :cardinality 4},
    :schema_cat
    {:data-type "unknown",
     :distinct 1,
     :group-by? false,
     :commons {nil 24},
     :cardinality 4},
    :table_name
    {:data-type "string",
     :distinct 24,
     :group-by? true,
     :commons {"connections" 1, "board_history" 1, "rule_maps_tests" 1},
     :cardinality 100},
    :fields
    {:data-type "integer",
     :distinct 16,
     :group-by? false,
     :commons {6 4, 5 3, 12 2},
     :cardinality 66}},
   :rowcount 24},
  :new-query
  {:fields
   {:diff
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"325 MB" 1},
     :cardinality 100},
    :mem_used
    {:data-type "float",
     :distinct 1,
     :group-by? true,
     :commons {3.409799243076923E8 1},
     :cardinality 100},
    :ts_hour
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"2024-07-23 19" 1},
     :cardinality 100}},
   :rowcount 1},
  :new-clojure-3
  {:fields
   {:vec-val
    {:data-type "keyword",
     :distinct 6,
     :group-by? true,
     :commons {},
     :cardinality 100}},
   :rowcount 6},
  :client-stats-drag-36
  {:fields
   {:server_subs
    {:data-type "integer",
     :distinct 7,
     :group-by? true,
     :commons {24 3, 1 1, 10 1},
     :cardinality 77},
    :push
    {:data-type "integer",
     :distinct 9,
     :group-by? true,
     :commons {8 1, 2373 1, 106000 1},
     :cardinality 100},
    :recent_messages_per_second
    {:data-type "float",
     :distinct 8,
     :group-by? true,
     :commons {6.8 2, 0.07 1, 1.07 1},
     :cardinality 88},
    :uptime
    {:data-type "string",
     :distinct 8,
     :group-by? true,
     :commons
     {"4 hours, 14 minutes, 43 seconds" 2,
      "52 seconds" 1,
      "4 hours, 14 minutes, 45 seconds" 1},
     :cardinality 88},
    :last_seen_seconds
    {:data-type "integer",
     :distinct 3,
     :group-by? true,
     :commons {14 6, 13 2, 29 1},
     :cardinality 33},
    :memory
    {:data-type "string",
     :distinct 9,
     :group-by? true,
     :commons {"831.5953" 1, "558.3705" 1, "727.3431" 1},
     :cardinality 100},
    :queue_distro
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"nil" 9},
     :cardinality 11},
    :styler_highlight_8717
    {:data-type "integer",
     :distinct 2,
     :group-by? true,
     :commons {0 8, 1 1},
     :cardinality 22},
    :client_latency
    {:data-type "integer",
     :distinct 9,
     :group-by? true,
     :commons {1690 1, 342 1, 285 1},
     :cardinality 100},
    :ack
    {:data-type "integer",
     :distinct 5,
     :group-by? true,
     :commons {1019 4, 1020 2, 3 1},
     :cardinality 55},
    :client_name
    {:data-type "string",
     :distinct 9,
     :group-by? true,
     :commons
     {":surprising-puce-squirrel-24" 1,
      ":unwavering-square-donkey-26" 1,
      ":pleasant-prismatic-echidna-43" 1},
     :cardinality 100},
    :last_seen
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {"14 seconds" 6, "13 seconds" 2, "29 seconds" 1},
     :cardinality 33}},
   :rowcount 9},
  :new-clojure-2
  {:fields
   {:client-name
    {:data-type "keyword",
     :distinct 9,
     :group-by? true,
     :commons {},
     :cardinality 100},
    :ticks
    {:data-type "integer",
     :distinct 7,
     :group-by? true,
     :commons {},
     :cardinality 77}},
   :rowcount 9},
  :client_stats
  {:fields
   {:server_subs
    {:data-type "integer",
     :distinct 7,
     :group-by? true,
     :commons {24 3, 10 1, 11 1},
     :cardinality 77},
    :queue_size
    {:data-type "unknown",
     :distinct 1,
     :group-by? true,
     :commons {nil 9},
     :cardinality 11},
    :push
    {:data-type "integer",
     :distinct 9,
     :group-by? true,
     :commons {8 1, 2373 1, 106000 1},
     :cardinality 100},
    :client_subs
    {:data-type "integer",
     :distinct 7,
     :group-by? true,
     :commons {24 3, 10 1, 11 1},
     :cardinality 77},
    :recent_messages_per_second
    {:data-type "float",
     :distinct 8,
     :group-by? true,
     :commons {6.8 2, 1.07 1, 1 1},
     :cardinality 88},
    :uptime_seconds
    {:data-type "float",
     :distinct 9,
     :group-by? true,
     :commons {67.235 1, 15298.873 1, 15297.387 1},
     :cardinality 100},
    :uptime
    {:data-type "string",
     :distinct 8,
     :group-by? true,
     :commons
     {"4 hours, 14 minutes, 43 seconds" 2,
      "4 hours, 14 minutes, 45 seconds" 1,
      "4 hours, 14 minutes, 41 seconds" 1},
     :cardinality 88},
    :last_seen_seconds
    {:data-type "integer",
     :distinct 3,
     :group-by? true,
     :commons {14 6, 13 2, 29 1},
     :cardinality 33},
    :memory
    {:data-type "string",
     :distinct 9,
     :group-by? true,
     :commons {"831.5953" 1, "558.3705" 1, "727.3431" 1},
     :cardinality 100},
    :queue_distro
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"nil" 9},
     :cardinality 11},
    :ts
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"2024-07-23 19:21:51" 9},
     :cardinality 11},
    :messages_per_second
    {:data-type "float",
     :distinct 9,
     :group-by? true,
     :commons {0.16 1, 0.08 1, 6.87 1},
     :cardinality 100},
    :client_latency
    {:data-type "integer",
     :distinct 9,
     :group-by? true,
     :commons {1690 1, 342 1, 285 1},
     :cardinality 100},
    :ack
    {:data-type "integer",
     :distinct 5,
     :group-by? true,
     :commons {1019 4, 1020 2, 3 1},
     :cardinality 55},
    :booted_ts
    {:data-type "integer",
     :distinct 9,
     :group-by? true,
     :commons {1721776894828 1, 1721761609950 1, 1721761612232 1},
     :cardinality 100},
    :client_name
    {:data-type "string",
     :distinct 9,
     :group-by? true,
     :commons
     {":surprising-puce-squirrel-24" 1,
      ":unwavering-square-donkey-26" 1,
      ":pleasant-prismatic-echidna-43" 1},
     :cardinality 100},
    :last_seen
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {"14 seconds" 6, "13 seconds" 2, "29 seconds" 1},
     :cardinality 33}},
   :rowcount 9},
  :connections-sys
  {:fields
   {:database_name
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {"*cache-db*" 4, "SQLite" 3, "*csv-import-db*" 1},
     :cardinality 37},
    :connection_id
    {:data-type "string",
     :distinct 8,
     :group-by? true,
     :commons {"cache.db" 1, "flows-db" 1, "system-db" 1},
     :cardinality 100},
    :styler_highlight_8717ss
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {1 8},
     :cardinality 12}},
   :rowcount 8},
  :reco-counts {:fields {}, :rowcount 0},
  :client-memory-drag-36
  {:fields
   {:client_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":delightful-puce-codfish-41" 13},
     :cardinality 7},
    :recent_messages_per_second
    {:data-type "float",
     :distinct 11,
     :group-by? true,
     :commons {0.07 2, 5.6 2, 3.73 1},
     :cardinality 84},
    :messages_per_second
    {:data-type "float",
     :distinct 13,
     :group-by? true,
     :commons {2.94 1, 2.06 1, 3.04 1},
     :cardinality 100},
    :mem_used
    {:data-type "integer",
     :distinct 13,
     :group-by? true,
     :commons {158753562 1, 508408310 1, 192246216 1},
     :cardinality 100},
    :batches
    {:data-type "integer",
     :distinct 9,
     :group-by? true,
     :commons {27 5, 45 1, 9 1},
     :cardinality 69},
    :packets
    {:data-type "integer",
     :distinct 13,
     :group-by? true,
     :commons {49 1, 52 1, 68 1},
     :cardinality 100},
    :ts
    {:data-type "string",
     :distinct 13,
     :group-by? true,
     :commons
     {"2024-07-23 19:22:21" 1, "2024-07-23 19:24:36" 1, "2024-07-23 19:22:51" 1},
     :cardinality 100}},
   :rowcount 13},
  :gen-viz-516
  {:fields
   {:mb
    {:data-type "integer",
     :distinct 13,
     :group-by? true,
     :commons {183 1, 171 1, 173 1},
     :cardinality 100},
    :mem_used
    {:data-type "integer",
     :distinct 13,
     :group-by? true,
     :commons {158753562 1, 508408310 1, 192246216 1},
     :cardinality 100},
    :messages_per_second
    {:data-type "float",
     :distinct 11,
     :group-by? true,
     :commons {0.07 2, 5.6 2, 3.73 1},
     :cardinality 84},
    :ts
    {:data-type "string",
     :distinct 13,
     :group-by? true,
     :commons
     {"2024-07-23 19:22:21" 1, "2024-07-23 19:24:36" 1, "2024-07-23 19:22:51" 1},
     :cardinality 100}},
   :rowcount 13}},
 :default-col-widths
 {:block-3108 {:client-memory-drag-36 151},
  :block-2618 {:client-stats-drag-36 114},
  :virtual-panel
  {:kick-812421489 ##Inf,
   :kick-1441622820 ##Inf,
   :kick--1171317173 ##Inf,
   :kick-473473616 ##Inf},
  :block-11015 {:new-clojure-2 255},
  :system-connections-list* {:connections-sys 126},
  :system-tables-list* {:tables-sys 133},
  :system-fields-list* {:fields-sys ##Inf}},
 :runstream-drops nil,
 :tabs
 ["some client stats w recharts"
  "bountiful bird"
  "beige whale"
  "effective pheasant"
  "Persian blue cat"],
 :selected-cols nil,
 :server
 {:settings
  {:harvest-on-boot? true,
   :default "./screens/looking-glass-redux.edn",
   :new-block-rand
   ["Why, sometimes I've believed as many as six impossible things before breakfast."
    "Imagination is the only weapon in the war against reality."
    "It's no use going back to yesterday, because I was a different person then."
    "Who in the world am I? Ah, that's the great puzzle."
    "Curiouser and curiouser!"
    "If you don't know where you are going any road can take you there."
    "We're all mad here."
    "I can't go back to yesterday because I was a different person then."
    "It's always tea-time."
    "Begin at the beginning and go on till you come to the end; then stop."
    "I knew who I was this morning, but I've changed a few times since then."
    "How long is forever? Sometimes, just one second."
    "If everybody minded their own business, the world would go around a great deal faster than it does."
    "I don't think... then you shouldn't talk, said the Hatter."
    "Oh, how I wish I could shut up like a telescope! I think I could, if I only knew how to begin."
    "You're entirely bonkers. But I'll tell you a secret... all the best people are."
    "It was much pleasanter at home, when one wasn't always growing larger and smaller."
    "I wonder if I've been changed in the night. Let me think. Was I the same when I got up this morning?"
    "Have I gone mad? I'm afraid so, but let me tell you something, the best people usually are."
    "Well, I never heard it before, but it sounds uncommon nonsense."
    "Why, sometimes I've believed as many as six impossible things before breakfast."
    "Imagination is the only weapon in the war against reality."
    "Who in the world am I? Ah, that's the great puzzle."
    "We're all mad here."
    "How long is forever? Sometimes, just one second."
    "The world is full of obvious things which nobody by any chance ever observes."
    "Reality is that which, when you stop believing in it, doesn't go away."
    "The sky above the port was the color of television, tuned to a dead channel."
    "Information wants to be free."
    "The future is already here – it's just not evenly distributed."
    "He had a chip in his head, an interface jack that allowed him to plug his brain directly into the console."
    "The 'Net is a waste of time, and that's exactly what's right about it."
    "Cyberspace. A consensual hallucination experienced daily by billions of legitimate operators, in every nation."
    "The street finds its own uses for things."
    "Accelerated world. Accelerated nervous system to go with it."
    "The future has arrived — it's just not evenly distributed yet."
    "It's not enough to be able to pick up a sword. You have to know which end to poke into the enemy."
    "When you want to know how things really work, study them when they're coming apart."
    "The human sensory system is a lot more complex and weird than most people realize."
    "Time moves in one direction, memory in another."
    "The only thing that keeps you sane is to think that it's all a bad dream."
    "We're an information economy. They teach you that in school. What they don't tell you is that it's impossible to move, to live, to operate at any level without leaving traces, bits, seemingly meaningless fragments of personal information."
    "We monitor many frequencies. We listen always. Came a voice, out of the babel of tongues, speaking to us. It played us a mighty dub."
    "Secrets are not the same as surprises."
    "Neuromancer. The lane to the land of the dead."],
   :eleven-labs-api-key nil,
   :modes
   {:pre
    [:pre
     {:style
      {:color :theme/editor-outer-rim-color,
       :background-color "#00000000",
       :border "none",
       :text-shadow "4px 4px 4px #00000088",
       :font-size "17px",
       :font-family :theme/monospaced-font}}
     [:string3 :*data]],
    :edn [:edn :*data],
    :text [:console :*data],
    :terminal [:terminal :*data],
    :data [:data-viewer :*data],
    :pretty [:pretty-box :*data],
    :rowset [:honeycomb {:select [:*], :from {:data :*data}} 11 9],
    :clover [:box :child :*data]},
   :kits {},
   :clover-templates
   {:color-theft
    {:args [:*input],
     :body
     [:data-viewer [:run-solver [:get-my-colors {:input-image-path :*input}]]]},
    :pretty-box
    {:args [:*input],
     :body
     [:box
      :size
      "auto"
      :align
      :center
      :justify
      :center
      :style
      {:color :theme/editor-outer-rim-color,
       :font-size [:auto-size-px [:string3 :*input]]}
      :child
      [:string3 :*input]]},
    :clj
    {:args [:code],
     :body
     [:run-solver
      {:signal false, :cache? false, :type :clojure, :input-map {}, :data :code}]},
    :clj2
    {:args [:code],
     :body
     [:run-solver
      {:signal false, :cache? false, :type :clojure2, :input-map {}, :data :code}]},
    :cheese-burger
    {:args [:x],
     :body
     [:box
      :style
      {:color "yellow", :font-size "23px"}
      :child
      [:string3 :x "CHEESEBURGER!"]]}},
   :eleven-labs-default-voice-name "Not OG Buffy",
   :debug-level 1,
   :screens
   ["GGGeat-ochre-mole-exiled-from-abyssal-plain"
    "SSSSSSuccessful-oval-sea-urchin-of-mountain-range"
    "SSuccessful-oval-sea-urchin-of-mountain-range"
    "aaa-run-amok"
    "aaaaah-esday-the-day"
    "aaaaah-wednesday-the-day"
    "aaaah-wednesday-the-day"
    "alarm-clock-tv"
    "alarm-clock1"
    "alarm-clock2"
    "alarm-clock22"
    "alarm-clock23"
    "alice-puzzle-1"
    "asdasdasdasd"
    "autumn-theme"
    "battle-mage"
    "bigfoot-snapshots"
    "bigfoot-snapshots2"
    "bigfoot-snapshots3"
    "blackberries"
    "blackberries2"
    "blackberries3"
    "blackberries3-narrow"
    "blackberries3-narrow2"
    "blank-blue"
    "blank-sizzle"
    "blank-sizzle2"
    "blue-pines"
    "boston-test-10-3-23"
    "broken-jacket"
    "bunch of bullshit"
    "bunch of bullshit2"
    "bunch of bullshit4"
    "caliope"
    "calliope"
    "canvas-scrubber-test1"
    "capecod-viking"
    "chaos simple"
    "chaos-views"
    "chompers"
    "claude-testing2"
    "clean-grey-defaults"
    "code-data-literal-stonks-test"
    "conifer-boughs"
    "counting-lord-of-the-woods"
    "crazy-alice"
    "dark-crested-jackelope"
    "data-literals-test-sunday"
    "data-literals-test-sundaydd"
    "demo-dark-pumpkin-bkgrd-sept23"
    "demo-light-bkgrd-sept23"
    "demo-lime-green-slime"
    "desktops-and-broomsticks"
    "duality-of-lepus"
    "duality-of-lepus33"
    "error-monitor"
    "error-monitor-vanessa"
    "error-monitor-vanessa2"
    "error-monitor-vanessa3"
    "error-monitor-vanessa4"
    "error-monitor-vanessa5"
    "evil-main-street"
    "fake-books-1"
    "fake-bricks"
    "fetching-pentagonal-termite-of-tghe-submarine-canyon"
    "final-fantasy-dorchester"
    "fox-hills"
    "game-of-life"
    "glass-fish-board-test"
    "green-storm-city"
    "hue-board-1"
    "late-winter-theme"
    "lavender-side-eye"
    "layout-test-1"
    "layout-test-12"
    "light-theme"
    "literal-data-test"
    "looking-glass-conway"
    "looking-glass-redux"
    "looking-glass-redux-conway2"
    "looking-glass-redux-mix5"
    "looking-glass-redux-test"
    "looking-glass-redux-viking"
    "looking-glass-redux-viking2"
    "looking-glass-redux2"
    "looking-glass-redux23a"
    "looking-glass-redux23abb"
    "looking-glass-redux23b"
    "looking-glass-redux2a"
    "looking-glass-redux2aa"
    "looking-glass-redux45"
    "looking-glass-redux79"
    "looking-glass-sine-wave"
    "luck-of-the-irish"
    "mapbox-test"
    "may-20"
    "my-goodness"
    "my-goodness-the-sequel"
    "neverwinter-amy"
    "night-city-never-sleeps"
    "nightcity-cape-cod"
    "nivo-getting-better!"
    "nivo-hacking-2023"
    "nivo-hacking-2023333"
    "nivo-hacking-october-2nd"
    "nostromo-console"
    "old-defaults"
    "old-fashioned-christmas"
    "old-town-snow-stars"
    "pensive-look"
    "pensive-look2"
    "pine-wood-dawn"
    "pink-and-green-elk"
    "pink-dusk-falls"
    "pinup-rabbit-fields"
    "pomp-girl1"
    "pomp-girl2"
    "poor-touring-me"
    "pres-sql-test-1"
    "purple-dusk-old-town"
    "purple-nightshades"
    "purple-techno-sunset"
    "recharts-test-blocks"
    "refresh-test"
    "repl-tests-3"
    "retro-machines"
    "riffle-test"
    "server-stats"
    "server-stats2"
    "server-stats2a"
    "sick-of-your-shit"
    "sizzle-board-1"
    "sneaky-swamp-creatures1"
    "solver-test"
    "stop-drawing-dead-dashboards"
    "swamp-nightgown"
    "swamp-reacher"
    "system-monitor"
    "system-monitor2"
    "tallica-param-test2"
    "tangerine-dreams"
    "technicolor-shanny"
    "the-future-soon"
    "the-generated-lass"
    "the-generated-lass-glow"
    "the-generated-lass-ne"
    "the-generated-lass-sgt"
    "the-generated-lassff"
    "the-memo"
    "the-memo2"
    "the-outer-blues"
    "trad-hybrid"
    "tweet-bigfoot-is-blurry"
    "tweet-demo-thing-bigfoot-is-blurry"
    "unnamed-screen!"
    "viking-pastels"
    "weave-test"
    "weave-test1"
    "weave-test122"
    "who ya gonna call?"
    "who ya gonna call? again"
    "winter-theme"
    "winter-theme-choom"
    "winter-theme2"
    "winter-theme33"
    "winter-theme45"
    "winter-theme47"
    "winter-twin-peaks"
    "witchy425"
    "wonderland-horror-interface"
    "wow-board"]}},
 :runstreams {"a-random-wow" {:open? true, :open-outputs? true}},
 :editor? true,
 :buffy? false,
 :memory [181254522 161634070 4294705152],
 :sched
 {:client-memory-drag-36 387,
  :gen-viz-516 387,
  :client-stats-drag-36 231,
  :new-query 417},
 :client-name :delightful-puce-codfish-41,
 :flow-editor? true,
 :openai-api-key "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",
 :window {:w 2374, :h 1518},
 :implicit-rowsets {:solver [:new-clojure-2 :new-clojure-3 nil]},
 :post-meta
 {:client-memory-drag-36 {:* {:rowcount 12}},
  :gen-viz-516 {:* {:rowcount 12}},
  :new-query {:* {:rowcount 1}},
  :fields-sys {:* {:rowcount 0}}},
 :status
 {:heartbeat
  {:kick
   [:flow-status/live-scratch-flow>*running? :flow-status/a-random-wow>*running?]},
  :alert1 {:alerts :alert2}},
 :screen-name "repl-demo-july23",
 :recos-page2 0,
 :selected-tab "Persian blue cat",
 :col-names nil,
 :snapshots nil,
 :openai-org-id "org-YLngjih2M4oju0tnnZtKCAYg",
 :alerts
 [[[:box
    :child
    "sent screen save request to server... Please wait."
    :style
    {:font-size "12px", :opacity 0.66}]
   11
   0.5
   503
   -1247625457]],
 :recos-page 0,
 :rs-overrides-hashmap {"a-random-wow" nil},
 :base-sniff-queries {:client_memory -1981695802, :client_stats -175748261},
 :elevenlabs-api-key "f74e20dec69741c2d51663cbd8cd4cf6",
 :user-params-hash -1507588010,
 :grid-recos? true,
 :resolved-queries
 {:client-memory-drag-36
  {:select
   [:client_name
    :recent_messages_per_second
    :messages_per_second
    :mem_used
    :batches
    :packets
    :ts],
   :where [:= :client_name :*client-name-str],
   :from [[:client_memory :ee183]],
   :refresh-every 200,
   :cache? false,
   :_last-run "21:23:00",
   :order-by [[:mem_time :desc]],
   :col-widths {:batches 131, :packets 131, :ts 151}},
  :gen-viz-516
  {:cache? false,
   :where [:= :client_name :*client-name-str],
   :limit 50,
   :group-by [:ts],
   :_last-run "21:23:00",
   :refresh-every 200,
   :from
   [{:select
     [:client_name
      :recent_messages_per_second
      :messages_per_second
      :mem_used
      :batches
      :packets
      :ts],
     :where [:= :client_name :*client-name-str],
     :from [[:client_memory :ee183]],
     :order-by [[:mem_time :desc]]}],
   :order-by [[:ts :desc]],
   :connection-id "system-db",
   :select
   [[[[:sum :mem_used]] :mem_used]
    [[:sum :recent_messages_per_second] :messages_per_second]
    :ts],
   :post-process-fn
   (fn [x]
     (vec
       (reverse
         (for [row x] (assoc row :mb (int (/ (get row :mem_used) 1048576)))))))},
  :client-stats-drag-36
  {:select
   [:ack
    :client_latency
    :client_name
    :last_seen
    :last_seen_seconds
    :memory
    :recent_messages_per_second
    :push
    :queue_distro
    :server_subs
    :uptime],
   :from [[:client_stats :gg588]],
   :refresh-every 210,
   :cache? false,
   :_last-run "21:21:29",
   :col-widths
   {:ack 81,
    :client_latency 141,
    :client_name 261,
    :memory 81,
    :push 91,
    :server_subs 111,
    :uptime 201,
    :last_seen 171},
   :order-by [[:last_seen_seconds :asc]],
   :style-rules
   {[:* :highlight-8717]
    {:logic [:= :client_name :*client-name-str],
     :style {:border "1px solid #cac18255"}}}},
  :new-query
  {:cache? false,
   :where [:= :client_name :*client-name-str],
   :limit 26,
   :group-by [2],
   :_last-run "21:23:31",
   :refresh-every 230,
   :from
   [{:select
     [:client_name
      :recent_messages_per_second
      :messages_per_second
      :mem_used
      :batches
      :packets
      :ts],
     :where [:= :client_name :*client-name-str],
     :from [[:client_memory :ee183]],
     :order-by [[:mem_time :desc]]}],
   :order-by [[:ts :desc]],
   :connection-id "system-db",
   :select [[[[:avg :mem_used]] :mem_used] [[:substring :ts 1 13] :ts_hour]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:mem_used 0})
           row
           (get rx idx {:mem_used 0})
           pre-mb
           (/ (get prev-row :mem_used) 1048576)
           mb
           (/ (get row :mem_used) 1048576)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))}},
 :panels
 {:block-6720
  {:h 10,
   :w 11,
   :views {:editor-block-3661-hare-vw [:editor [:block-3661 :views :hare-vw]]},
   :name "editor-block-3661-hare-vw",
   :root [33 3],
   :tab "effective pheasant"},
  :block-8670
  {:h 2,
   :w 12,
   :root [28 21],
   :tab "some client stats w recharts",
   :selected-view :hi,
   :name "block-8670",
   :views
   {:hi
    [:box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "27px",
      :font-weight 700,
      :padding-right "20px",
      :padding-top "6px",
      :color "#cac182",
      :transition "all 0.6s ease-in-out"}
     :child
     [:string ["" :client/*client-name*>stats>client-name]]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-7377
  {:name "block-7377",
   :w 5,
   :style {:background-color "#00000075"},
   :selected-view :cell-drop-5164,
   :root [23 21],
   :h 2,
   :queries {},
   :tab "some client stats w recharts",
   :ghosted? true,
   :views
   {:cell-drop-5164
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "35px",
      :color "#82ca9d",
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :client-memory-drag-36/packets.0]]
      [:box
       :style
       {:font-size "14px", :margin-top "-10px"}
       :child
       "client packets"]]]}},
  :block-6441
  {:h 2,
   :w 13,
   :root [1 17],
   :tab "some client stats w recharts",
   :selected-view :hi,
   :name "block-6441",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-3341.:hi"}
     :style
     {:font-size "38px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color "#cac182",
      :font-family :theme/base-font}
     :child
     [:string :time/now]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-3840
  {:clojure
   {:new-clojure-3
    (do
      (ns rvbbit-backend.websockets)
      (let [tt :time/minute]
        (vec
          (keys
            (get-in
              (deref client-metrics)
              [(first (keys (deref client-metrics))) 0])))))},
   :name "block-3840",
   :w 8,
   :selected-mode {:new-clojure-3 :data},
   :selected-view :hare-vw-10,
   :root [44 21],
   :h 7,
   :queries {},
   :tab "beige whale",
   :minimized? false,
   :views {}},
  :block-3661
  {:h 4,
   :w 9,
   :root [13 3],
   :tab "effective pheasant",
   :selected-view :hare-vw,
   :name "block-3661",
   :views
   {:hare-vw
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-3661.:hi"}
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "YOOO"]},
   :queries {}},
  :block-7453
  {:name "block-7453",
   :w 5,
   :style {:background-color "#00000075"},
   :selected-view :cell-drop-2732,
   :root [23 23],
   :h 2,
   :queries {},
   :tab "some client stats w recharts",
   :ghosted? true,
   :views
   {:cell-drop-2732
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "35px",
      :color "#82ca9d",
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :client-memory-drag-36/batches.0]]
      [:box
       :style
       {:font-size "14px", :margin-top "-10px"}
       :child
       "client batches"]]]}},
  :block-3108
  {:h 4,
   :w 22,
   :connection-id "system-db",
   :name "select-all-client_memory",
   :queries
   {:client-memory-drag-36
    {:select
     [:client_name
      :recent_messages_per_second
      :messages_per_second
      :mem_used
      :batches
      :packets
      :ts],
     :where [:= :client_name :*client-name-str],
     :from [[:client_memory :ee183]],
     :refresh-every 200,
     :cache? false,
     :_last-run "21:23:00",
     :order-by [[:mem_time :desc]],
     :col-widths {:batches 131, :packets 131, :ts 151}}},
   :root [1 21],
   :tab "some client stats w recharts",
   :selected-view :client-memory-drag-36},
  :block-6003
  {:h 4,
   :w 7,
   :root [7 13],
   :tab "some client stats w recharts",
   :selected-view :hi,
   :name "block-6003",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-6003.:hi"}
     :style
     {:font-size "95px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color "#cac182",
      :font-family :theme/base-font}
     :child
     [:string :signal/cool-raccoon-signal-yo]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}],
    :params {:my-dash-killswitch? true}},
   :queries {}},
  :block-9713
  {:h 4,
   :w 9,
   :root [4 3],
   :tab "effective pheasant",
   :selected-view :hare-vw,
   :name "block-9713",
   :views
   {:hare-vw
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-9713.:hi"}
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "Itsdfsdfsdf's fsdfsdfsdfa perfect day for planting seeds and planning adventures!"]},
   :queries {}},
  :block-2505
  {:name "client latency callout",
   :w 5,
   :style {:background-color "#00000075"},
   :selected-view :hi,
   :root [35 7],
   :h 3,
   :queries {},
   :tab "some client stats w recharts",
   :ghosted? true,
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color "#82ca9d",
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :client/*client-name*>stats>client-latency]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "client latency (ms)"]]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}},
  :block-5659
  {:name "block-5659",
   :w 5,
   :style {:background-color "#00000075"},
   :selected-view :hi,
   :root [35 10],
   :h 3,
   :queries {},
   :tab "some client stats w recharts",
   :ghosted? true,
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color "#82ca9d",
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:string :client/*client-name*>stats>messages-per-second]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "messages/sec (all)"]]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}},
  :block-3053
  {:h 8,
   :w 14,
   :views
   {:editor-block-4118-new-clojure-1
    [:editor [:block-4118 :clojure :new-clojure-1]]},
   :name "editor-block-4118-new-clojure-1",
   :root [8 10],
   :tab "effective pheasant"},
  :block-2935
  {:h 10,
   :w 11,
   :views {:editor-block-9713-hare-vw [:editor [:block-9713 :views :hare-vw]]},
   :name "editor-block-9713-hare-vw",
   :root [22 3],
   :tab "effective pheasant"},
  :block-721
  {:clojure
   {:new-clojure
    (do
      (ns rvbbit-backend.websockets)
      (let [timer :signal/every-30-seconds? cw :col-width]
        (println cw)
        (draw-client-stats
          :new-clojure-2.*/client-name
          (sort (or :hare-vw-7.*/vec-val []))
          (or :new-clojure-3.*/data-viewer [])
          true
          cw)))},
   :name "block-721",
   :w 39,
   :selected-mode {:new-clojure :terminal},
   :selected-view :new-clojure,
   :root [1 1],
   :h 30,
   :display {:new-clojure :output},
   :queries {},
   :tab "beige whale",
   :minimized? false,
   :views {}},
  :block-4481
  {:name "block-4481",
   :w 3,
   :selected-mode {:hare-vw-7 :rowset},
   :selected-view :hare-vw-7,
   :root [41 21],
   :h 7,
   :queries {},
   :tab "beige whale",
   :views {:hare-vw-7 [1 15 30 45 60 90 120 200 600]}},
  :block-9994
  {:name "block-9994",
   :w 5,
   :style {:background-color "#00000075"},
   :selected-view :cell-drop-11937,
   :root [35 1],
   :h 3,
   :queries {},
   :tab "some client stats w recharts",
   :ghosted? true,
   :views
   {:cell-drop-11937
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color "#82ca9d",
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:string :client/*client-name*>stats>recent-messages-per-second]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "messages/sec (recent)"]]]}},
  :block-4424
  {:h 2,
   :w 13,
   :root [1 19],
   :tab "some client stats w recharts",
   :selected-view :cell-drop-4478,
   :name "block-4424",
   :views
   {:cell-drop-4478
    [:box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "23px",
      :font-weight 700,
      :color "#cac182",
      :padding-right "20px",
      :transition "all 0.6s ease-in-out"}
     :child
     [:string ["uptime: " :client/*client-name*>stats>uptime]]]},
   :queries {}},
  :block-9432
  {:h 8,
   :w 12,
   :views
   {:editor-block-721-new-clojure [:editor [:block-721 :clojure :new-clojure]]},
   :name "editor-block-721-new-clojure",
   :root [41 1],
   :tab "beige whale",
   :clojure {}},
  :block-285
  {:name "block-285",
   :w 5,
   :style {:background-color "#00000075"},
   :selected-view :cell-drop-7398,
   :root [35 4],
   :h 3,
   :queries {},
   :tab "some client stats w recharts",
   :ghosted? true,
   :views
   {:cell-drop-7398
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "60px",
      :color "#8884d8",
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :client/*client-name*>stats>memory]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "js used heap (mb)"]]]}},
  :block-12050
  {:name "block-12050",
   :w 34,
   :selected-view :every-45-seconds,
   :root [1 1],
   :h 6,
   :connection-id "system-db",
   :queries
   {:gen-viz-516
    {:cache? false,
     :where [:= :client_name :*client-name-str],
     :limit 50,
     :group-by [:ts],
     :_last-run "21:23:00",
     :refresh-every 200,
     :from [:query/client-memory-drag-36],
     :order-by [[:ts :desc]],
     :connection-id "system-db",
     :select
     [[[[:sum :mem_used]] :mem_used]
      [[:sum :recent_messages_per_second] :messages_per_second]
      :ts],
     :post-process-fn
     (fn [x]
       (vec
         (reverse
           (for [row x] (assoc row :mb (int (/ (get row :mem_used) 1048576)))))))}},
   :tab "some client stats w recharts",
   :views
   {:every-45-seconds
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data :gen-viz-516,
       :style {:font-family :theme/base-font},
       :margin {:top 5, :bottom 5, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "0 0", :opacity 0}]
      [:>
       :Tooltip
       {:content-style
        {:background-color "#00000099",
         :font-weight 700,
         :border "1px solid transparent",
         :border-radius "4px"}}]
      [:> :XAxis {:dataKey :ts}]
      [:>
       :YAxis
       {:yAxisId "left",
        :label
        {:value "MB",
         :angle -90,
         :fill "#8884d8",
         :style {:font-size "20px", :font-weight 700},
         :position "middle",
         :dx -25},
        :domain ["auto" "auto"]}]
      [:>
       :YAxis
       {:yAxisId "right",
        :label
        {:value "Messages per Second",
         :angle 90,
         :fill "#82ca9d",
         :style {:font-weight 700, :font-size "15px"},
         :position "middle",
         :dx 20},
        :domain ["auto" "auto"],
        :orientation "right"}]
      [:>
       :Line
       {:isAnimationActive false,
        :dataKey :mb,
        :type "monotone",
        :yAxisId "left",
        :stroke-width 3,
        :stroke "#8884d8",
        :activeDot {:r 8}}]
      [:>
       :Bar
       {:isAnimationActive false,
        :dataKey :messages_per_second,
        :yAxisId "right",
        :fill "#00000000",
        :stroke-width 3,
        :stroke "#82ca9d"}]]]}},
  :block-2310
  {:h 8,
   :w 4,
   :views
   {"console-out"
    [:console :solver-meta/raw-custom-override-1629024070>output>evald-result>out]},
   :name "console :solver/raw-custom-override-1629024070",
   :root [4 10],
   :tab "effective pheasant"},
  :block-2618
  {:h 8,
   :w 26,
   :connection-id "system-db",
   :name "select-all-client_stats",
   :queries
   {:client-stats-drag-36
    {:select
     [:ack
      :client_latency
      :client_name
      :last_seen
      :last_seen_seconds
      :memory
      :recent_messages_per_second
      :push
      :queue_distro
      :server_subs
      :uptime],
     :from [[:client_stats :gg588]],
     :refresh-every 210,
     :cache? false,
     :_last-run "21:21:29",
     :col-widths
     {:ack 81,
      :client_latency 141,
      :client_name 261,
      :memory 81,
      :push 91,
      :server_subs 111,
      :uptime 201,
      :last_seen 171},
     :order-by [[:last_seen_seconds :asc]],
     :style-rules
     {[:* :highlight-8717]
      {:logic [:= :client_name :*client-name-str],
       :style {:border "1px solid #cac18255"}}}}},
   :root [14 13],
   :tab "some client stats w recharts"},
  :block-3261
  {:h 3,
   :w 6,
   :tab "effective pheasant",
   :root [23 14],
   :name ":hare-v23232w/vec-val",
   :views
   {:param-val
    [:box
     :align
     :center
     :justify
     :center
     :padding
     "13px"
     :style
     {:font-size "45px"}
     :child
     [:string :hare-v23232w/vec-val]]},
   :queries {}},
  :block-2178
  {:h 6,
   :w 34,
   :root [1 7],
   :tab "some client stats w recharts",
   :selected-view :every-10-min-avg,
   :name "block-2178",
   :views
   {:every-10-min-avg
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :BarChart
      {:data :new-query,
       :style {:font-family :theme/base-font},
       :margin {:top 25, :right 30, :left 20, :bottom 5}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0}]
      [:>
       :Tooltip
       {:content-style
        {:background-color "#00000099",
         :font-weight 700,
         :border "1px solid transparent",
         :border-radius "4px"}}]
      [:> :XAxis {:dataKey :ts_hour}]
      [:> :YAxis {:domain ["auto" "auto"]}]
      [:>
       :Bar
       {:isAnimationActive false,
        :dataKey :mem_used,
        :stroke "#8884d8",
        :stroke-width 3,
        :fill "#8884d801"}
       [:>
        :LabelList
        {:dataKey :diff,
         :fill "#8884d8",
         :style {:font-size "18px", :font-weight 700},
         :position "top"}]]]]},
   :queries
   {:new-query
    {:cache? false,
     :where [:= :client_name :*client-name-str],
     :limit 26,
     :group-by [2],
     :_last-run "21:23:31",
     :refresh-every 230,
     :from [:query/client-memory-drag-36],
     :order-by [[:ts :desc]],
     :connection-id "system-db",
     :select [[[[:avg :mem_used]] :mem_used] [[:substring :ts 1 13] :ts_hour]],
     :post-process-fn
     (fn [x]
       (vec
         (for
           [idx
            (range (count x))
            :let
            [rx
             (vec (reverse x))
             prev-row
             (get rx (- idx 1) {:mem_used 0})
             row
             (get rx idx {:mem_used 0})
             pre-mb
             (/ (get prev-row :mem_used) 1048576)
             mb
             (/ (get row :mem_used) 1048576)
             diff
             (Math/round (- mb pre-mb))
             pos
             (cond (> diff 0) "+" (< diff 0) "" :else "")]]
           (merge
             row
             {:diff
              (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))}}},
  :block-6633
  {:h 3,
   :w 9,
   :tab "effective pheasant",
   :root [30 14],
   :name ":hare-v23232w.*/vec-val",
   :views
   {:multi-param-vals
    [:box
     :align
     :center
     :justify
     :center
     :padding
     "13px"
     :style
     {:font-size "30px"}
     :child
     [:h-box :gap "9px" :children :hare-v23232w.*/vec-val]]},
   :queries {}},
  :block-12288
  {:h 4,
   :w 6,
   :root [1 13],
   :tab "some client stats w recharts",
   :selected-view :hi,
   :name "block-12288",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-12288.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color "#cac182",
      :font-family :theme/base-font}
     :child
     [:string :time/second]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-4118
  {:clojure
   {:new-clojure-1
    (do
      (let [clojure-version (clojure-version)
            jvm-version (System/getProperty "java.version")]
        (Thread/sleep 3400)
        (doseq [e (range 222)] (println "yoo! " e))
        (str
          "🐇🥕 Baby!! Internal RVBBIT nREPL. Clojure "
          clojure-version
          " on "
          jvm-version
          " JVM tech"
          " 🥕🐇")))},
   :name "block-4118",
   :w 18,
   :selected-view :new-clojure-1,
   :root [4 7],
   :h 3,
   :queries {},
   :tab "effective pheasant",
   :views
   {:hare-vw
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-4118.:hi"}
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "It's a perfect day for planting seeds and planning adventures!"]}},
  :block-11015
  {:clojure
   {:new-clojure-2
    (do
      (ns rvbbit-backend.websockets)
      (let [timer :signal/every-30-seconds?]
        (vec
          (for
            [[k v] (deref client-metrics)]
            {:client-name k, :ticks (count v)}))))},
   :name "block-11015",
   :w 11,
   :selected-mode {:new-clojure-2 :rowset},
   :selected-view :new-clojure-2,
   :root [41 12],
   :h 8,
   :queries {},
   :tab "beige whale",
   :minimized? false,
   :views
   {:hare-vw
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-11015.:hi"}
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "It's a perfect day for planting seeds and planning adventures!"]}}},
 :selected-block "none!",
 :theme-colors-hashmap
 {"float" "#2A3959",
  "boolean" "#13283E",
  "map" "#536D82",
  "list" "#1F374E",
  "string" "#484F71",
  "vector" "#6B6B87",
  "keyword" "#C6DDAE",
  "rabbit-code" "#3E5970",
  "datetime" "#94939A",
  "integer" "#2D485F",
  "unknown" "#D510BBB",
  "date" "#A2AFB7",
  "nil" "#13283E"},
 :click-param
 {:new-clojure-3.* {:data-viewer [:mem-mb]},
  :blocks-sys
  {:block_key ":*theme*",
   :block_name "(meta: this screen's theme)",
   :queries 0,
   :views 27,
   :block_data
   "{:codemirror-theme \"ayu-dark\", :editor-param-background-color \"#000000\", :base-block-style {:backdrop-filter \"blur(2px) brightness(70%) \"}, :vega-defaults {:view {:stroke \"transparent\"}, :axis {:domainColor \"#ffffff22\", :grid true, :font \"Lato\", :labelColor \"#ffffff88\", :titleFont \"Lato\", :titleColor \"#ffffff99\", :labelFont \"Lato\", :domain false, :gridColor \"#ffffff22\", :tickColor \"#ffffff22\", :axisFont \"Lato\"}, :legend {:labelFont \"Lato\", :legendFont \"Lato\", :labelColor \"#ffffff99\", :titleColor \"#ffffff99\", :stroke \"#ffffff99\", :titleFont \"Lato\"}, :header {:labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}, :mark {:font \"Lato\"}, :title {:font \"Lato\", :subtitleFont \"Lato\", :labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}}, :grid-selected-column-css {:background-color \"#00000088\", :filter \"brightness(200%)\"}, :base-block-color-selected \"#00030a\", :block-title-font-color \"#ffffff\", :base-block-color \"#05041182\", :editor-rim-color \"#297fb8\", :base-block-filter-selected \"drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)\", :vega-default-color-scheme {:scheme \"pastel2\"}, :data-colors {\"float\" \"#2A3959\", \"boolean\" \"#13283E\", \"map\" \"#536D82\", \"list\" \"#1F374E\", \"string\" \"#484F71\", \"vector\" \"#6B6B87\", \"keyword\" \"#C6DDAE\", \"rabbit-code\" \"#3E5970\", \"datetime\" \"#94939A\", \"integer\" \"#2D485F\", \"unknown\" \"#D510BBB\", \"date\" \"#A2AFB7\", \"nil\" \"#13283E\"}, :editor-grid-selected-font-color \"#000000\", :monospaced-font \"JetBrains Mono\", :editor-grid-selected-background-color \"#b8b2bb\", :nivo-defaults {:font-family \"Instagram Sans\", :labels {:text {:fill \"#ffffff\", :font-size \"16px\", :font-family \"Instagram Sans\", :font-weight 700}}, :tooltip {:container {:background \"#000\", :color \"#ffffff\", :text {:fill \"#eeeeee\"}, :fontSize \"18px\", :borderRadius \"4px\", :boxShadow \"0 1px 2px rgba(0, 0, 0, 0.55)\", :padding \"5px 9px\"}, :basic {:whiteSpace \"pre\", :display \"flex\", :alignItems \"center\"}, :tableCell {:padding \"3px 5px\"}}, :axis {:legend {:text {:fill \"#ffffff\", :font-size \"14px\", :font-family \"Instagram Sans\", :font-weight 700}}, :ticks {:line {:stroke \"#ffffff60\"}, :text {:fill \"#ffffff60\", :font-weight 700}}}, :grid {:line {:stroke \"#ffffff\", :strokeWidth 0, :strokeDasharray \"0 0\"}}}, :editor-outer-rim-color \"#297fb8\", :grid-selected-font-color \"#000000\", :block-title-selected-font-color \"#ffffff\", :grid-selected-background-color \"#a3d3ff\", :grid-font-color \"#ffffff\", :canvas-background-css {:background-image \"url(images/b64-decoded-9884793-8k-4k.png)\", :transition \"all 0.8s ease-in-out\", :background-size \"cover\", :background-color \"#424f57\"}, :editor-font-color \"#ffffff\", :base-font \"Instagram Sans\", :block-tab-selected-font-color \"#c9d1ff\", :editor-background-color \"#000006\", :editor-grid-font-color \"#ffffff\"}",
   :view_names
   ":codemirror-theme :editor-param-background-color :base-block-style :vega-defaults :grid-selected-column-css :base-block-color-selected :block-title-font-color :base-block-color :editor-rim-color :base-block-filter-selected :vega-default-color-scheme :data-colors :editor-grid-selected-font-color :monospaced-font :editor-grid-selected-background-color :nivo-defaults :editor-outer-rim-color :grid-selected-font-color :block-title-selected-font-color :grid-selected-background-color :grid-font-color :canvas-background-css :editor-font-color :base-font :block-tab-selected-font-color :editor-background-color :editor-grid-font-color",
   :query_names ""},
  :block-4699 {},
  :tables-sys
  {:db_schema "none",
   :db_catalog nil,
   :connection_id "system-db",
   :schema_cat nil,
   :table_name "client_stats",
   :fields 16},
  :clover-hop.* {},
  :flow {:live-scratch-flow>*running? false, :a-random-wow>*running? false},
  :flows-sys
  {:flow_id "a-random-wow",
   :file_path "./flows/a-random-wow.edn",
   :last_modified "2024-04-08 19:19:47"},
  :files-sys
  {:file_path "./screens/blue-pines.edn",
   :screen_name "blue-pines",
   :blocks 3,
   :queries 0,
   :ts "2024-03-24 00:18:04"},
  :time {:second 53, :now "Tuesday, July 23rd 7:24PM", :minute 24},
  :clover-hop {},
  :viz-tables-sys2 {:table_name :client-memory-drag-36},
  :client-stats-drag-36
  {:server_subs 27,
   :push 97209,
   :recent_messages_per_second 13.8,
   :uptime "2 hours, 1 minute, 16 seconds",
   :last_seen_seconds 14,
   :memory "1200.4949",
   :queue_distro "nil",
   :styler_highlight_8717 0,
   :client_latency 634,
   :ack 486,
   :client_name ":adventurous-magenta-jellyfish-13",
   :last_seen "14 seconds"},
  :client
  {:friendly-wide-grasshopper-40>stats>client-name nil,
   :genius-thin-sea-urchin-30>stats>memory 262,
   :good-sapphire-hyena-18>stats>uptime nil,
   :friendly-wide-grasshopper-40>stats>memory nil,
   :spirited-jungle-green-rat-27>stats>recent-messages-per-second nil,
   :*client-name*>stats>messages-per-second 3.08,
   :fabulous-lime-hedgehog-39>stats>uptime nil,
   :fabulous-lime-hedgehog-39>stats>client-name nil,
   :good-sapphire-hyena-18>stats>recent-messages-per-second nil,
   :satisfactory-octohedral-cheetah-26>stats>memory nil,
   :familiar-prismatic-woodpecker-22>stats>uptime nil,
   :*client-name*>stats>client-name ":delightful-puce-codfish-41",
   :delightful-puce-codfish-41>stats>messages-per-second nil,
   :fabulous-lime-hedgehog-39>stats>messages-per-second nil,
   :satisfactory-octohedral-cheetah-26>stats>recent-messages-per-second nil,
   :familiar-prismatic-woodpecker-22>stats>memory nil,
   :fabulous-lime-hedgehog-39>stats>recent-messages-per-second nil,
   :thrilling-icosahedral-raccoon-3>stats>messages-per-second nil,
   :graceful-star-shaped-opossum-5>stats>uptime nil,
   :attractive-rhomboidal-otter-29>stats>uptime nil,
   :stellar-viridian-bee-26>stats>memory nil,
   :stellar-viridian-bee-26>stats>recent-messages-per-second nil,
   :delightful-puce-codfish-41>stats>recent-messages-per-second 0.07,
   :genius-rectangular-ostrich-17>stats>recent-messages-per-second nil,
   :constant-lime-wombat-41>stats>memory nil,
   :graceful-star-shaped-opossum-5>stats>client-name nil,
   :spirited-jungle-green-rat-27>stats>memory nil,
   :wealthy-thin-lark-35>stats>uptime nil,
   :genius-rectangular-ostrich-17>stats>uptime nil,
   :genius-thin-sea-urchin-30>stats>uptime "5 minutes, 13 seconds",
   :attractive-rhomboidal-otter-29>stats>memory nil,
   :friendly-wide-grasshopper-40>stats>recent-messages-per-second nil,
   :wealthy-thin-lark-35>stats>client-name nil,
   :graceful-star-shaped-opossum-5>stats>memory nil,
   :genius-rectangular-ostrich-17>stats>messages-per-second nil,
   :genius-rectangular-ostrich-17>stats>client-latency nil,
   :thrilling-icosahedral-raccoon-3>stats>client-latency nil,
   :spirited-jungle-green-rat-27>stats>uptime nil,
   :delightful-puce-codfish-41>stats>uptime nil,
   :constant-lime-wombat-41>stats>uptime nil,
   :fabulous-lime-hedgehog-39>stats>memory nil,
   :delightful-puce-codfish-41>stats>client-name nil,
   :good-sapphire-hyena-18>stats>client-latency nil,
   :friendly-wide-grasshopper-40>stats>messages-per-second nil,
   :good-sapphire-hyena-18>stats>messages-per-second nil,
   :good-sapphire-hyena-18>stats>client-name nil,
   :satisfactory-octohedral-cheetah-26>stats>uptime nil,
   :familiar-prismatic-woodpecker-22>stats>recent-messages-per-second nil,
   :attractive-rhomboidal-otter-29>stats>client-latency nil,
   :constant-lime-wombat-41>stats>recent-messages-per-second nil,
   :wealthy-thin-lark-35>stats>client-latency nil,
   :genius-rectangular-ostrich-17>stats>memory nil,
   :familiar-prismatic-woodpecker-22>stats>client-name nil,
   :stellar-viridian-bee-26>stats>uptime nil,
   :wealthy-thin-lark-35>stats>memory nil,
   :*client-name*>stats>memory 151.3992,
   :friendly-wide-grasshopper-40>stats>client-latency nil,
   :fabulous-lime-hedgehog-39>stats>client-latency nil,
   :delightful-puce-codfish-41>stats>client-latency nil,
   :graceful-star-shaped-opossum-5>stats>recent-messages-per-second nil,
   :friendly-wide-grasshopper-40>stats>uptime nil,
   :good-sapphire-hyena-18>stats>memory nil,
   :attractive-rhomboidal-otter-29>stats>messages-per-second nil,
   :*client-name*>stats>recent-messages-per-second 8.4,
   :delightful-puce-codfish-41>stats>memory nil,
   :*client-name*>stats>uptime "3 minutes, 1 second",
   :familiar-prismatic-woodpecker-22>stats>client-latency nil,
   :attractive-rhomboidal-otter-29>stats>client-name nil,
   :genius-rectangular-ostrich-17>stats>client-name nil,
   :constant-lime-wombat-41>stats>client-latency nil,
   :*client-name*>stats>client-latency 894,
   :constant-lime-wombat-41>stats>client-name nil,
   :constant-lime-wombat-41>stats>messages-per-second nil,
   :familiar-prismatic-woodpecker-22>stats>messages-per-second 3.11,
   :wealthy-thin-lark-35>stats>messages-per-second nil,
   :attractive-rhomboidal-otter-29>stats>recent-messages-per-second nil,
   :wealthy-thin-lark-35>stats>recent-messages-per-second nil,
   :thrilling-icosahedral-raccoon-3>stats>client-name nil},
  :param
  {:selected-view nil,
   :selected-view-data nil,
   :selected-block :block-4699,
   :my-dash-killswitch? false,
   :upstanding-crimson-frog "new parameter value!",
   :super-cobalt-mole ["1121pm - 229mb"]},
  :theme
  {:codemirror-theme "rvbbit-dynamic",
   :editor-param-background-color "#000000",
   :base-block-style
   {:text-shadow "4px 4px 4px #00000088",
    :backdrop-filter "blur(2px) brightness(40%) "},
   :vega-defaults
   {:view {:stroke "transparent"},
    :axis
    {:domainColor "#ffffff22",
     :grid true,
     :font "Lato",
     :labelColor "#ffffff88",
     :titleFont "Lato",
     :titleColor "#ffffff99",
     :labelFont "Lato",
     :domain false,
     :gridColor "#ffffff22",
     :tickColor "#ffffff22",
     :axisFont "Lato"},
    :legend
    {:labelFont "Lato",
     :legendFont "Lato",
     :labelColor "#ffffff99",
     :titleColor "#ffffff99",
     :stroke "#ffffff99",
     :titleFont "Lato"},
    :header {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"},
    :mark {:font "Lato"},
    :title
    {:font "Lato",
     :subtitleFont "Lato",
     :labelFont "Lato",
     :titleFont "Lato",
     :titleColor "#ffffff99"}},
   :grid-selected-column-css
   {:background-color "#00000088", :filter "brightness(200%)"},
   :base-block-color-selected "#00030a",
   :block-title-font-color "#ffffff",
   :base-block-color "#05041182",
   :editor-rim-color "#297fb8",
   :base-block-filter-selected
   "drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)",
   :vega-default-color-scheme {:scheme "pastel2"},
   :data-colors
   {"float" "#2A3959",
    "boolean" "#13283E",
    "map" "#536D82",
    "list" "#1F374E",
    "string" "#484F71",
    "vector" "#6B6B87",
    "keyword" "#C6DDAE",
    "rabbit-code" "#3E5970",
    "datetime" "#94939A",
    "integer" "#2D485F",
    "unknown" "#D510BBB",
    "date" "#A2AFB7",
    "nil" "#13283E"},
   :editor-grid-selected-font-color "#000000",
   :monospaced-font "JetBrains Mono",
   :editor-grid-selected-background-color "#b8b2bb",
   :nivo-defaults
   {:font-family "Instagram Sans",
    :labels
    {:text
     {:fill "#ffffff",
      :font-size "16px",
      :font-family "Instagram Sans",
      :font-weight 700}},
    :tooltip
    {:container
     {:background "#000",
      :color "#ffffff",
      :text {:fill "#eeeeee"},
      :fontSize "18px",
      :borderRadius "4px",
      :boxShadow "0 1px 2px rgba(0, 0, 0, 0.55)",
      :padding "5px 9px"},
     :basic {:whiteSpace "pre", :display "flex", :alignItems "center"},
     :tableCell {:padding "3px 5px"}},
    :axis
    {:legend
     {:text
      {:fill "#ffffff",
       :font-size "14px",
       :font-family "Instagram Sans",
       :font-weight 700}},
     :ticks
     {:line {:stroke "#ffffff60"}, :text {:fill "#ffffff60", :font-weight 700}}},
    :grid {:line {:stroke "#ffffff", :strokeWidth 0, :strokeDasharray "0 0"}}},
   :editor-outer-rim-color "#297fb8",
   :grid-selected-font-color "#000000",
   :block-title-selected-font-color "#ffffff",
   :grid-selected-background-color "#a3d3ff",
   :grid-font-color "#ffffff",
   :canvas-background-css
   {:background-image "url(images/large/b64-image3-75023-50602-4k.webp)",
    :transition "all 0.8s ease-in-out",
    :background-blend-mode "multiply",
    :background-size "cover",
    :background-color "#424f57"},
   :editor-font-color "#ffffff",
   :base-font "Poppins",
   :block-tab-selected-font-color "#c9d1ff",
   :editor-background-color "#000006",
   :editor-grid-font-color "#ffffff"},
  :new-clojure-2.* {},
  :hare-v23232w {:vec-val :testa3},
  :connections-sys {:database_name "*cache-db*", :connection_id "system-db"},
  :hare-vw-7.* {:vec-val [200 90 45 15]},
  :sys {:selected-tab "Persian blue cat", :selected-tab-idx 4},
  :block-6551 {:clover-hop-1 nil},
  :client-memory-drag-36
  {:client_name ":friendly-wide-grasshopper-40",
   :recent_messages_per_second 2.07,
   :messages_per_second 2.81,
   :mem_used 1672912224,
   :batches 3349,
   :packets 47211,
   :ts "2024-05-13 21:53:16"},
  :hare-v23232w.* {:vec-val [:test66]}},
 :selected-flow "live-scratch-flow"}