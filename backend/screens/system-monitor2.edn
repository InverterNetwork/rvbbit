{:orders
 {:new-query (:thread_count :ts1 :ts :sys_load :used_memory_mb),
  :jvm_stats
  [:used_memory_mb
   :thread_count
   :messages
   :batches
   :recent_batches
   :recent_batches_per_second
   :batches_per_second
   :unix_ms
   :messages_per_second
   :recent_messages
   :recent_messages_per_second
   :recent_queries_run
   :recent_queries_per_second
   :queries_per_second
   :sql_cache_size
   :ws_peers
   :subscriptions
   :open_flow_channels
   :uptime_seconds
   :seconds_since_last_update
   :queries_run
   :internal_queries_run
   :sniffs_run
   :sys_load
   :ts],
  :kke192 (:query_error)},
 :reco-preview nil,
 :sql-source
 {:new-query
  {:cache? false,
   :limit 100,
   :group-by [3],
   :_last-run "21:51:46",
   :refresh-every 10,
   :from [[:jvm_stats :kke192]],
   :order-by [[2 :desc]],
   :connection-id "system-db",
   :select
   [[[:avg :thread_count] :thread_count]
    [:ts :ts1]
    [[:substr :ts 0 16] :ts]
    [[:avg :sys_load] :sys_load]
    [[:avg :used_memory_mb] :used_memory_mb]],
   :post-process-fn reverse},
  :jvm_stats
  {:select [:*], :connection-id "system-db", :from [:jvm_stats], :limit 111},
  :kke192 {:select [:*], :connection-id "system-db", :from [:kke192], :limit 111}},
 :meta
 {nil
  {:fields
   {:vec-val
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {},
     :cardinality 100}},
   :rowcount 1},
  :kke192
  {:fields
   {:query_error
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons
     {nil 1,
      "{:datasource #object[com.zaxxer.hikari.HikariDataS" 1,
      "(from database connection)" 1},
     :cardinality 100}},
   :rowcount 4},
  :new-query
  {:fields
   {:thread_count
    {:data-type "float",
     :distinct 35,
     :group-by? true,
     :commons {245.21052631578948 1, 227.05 1, 223.05 1},
     :cardinality 100},
    :ts1
    {:data-type "string",
     :distinct 35,
     :group-by? true,
     :commons
     {"2024-08-13 18:30:01" 1, "2024-08-13 23:30:01" 1, "2024-08-13 20:30:01" 1},
     :cardinality 100},
    :ts
    {:data-type "string",
     :distinct 35,
     :group-by? true,
     :commons {"2024-08-13 20:4" 1, "2024-08-13 20:0" 1, "2024-08-13 18:1" 1},
     :cardinality 100},
    :sys_load
    {:data-type "float",
     :distinct 35,
     :group-by? true,
     :commons {4.3052631578947365 1, 20.972749999999998 1, 2.6254999999999997 1},
     :cardinality 100},
    :used_memory_mb
    {:data-type "float",
     :distinct 35,
     :group-by? true,
     :commons {11046.475 1, 8479.225 1, 10555.175 1},
     :cardinality 100}},
   :rowcount 35},
  :gen-viz-797
  {:fields
   {:rows
    {:data-type "integer",
     :distinct 230,
     :group-by? false,
     :commons {76 5, 146 4, 116 4},
     :cardinality 72},
    :date_posted
    {:data-type "string",
     :distinct 317,
     :group-by? true,
     :commons {"2000-12-09" 1, "2010-08-30" 1, "2003-11-08" 1},
     :cardinality 100}},
   :rowcount 317},
  :gen-viz-94
  {:fields
   {:diff
    {:data-type "unknown",
     :distinct 1,
     :group-by? false,
     :commons {nil 1},
     :cardinality 100}},
   :rowcount 1},
  :jvm_stats
  {:fields
   {:queries_run
    {:data-type "integer",
     :distinct 101,
     :group-by? true,
     :commons {8 6, 57 2, 17 2},
     :cardinality 90},
    :recent_messages_per_second
    {:data-type "float",
     :distinct 80,
     :group-by? true,
     :commons {59.53 4, 57.6 4, 59.07 3},
     :cardinality 72},
    :uptime_seconds
    {:data-type "integer",
     :distinct 111,
     :group-by? true,
     :commons {1259 1, 390 1, 1364 1},
     :cardinality 100},
    :queries_per_second
    {:data-type "float",
     :distinct 2,
     :group-by? true,
     :commons {0 110, -8 1},
     :cardinality 1},
    :recent_batches
    {:data-type "integer",
     :distinct 111,
     :group-by? true,
     :commons {12445 1, 4487 1, 2538 1},
     :cardinality 100},
    :sql_cache_size
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {0 111},
     :cardinality 0},
    :ts
    {:data-type "string",
     :distinct 111,
     :group-by? true,
     :commons
     {"2024-08-13 18:27:46" 1, "2024-08-13 18:23:01" 1, "2024-08-13 18:08:46" 1},
     :cardinality 100},
    :subscriptions
    {:data-type "integer",
     :distinct 7,
     :group-by? true,
     :commons {162 61, 161 18, 164 15},
     :cardinality 6},
    :messages_per_second
    {:data-type "float",
     :distinct 88,
     :group-by? true,
     :commons {61.22 4, 60.89 3, 61.18 2},
     :cardinality 79},
    :messages
    {:data-type "integer",
     :distinct 111,
     :group-by? true,
     :commons {10212 1, 59842 1, 87827 1},
     :cardinality 100},
    :sniffs_run
    {:data-type "integer",
     :distinct 11,
     :group-by? true,
     :commons {21 20, 20 20, 19 18},
     :cardinality 9},
    :sys_load
    {:data-type "float",
     :distinct 79,
     :group-by? true,
     :commons {3.44 5, 1.42 4, 1.35 4},
     :cardinality 71},
    :recent_batches_per_second
    {:data-type "float",
     :distinct 39,
     :group-by? true,
     :commons {8.13 9, 8.33 8, 8.47 8},
     :cardinality 35},
    :batches
    {:data-type "integer",
     :distinct 111,
     :group-by? true,
     :commons {12445 1, 4487 1, 2538 1},
     :cardinality 100},
    :unix_ms
    {:data-type "integer",
     :distinct 111,
     :group-by? true,
     :commons {1723587151483 1, 1723587871483 1, 1723587661486 1},
     :cardinality 100},
    :used_memory_mb
    {:data-type "integer",
     :distinct 110,
     :group-by? true,
     :commons {3946 2, 6424 1, 9689 1},
     :cardinality 99},
    :recent_queries_run
    {:data-type "integer",
     :distinct 13,
     :group-by? true,
     :commons {9 28, 8 18, 1 18},
     :cardinality 11},
    :thread_count
    {:data-type "integer",
     :distinct 47,
     :group-by? true,
     :commons {236 7, 235 6, 242 5},
     :cardinality 42},
    :internal_queries_run
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {0 111},
     :cardinality 0},
    :open_flow_channels
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {-1 111},
     :cardinality 0},
    :ws_peers
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {8 111},
     :cardinality 0},
    :recent_messages
    {:data-type "integer",
     :distinct 111,
     :group-by? true,
     :commons {55333 1, 87841 1, 3143 1},
     :cardinality 100},
    :recent_queries_per_second
    {:data-type "float",
     :distinct 15,
     :group-by? true,
     :commons {0.6 28, 0.07 18, 0.53 17},
     :cardinality 13},
    :batches_per_second
    {:data-type "float",
     :distinct 51,
     :group-by? true,
     :commons {8.29 14, 8.3 14, 8.28 8},
     :cardinality 45},
    :seconds_since_last_update
    {:data-type "integer",
     :distinct 3,
     :group-by? true,
     :commons {15 56, 14 54, -1 1},
     :cardinality 2}},
   :rowcount 111},
  :rowcnt-drag-2
  {:fields
   {:rowcnt_sum
    {:data-type "integer",
     :distinct 1,
     :group-by? false,
     :commons {80332 1},
     :cardinality 100}},
   :rowcount 1},
  :gen-viz-828
  {:fields
   {:agg
    {:data-type "integer",
     :distinct 230,
     :group-by? false,
     :commons {76 5, 146 4, 116 4},
     :cardinality 72},
    :date_posted
    {:data-type "string",
     :distinct 317,
     :group-by? true,
     :commons {"2000-12-09" 1, "2010-08-30" 1, "2003-11-08" 1},
     :cardinality 100}},
   :rowcount 317},
  :gen-viz-84
  {:fields
   {:rows
    {:data-type "integer",
     :distinct 6,
     :group-by? false,
     :commons {65114 1, 1905 1, 105 1},
     :cardinality 100},
    :country
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons {"us" 1, "gb" 1, "de" 1},
     :cardinality 100}},
   :rowcount 6},
  :ufo-sightings-drag-9
  {:fields
   {:duration_seconds_int
    {:data-type "integer",
     :distinct 54,
     :group-by? true,
     :commons {120 53, 180 45, 300 45},
     :cardinality 10},
    :city
    {:data-type "string",
     :distinct 157,
     :group-by? true,
     :commons {"akron" 41, "abilene" 32, "aberdeen" 19},
     :cardinality 31},
    :date_posted
    {:data-type "string",
     :distinct 194,
     :group-by? true,
     :commons {"2001-08-05" 20, "2008-10-31" 12, "2009-12-12" 11},
     :cardinality 38},
    :longitude
    {:data-type "float",
     :distinct 178,
     :group-by? true,
     :commons {-81.5191667 41, 138.598633 37, -99.7327778 30},
     :cardinality 35},
    :state
    {:data-type "string",
     :distinct 45,
     :group-by? true,
     :commons {nil 120, "oh" 48, "tx" 39},
     :cardinality 9},
    :duration_seconds
    {:data-type "string",
     :distinct 54,
     :group-by? true,
     :commons {"120" 53, "300" 45, "180" 45},
     :cardinality 10},
    :duration_hours
    {:data-type "string",
     :distinct 225,
     :group-by? true,
     :commons {"2 minutes" 21, "3 minutes" 18, "1 minute" 18},
     :cardinality 44},
    :shape
    {:data-type "string",
     :distinct 22,
     :group-by? true,
     :commons {"light" 103, "triangle" 62, "fireball" 49},
     :cardinality 4},
    :datetime
    {:data-type "string",
     :distinct 492,
     :group-by? true,
     :commons
     {"1989-06-04 22:30:00.000000" 3,
      "2010-05-29 21:50:00.000000" 2,
      "2006-11-30 12:17:00.000000" 2},
     :cardinality 98},
    :latitude
    {:data-type "string",
     :distinct 178,
     :group-by? true,
     :commons {"41.0813889" 41, "-34.928661" 37, "32.4486111" 30},
     :cardinality 35},
    :country
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons {"us" 288, nil 113, "au" 37},
     :cardinality 1}},
   :rowcount 500},
  :duration-hours-drag-43
  {:fields
   {:duration_hours
    {:data-type "string",
     :distinct 500,
     :group-by? true,
     :commons {"30 min." 1, "3 days" 1, "5-7 min" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 162,
     :group-by? false,
     :commons {12 29, 13 23, 14 22},
     :cardinality 32}},
   :rowcount 500},
  :city-drag-26
  {:fields
   {:city
    {:data-type "string",
     :distinct 500,
     :group-by? true,
     :commons {"ottawa (canada)" 1, "burlington (canada)" 1, "cary" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 118,
     :group-by? false,
     :commons {27 35, 26 24, 29 23},
     :cardinality 23}},
   :rowcount 500},
  :reco-counts {:fields {}, :rowcount 0},
  :state-drag-3
  {:fields
   {:state
    {:data-type "string",
     :distinct 68,
     :group-by? true,
     :commons {"nd" 1, "az" 1, "in" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 68,
     :group-by? false,
     :commons {183 1, 968 1, 633 1},
     :cardinality 100}},
   :rowcount 68},
  :shape-drag-7
  {:fields
   {:shape
    {:data-type "string",
     :distinct 30,
     :group-by? true,
     :commons {"formation" 1, "cone" 1, "rectangle" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 25,
     :group-by? false,
     :commons {1 5, 2 2, 1283 1},
     :cardinality 83}},
   :rowcount 30}},
 :default-col-widths {:block-8594 {:new-query 102}},
 :runstream-drops nil,
 :tabs
 ["through the rabbit hole and out the other side"
  "sapphire ape"
  "fat zebra"
  "star-shaped wallaby"
  "excellent snake"],
 :selected-cols nil,
 :server
 {:settings
  {:harvest-on-boot? true,
   :default "./screens/looking-glass-redux.edn",
   :new-block-rand
   ["Why, sometimes I've believed as many as six impossible things before breakfast."
    "Imagination is the only weapon in the war against reality."
    "It's no use going back to yesterday, because I was a different person then."
    "Who in the world am I? Ah, that's the great puzzle."
    "Curiouser and curiouser!"
    "If you don't know where you are going any road can take you there."
    "We're all mad here."
    "I can't go back to yesterday because I was a different person then."
    "It's always tea-time."
    "Begin at the beginning and go on till you come to the end; then stop."
    "I knew who I was this morning, but I've changed a few times since then."
    "How long is forever? Sometimes, just one second."
    "If everybody minded their own business, the world would go around a great deal faster than it does."
    "I don't think... then you shouldn't talk, said the Hatter."
    "Oh, how I wish I could shut up like a telescope! I think I could, if I only knew how to begin."
    "You're entirely bonkers. But I'll tell you a secret... all the best people are."
    "It was much pleasanter at home, when one wasn't always growing larger and smaller."
    "I wonder if I've been changed in the night. Let me think. Was I the same when I got up this morning?"
    "Have I gone mad? I'm afraid so, but let me tell you something, the best people usually are."
    "Well, I never heard it before, but it sounds uncommon nonsense."
    "Why, sometimes I've believed as many as six impossible things before breakfast."
    "Imagination is the only weapon in the war against reality."
    "Who in the world am I? Ah, that's the great puzzle."
    "We're all mad here."
    "How long is forever? Sometimes, just one second."
    "The world is full of obvious things which nobody by any chance ever observes."
    "Reality is that which, when you stop believing in it, doesn't go away."
    "The sky above the port was the color of television, tuned to a dead channel."
    "Information wants to be free."
    "The future is already here – it's just not evenly distributed."
    "He had a chip in his head, an interface jack that allowed him to plug his brain directly into the console."
    "The 'Net is a waste of time, and that's exactly what's right about it."
    "Cyberspace. A consensual hallucination experienced daily by billions of legitimate operators, in every nation."
    "The street finds its own uses for things."
    "Accelerated world. Accelerated nervous system to go with it."
    "The future has arrived — it's just not evenly distributed yet."
    "It's not enough to be able to pick up a sword. You have to know which end to poke into the enemy."
    "When you want to know how things really work, study them when they're coming apart."
    "The human sensory system is a lot more complex and weird than most people realize."
    "Time moves in one direction, memory in another."
    "The only thing that keeps you sane is to think that it's all a bad dream."
    "We're an information economy. They teach you that in school. What they don't tell you is that it's impossible to move, to live, to operate at any level without leaving traces, bits, seemingly meaningless fragments of personal information."
    "We monitor many frequencies. We listen always. Came a voice, out of the babel of tongues, speaking to us. It played us a mighty dub."
    "Secrets are not the same as surprises."
    "Neuromancer. The lane to the land of the dead."],
   :eleven-labs-api-key nil,
   :modes
   {:terminal [:terminal :*data],
    :markdown [:markdown :*data],
    :rowset [:honeycomb {:select [:*], :from {:data :*data}} 11 9],
    :pre
    [:pre
     {:style
      {:color :theme/editor-outer-rim-color,
       :background-color "#00000000",
       :border "none",
       :text-shadow "4px 4px 4px #00000088",
       :font-size "17px",
       :font-family :theme/monospaced-font}}
     [:string3 :*data]],
    :edn [:edn :*data],
    :clover [:box :child :*data],
    :pretty [:pretty-box :*data],
    :text [:console :*data],
    :data [:data-viewer :*data]},
   :kits {},
   :clover-templates
   {:color-theft
    {:args [:*input],
     :body
     [:data-viewer [:run-solver [:get-my-colors {:input-image-path :*input}]]]},
    :pretty-box
    {:args [:*input],
     :body
     [:box
      :size
      "auto"
      :align
      :center
      :justify
      :center
      :style
      {:color :theme/editor-outer-rim-color,
       :font-size [:auto-size-px [:string3 :*input]]}
      :child
      [:string3 :*input]]},
    :clj
    {:args [:code],
     :body
     [:run-solver
      {:signal false, :cache? false, :type :clojure, :input-map {}, :data :code}]},
    :clj2
    {:args [:code],
     :body
     [:run-solver
      {:signal false, :cache? false, :type :clojure2, :input-map {}, :data :code}]},
    :cheese-burger
    {:args [:x],
     :body
     [:box
      :style
      {:color "yellow", :font-size "23px"}
      :child
      [:string3 :x "CHEESEBURGER!"]]}},
   :eleven-labs-default-voice-name "Not OG Buffy",
   :debug-level 1,
   :screens
   ["GGGeat-ochre-mole-exiled-from-abyssal-plain"
    "SSSSSSuccessful-oval-sea-urchin-of-mountain-range"
    "SSuccessful-oval-sea-urchin-of-mountain-range"
    "aaa-run-amok"
    "aaaaah-esday-the-day"
    "aaaaah-wednesday-the-day"
    "aaaah-wednesday-the-day"
    "alarm-clock-tv"
    "alarm-clock1"
    "alarm-clock2"
    "alarm-clock22"
    "alarm-clock23"
    "alice-puzzle-1"
    "asdasdasdasd"
    "autumn-theme"
    "battle-mage"
    "bigfoot-snapshots"
    "bigfoot-snapshots2"
    "bigfoot-snapshots3"
    "blackberries"
    "blackberries2"
    "blackberries3"
    "blackberries3-narrow"
    "blackberries3-narrow2"
    "blank-blue"
    "blank-sizzle"
    "blank-sizzle2"
    "blue-pines"
    "boston-test-10-3-23"
    "broken-jacket"
    "bunch of bullshit"
    "bunch of bullshit2"
    "bunch of bullshit4"
    "caliope"
    "calliope"
    "canvas-scrubber-test1"
    "capecod-viking"
    "chaos simple"
    "chaos-views"
    "chompers"
    "claude-testing2"
    "clean-grey-defaults"
    "code-data-literal-stonks-test"
    "conifer-boughs"
    "counting-lord-of-the-woods"
    "crazy-alice"
    "dark-crested-jackelope"
    "data-literals-test-sunday"
    "data-literals-test-sundaydd"
    "demo-dark-pumpkin-bkgrd-sept23"
    "demo-light-bkgrd-sept23"
    "demo-lime-green-slime"
    "desktops-and-broomsticks"
    "dirty-purple"
    "duality-of-lepus"
    "duality-of-lepus33"
    "duality-of-lepus33aa"
    "error-monitor"
    "error-monitor-vanessa"
    "error-monitor-vanessa2"
    "error-monitor-vanessa3"
    "error-monitor-vanessa4"
    "error-monitor-vanessa5"
    "evil-main-street"
    "fake-books-1"
    "fake-bricks"
    "fetching-pentagonal-termite-of-tghe-submarine-canyon"
    "final-fantasy-dorchester"
    "fox-hills"
    "game-of-life"
    "glass-fish-board-test"
    "green-storm-city"
    "hue-board-1"
    "late-winter-theme"
    "lavender-side-eye"
    "layout-test-1"
    "layout-test-12"
    "light-theme"
    "literal-data-test"
    "looking-glass-conway"
    "looking-glass-redux-conway2"
    "looking-glass-redux-mix5"
    "looking-glass-redux-test"
    "looking-glass-redux-viking"
    "looking-glass-redux-viking2"
    "looking-glass-redux2"
    "looking-glass-redux23a"
    "looking-glass-redux23abb"
    "looking-glass-redux23b"
    "looking-glass-redux2a"
    "looking-glass-redux2aa"
    "looking-glass-redux45"
    "looking-glass-redux79"
    "looking-glass-sine-wave"
    "luck-of-the-irish"
    "mapbox-test"
    "may-20"
    "my-goodness"
    "my-goodness-the-sequel"
    "neverwinter-amy"
    "night-city-never-sleeps"
    "nightcity-cape-cod"
    "nivo-getting-better!"
    "nivo-hacking-2023"
    "nivo-hacking-2023333"
    "nivo-hacking-october-2nd"
    "nostromo-console"
    "old-defaults"
    "old-fashioned-christmas"
    "old-town-snow-stars"
    "pensive-look"
    "pensive-look2"
    "pine-wood-dawn"
    "pink-and-green-elk"
    "pink-dusk-falls"
    "pinup-rabbit-fields"
    "pomp-girl1"
    "pomp-girl2"
    "poor-touring-me"
    "pres-sql-test-1"
    "purple-dusk-old-town"
    "purple-nightshades"
    "purple-techno-sunset"
    "recharts-test-blocks"
    "refresh-test"
    "repl-demo-july23"
    "repl-tests-3"
    "retro-machines"
    "riffle-test"
    "server-stats"
    "server-stats2"
    "server-stats2a"
    "sick-of-your-shit"
    "sizzle-board-1"
    "sneaky-swamp-creatures1"
    "solver-test"
    "stop-drawing-dead-dashboards"
    "swamp-nightgown"
    "swamp-reacher"
    "system-monitor"
    "system-monitor2"
    "tallica-param-test2"
    "tangerine-dreams"
    "technicolor-shanny"
    "test-blog-screen"
    "the-future-soon"
    "the-generated-lass"
    "the-generated-lass-glow"
    "the-generated-lass-ne"
    "the-generated-lass-sgt"
    "the-generated-lassff"
    "the-memo"
    "the-memo2"
    "the-outer-blues"
    "trad-hybrid"
    "tweet-bigfoot-is-blurry"
    "tweet-demo-thing-bigfoot-is-blurry"
    "unnamed-screen!"
    "viking-pastels"
    "weave-test"
    "weave-test1"
    "weave-test122"
    "who ya gonna call?"
    "who ya gonna call? again"
    "winter-theme"
    "winter-theme-choom"
    "winter-theme2"
    "winter-theme33"
    "winter-theme45"
    "winter-theme47"
    "winter-twin-peaks"
    "witchy425"
    "wonderland-horror-interface"
    "wow-board"]}},
 :runstreams
 {"flow-forever" {:open? false, :open-outputs? true},
  "python-test-1" {:open? true, :open-outputs? false}},
 :editor? false,
 :buffy? false,
 :valid-kits
 {[:outliers :get-outliers]
  [[nil :queries nil]
   [:block-414 :queries :gen-viz-797]
   [:block-11609 :queries :city-drag-26]
   [:block-7416 :queries :rowcnt-drag-2]
   [:block-204 :queries :gen-viz-828]
   [:block-204 :queries :gen-viz-94]
   [:block-8805 :queries :duration-hours-drag-43]
   [:block-94 :queries :gen-viz-84]
   [:block-7319 :queries :shape-drag-7]
   [:block-3777 :queries :state-drag-3]
   [:block-1449 :queries :ufo-sightings-drag-9]
   [:block-8594 :queries :new-query]]},
 :memory [375010888 350266336 4294705152],
 :sched {:new-query 12},
 :client-name :affirmative-ultramarine-camel-9,
 :flow-editor? true,
 :openai-api-key "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",
 :window {:w 2315, :h 1378},
 :quake-console? false,
 :implicit-rowsets {:solver [nil]},
 :post-meta {:kke192 {}},
 :flow-estimates
 {:new-query {:times 0.025, :run-id :new-query},
  :raw-custom-override-748795138
  {:times 0.255, :run-id :raw-custom-override-748795138},
  :raw-custom-override-1290044960
  {:times 0.083, :run-id :raw-custom-override-1290044960},
  :raw-custom-override1531614368
  {:times 0.069, :run-id :raw-custom-override1531614368},
  "get-my-colors-1261026461-solver-flow-"
  {:times 1, :run-id "161fdc6c-5d16-4c22-bb01-e89a2337f01c"}},
 :status
 {:alert2 {:alerts :alert2},
  :heartbeat
  {:kick
   [:solver-status/affirmative-ultramarine-camel-9>raw-custom-override598695404>running?
    :time/now-seconds
    :flow/openai-image-gen-ladder3>relative-url-path-for-png-version
    :flow-status/flow-forever>*running?
    :solver-status/affirmative-ultramarine-camel-9>raw-custom-override-1635589004
    :solver/raw-custom-override-748795138
    :solver-status/*client-name*
    :solver-meta/raw-custom-override-1290044960>output>evald-result>out
    :solver-meta/raw-custom-override-1635589004
    :solver/raw-custom-override-1344432461
    :solver-status/affirmative-ultramarine-camel-9>raw-custom-override-766059976>running?
    :solver-status/affirmative-ultramarine-camel-9>raw-custom-override-1290044960
    :solver/raw-custom-override-1635589004
    :solver/get-my-colors-1336553505
    :solver-meta/raw-custom-override-1290044960
    :solver-meta/raw-custom-override-748795138>output>evald-result>out
    :solver-status/affirmative-ultramarine-camel-9>get-my-colors-1261026461>running?
    :data/new-clojure-2
    :solver/raw-custom-override1531614368
    :solver-status/affirmative-ultramarine-camel-9>raw-custom-override-1290044960>running?
    :solver-status/affirmative-ultramarine-camel-9>raw-custom-override-1344432461>running?
    :solver-status/affirmative-ultramarine-camel-9>raw-custom-override-310351321>running?
    :solver-meta/raw-custom-override-1635589004>output>evald-result>out
    :solver/raw-custom-override598695404
    :client/*client-name*>stats>memory
    :solver/raw-custom-override-766059976
    :solver-status/affirmative-ultramarine-camel-9>raw-custom-override1531614368>running?
    :flow-status/live-scratch-flow>*running?
    :solver/raw-custom-override-1290044960
    :solver-status/affirmative-ultramarine-camel-9>raw-custom-override-748795138>running?
    :solver-meta/raw-custom-override-748795138
    :solver/raw-custom-override-310351321
    :flow-status/python-test-1>*running?
    :solver/get-my-colors-1261026461
    :solver-status/affirmative-ultramarine-camel-9>raw-custom-override-748795138
    :solver-status/affirmative-ultramarine-camel-9>raw-custom-override-1635589004>running?
    :solver-status/affirmative-ultramarine-camel-9>get-my-colors-1336553505>running?
    :solver/colors-of-the-moment>darkest]}},
 :screen-name "system-monitor2",
 :recos-page2 0,
 :selected-tab "star-shaped wallaby",
 :col-names nil,
 :snapshots nil,
 :openai-org-id "org-YLngjih2M4oju0tnnZtKCAYg",
 :alerts
 [[[:h-box
    :align
    :center
    :style
    {:padding-left "6px"}
    :gap
    "10px"
    :children
    [[:md-icon :style {:font-size "12px"} :md-icon-name "fa-solid fa-handshake"]
     [:box
      :child
      "sub to :solver-status/affirmative-ultramarine-camel-9>raw-custom-override1531614368"]]
    :style
    {:font-size "12px", :opacity nil, :text-decoration nil}]
   10
   0.75
   143
   -349530165]
  [[:h-box
    :align
    :center
    :style
    {:padding-left "6px"}
    :gap
    "10px"
    :children
    [[:md-icon :style {:font-size "12px"} :md-icon-name "fa-solid fa-handshake"]
     [:box
      :child
      "sub to :solver-meta/raw-custom-override1531614368>output>evald-result>out"]]
    :style
    {:font-size "12px", :opacity nil, :text-decoration nil}]
   10
   0.75
   143
   -880628157]
  [[:h-box
    :align
    :center
    :style
    {:padding-left "6px"}
    :gap
    "10px"
    :children
    [[:md-icon :style {:font-size "12px"} :md-icon-name "fa-solid fa-handshake"]
     [:box :child "sub to :solver-meta/raw-custom-override1531614368"]]
    :style
    {:font-size "12px", :opacity nil, :text-decoration nil}]
   10
   0.75
   143
   -1413605800]
  [[:box
    :child
    "sent screen save request to server... Please wait."
    :style
    {:font-size "12px", :opacity 0.66}]
   11
   0.5
   151
   -1247625457]],
 :recos-page 0,
 :rs-overrides-hashmap {"flow-forever" nil, "python-test-1" nil},
 :base-sniff-queries {:jvm_stats 1498154063, :kke192 -995149087},
 :elevenlabs-api-key "f74e20dec69741c2d51663cbd8cd4cf6",
 :user-params-hash 210405281,
 :grid-recos? true,
 :resolved-queries
 {nil {:_last-run "23:49:55"},
  :new-query
  {:cache? false,
   :limit 100,
   :group-by [3],
   :_last-run "21:51:46",
   :refresh-every 10,
   :from [[:jvm_stats :kke192]],
   :order-by [[2 :desc]],
   :connection-id "system-db",
   :select
   [[[:avg :thread_count] :thread_count]
    [:ts :ts1]
    [[:substr :ts 0 16] :ts]
    [[:avg :sys_load] :sys_load]
    [[:avg :used_memory_mb] :used_memory_mb]],
   :post-process-fn reverse},
  :gen-viz-797
  {:select [[[:count 1] :rows] :date_posted],
   :from
   [{:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}],
   :group-by [:date_posted]},
  :gen-viz-94
  {:select
   [[[:max [:round [:raw ["(100 * ((" nil ".0 - " nil ".0) / " nil ".0))"]] 2]]
     :diff]],
   :from
   [{:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}]},
  :rowcnt-drag-2
  {:select [[[:sum :rowcnt] :rowcnt_sum]],
   :from
   [[{:select [:city [[:count 1] :rowcnt]],
      :from
      [[{:select
         [:city
          :country
          :date_posted
          :datetime
          :duration_hours
          :duration_seconds
          :duration_seconds_int
          :latitude
          :longitude
          :shape
          :state],
         :from [[:ufo_sightings :jj584]],
         :order-by [[:city :asc]]}
        :ff571]],
      :group-by [:city],
      :order-by [[:rowcnt :desc]]}
     :yy403]]},
  :gen-viz-828
  {:select [[[[:count 1]] :agg] :date_posted],
   :from
   [{:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}],
   :order-by [[:date_posted :desc]],
   :group-by [:date_posted]},
  :gen-viz-84
  {:select [[[:count 1] :rows] :country],
   :from
   [{:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}],
   :group-by [:country]},
  :ufo-sightings-drag-9
  {:select
   [:city
    :country
    :date_posted
    :datetime
    :duration_hours
    :duration_seconds
    :duration_seconds_int
    :latitude
    :longitude
    :shape
    :state],
   :from [[:ufo_sightings :jj584]],
   :order-by [[:city :asc]]},
  :duration-hours-drag-43
  {:select [:duration_hours [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:city
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :jj584]],
      :order-by [[:city :asc]]}
     :cc350]],
   :group-by [:duration_hours],
   :order-by [[:rowcnt :desc]]},
  :city-drag-26
  {:select [:city [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:city
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :jj584]],
      :order-by [[:city :asc]]}
     :ff571]],
   :group-by [:city],
   :order-by [[:rowcnt :desc]]},
  :state-drag-3
  {:select [:state [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:city
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :jj584]],
      :order-by [[:city :asc]]}
     :uu58]],
   :group-by [:state],
   :order-by [[:rowcnt :desc]]},
  :shape-drag-7
  {:select [:shape [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:city
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :jj584]],
      :order-by [[:city :asc]]}
     :hh354]],
   :group-by [:shape],
   :order-by [[:rowcnt :desc]]}},
 :panels
 {nil {:queries {nil {:_last-run "23:49:55"}}},
  :block-414
  {:mad-libs-combo-hash ["572062609" "ufo_sightings_drag_9"],
   :name "basic_timeseries - \"date_posted, rows\" - 769",
   :w 9,
   :root [5 13],
   :h 5,
   :connection-id "bigfoot-ufos",
   :queries
   {:gen-viz-797
    {:select [[[:count 1] :rows] :date_posted],
     :from [:query/ufo-sightings-drag-9],
     :group-by [:date_posted]}},
   :tab "sapphire ape",
   :conditionals nil,
   :views
   {:oz
    [:vega-lite
     {:layer
      [{:encoding
        {:x {:field :date_posted, :type "temporal", :sort "x"},
         :y {:aggregate "sum", :field :rows, :type "quantitative"},
         :row {:field nil, :legend nil},
         :size {:legend nil},
         :shape {:legend nil},
         :column {:field nil, :legend nil},
         :color
         {:scale :theme/vega-default-color-scheme,
          :legend nil,
          :field nil,
          :type "ordinal"}},
        :mark
        {:type "area",
         :interpolate "monotone",
         :point "transparent",
         :tooltip {:content "encoding"}}}],
      :data {:values :gen-viz-797},
      :config :theme/vega-defaults,
      :width "container",
      :height :panel-height,
      :padding 4,
      :background "transparent"}
     {:actions false}]}},
  :block-11251
  {:name "block-11251",
   :w 6,
   :selected-view :hi,
   :root [5 7],
   :h 2,
   :queries {},
   :tab "through the rabbit hole and out the other side",
   :minimized? true,
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-11251.:hi"}
     :style
     {:font-size "14px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:push ["flow-forever" ":open-input" 21555]]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}},
  :block-6604
  {:clojure
   {:new-clojure-5
    (let [process (.exec
                    (Runtime/getRuntime)
                    (into-array String ["bash" "-c" "free -h"]))
          react! (clojure.string/lower-case :time/now-seconds)
          reader (java.io.BufferedReader.
                   (java.io.InputStreamReader. (.getInputStream process)))
          output (StringBuilder.)]
      (loop [line (.readLine reader)]
        (when line
          (.append output line)
          (.append output "\n")
          (recur (.readLine reader))))
      (str output "\n"))},
   :name "block-6604",
   :w 17,
   :selected-mode {:new-clojure-5 :terminal},
   :style :param/glass-fish-style,
   :selected-view :new-clojure-5,
   :root [1 11],
   :h 3,
   :queries {},
   :tab "star-shaped wallaby",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-6604.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]}},
  :block-7760
  {:h 22,
   :w 8,
   :root [37 3],
   :tab "excellent snake",
   :selected-view :hi,
   :name "block-7760",
   :views {:hi [:data-viewer [:app-db [:flow-subs]]]},
   :queries {}},
  :block-11609
  {:h 5,
   :w 8,
   :connection-id "bigfoot-ufos",
   :name "drag-from-select-all-ufo_sightings",
   :queries
   {:city-drag-26
    {:select [:city [[:count 1] :rowcnt]],
     :from [[:query/ufo-sightings-drag-9 :ff571]],
     :group-by [:city],
     :order-by [[:rowcnt :desc]]}},
   :root [1 8],
   :tab "sapphire ape"},
  :block-3341
  {:name "block-3341",
   :w 18,
   :style :param/glass-fish-style,
   :selected-view :hi,
   :root [18 1],
   :h 2,
   :queries {},
   :tab "star-shaped wallaby",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-3341.:hi"}
     :style
     {:font-size "45px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :param/generated-colors>colors>3,
      :font-family :theme/base-font}
     :child
     [:string :time/now-seconds]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}},
  :block-7416
  {:h 5,
   :w 4,
   :connection-id "bigfoot-ufos",
   :name "drag-from-drag-from-select-all-ufo_sightings",
   :queries
   {:rowcnt-drag-2
    {:select [[[:sum :rowcnt] :rowcnt_sum]], :from [[:query/city-drag-26 :yy403]]}},
   :root [1 13],
   :tab "sapphire ape"},
  :block-8236
  {:clojure
   {:new-clojure-3
    (let [process (.exec
                    (Runtime/getRuntime)
                    (into-array String ["bash" "-c" "top -b -n 1 | head -n 20"]))
          reader (java.io.BufferedReader.
                   (java.io.InputStreamReader. (.getInputStream process)))
          output (StringBuilder.)]
      (loop [line (.readLine reader)]
        (when line
          (.append output line)
          (.append output "\n")
          (recur (.readLine reader))))
      (str
        output
        "\n"
        "------------------------[ "
        (clojure.string/lower-case :time/now-seconds)
        " ]-------------------------")),
    :new-clojure-4
    (let [process (-> (java.lang.ProcessBuilder. ["htop"])
                   (.redirectErrorStream true)
                   (.start))
          input-stream (.getInputStream process)
          output-stream (java.io.ByteArrayOutputStream.)]
      (Thread/sleep 1000)
      (.destroy process)
      (clojure.java.io/copy input-stream output-stream)
      (let [output (.toString output-stream "UTF-8")
            formatted-output (str/join "\n" (str/split-lines output))]
        [:pre formatted-output]))},
   :name "block-8236",
   :w 17,
   :selected-mode {:new-clojure-3 :terminal},
   :style :param/glass-fish-style,
   :selected-view :new-clojure-3,
   :root [1 15],
   :h 12,
   :queries {},
   :tab "star-shaped wallaby",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-8236.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]}},
  :block-11530
  {:h 2,
   :w 9,
   :views
   {:flow-play-runstreamed
    [:box
     :align
     :center
     :justify
     :center
     :style
     {:font-size "25px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:run-flow ["flow-forever" "run flow 'flow-forever'" :runstream-overrides]]]},
   :name "flow-play-from-runstreams",
   :root [5 18],
   :tab "through the rabbit hole and out the other side"},
  :block-4245
  {:name "block-4245",
   :w 16,
   :selected-mode {:new-create-image :data},
   :selected-view :hi,
   :root [46 1],
   :h 10,
   :queries {},
   :tab "star-shaped wallaby",
   :views
   {:hi
    [:box
     :child
     [:run-solver
      {:signal false,
       :cache? false,
       :type :flow,
       :data
       {:flowmap "openai-image-gen-ladder3",
        :opts
        {:timeout 120000,
         :overrides
         {:prompt
          "Create        a       hyperrealistic image of a beautiful young   full-figured      woman in her late     20s,       of          Irish descent, standing amidst the haunting scenery   of a dystopian    cyberpunk   northeastern America,   consumed by   the gnarled overgrowth of a New England forest. The scene is steeped in a moody, melancholic atmosphere dominated by neon hues of pink, purple, and light blue, nestling in a stormy, rainy ambiance. The woman gazes directly into the camera, her long hair cascading down and her high-quality, intricate neck tattoos displayed prominently. The atmosphere is gritty, breathing life into the combined aesthetic of cyberpunk and vaporwave. An air of defiance clings to her, an invitation or a challenge for you to join her world. A rabbit necklace graces her neck while matching intricate rabbit tattoos adorn her skin. Her lips are full and pouty, adding to her voluptuous charm and subtle pinup style."}},
        :return :hiccup-image-box-w-png}}]]}},
  :block-5533
  {:clojure
   {:new-clojure
    (let [clojure-version (clojure-version)
          jvm-version (System/getProperty "java.version")]
      (str
        "🐇🥕 Sup! Internal RVBBIT nREPL. Clojure "
        clojure-version
        " on "
        jvm-version
        " JVM tech"
        " 🥕🐇")),
    :new-clojure-1
    (let [clojure-version (clojure-version)
          jvm-version (System/getProperty "java.version")]
      (str
        "🐇🥕 Sup! BIIIIGS. Clojure "
        clojure-version
        " on "
        jvm-version
        " JVM tech"
        " 🥕🐇")),
    :new-clojure-2
    (let [clojure-version (clojure-version)
          jvm-version (System/getProperty "java.version")]
      (str
        "🐇🥕 nREPL. Clojure "
        clojure-version
        " on "
        jvm-version
        " .jvm. "
        " 🥕🐇"))},
   :name "block-5533",
   :w 10,
   :selected-mode {:new-clojure-1 :data, :new-clojure2 :data, :new-clojure-2 :data},
   :selected-view :new-clojure-2,
   :root [19 15],
   :h 4,
   :clojure2
   {:new-clojure2
    (let [clojure-version (clojure-version)
          jvm-version (System/getProperty "java.version")]
      (str
        "👻 Whoa. Spooky external nREPL! 👀 Clojure "
        clojure-version
        " on JVM tech "
        jvm-version
        " 👻"))},
   :queries {},
   :tab "star-shaped wallaby",
   :minimized? true,
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-5533.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]}},
  :block-548
  {:name "block-548",
   :w 11,
   :style :param/glass-fish-style,
   :selected-view :hi,
   :root [18 4],
   :h 9,
   :queries {},
   :tab "star-shaped wallaby",
   :minimized? true,
   :views {:hi [:data-viewer :solver-status/*client-name*]}},
  :block-2810
  {:clojure
   {:new-clojure
    (let [process (.exec (Runtime/getRuntime) "vmstat 1 1")
          reader (java.io.BufferedReader.
                   (java.io.InputStreamReader. (.getInputStream process)))
          react! (clojure.string/lower-case :time/now-seconds)
          output (StringBuilder.)]
      (loop [line (.readLine reader)]
        (when line
          (.append output line)
          (.append output "\n")
          (recur (.readLine reader))))
      (str output "\n"))},
   :name "block-2810",
   :w 17,
   :selected-mode {:new-clojure :terminal, :* :text},
   :style :param/glass-fish-style,
   :selected-view :new-clojure,
   :root [1 7],
   :h 3,
   :queries {},
   :tab "star-shaped wallaby",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-2810.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]}},
  :block-204
  {:mad-libs-combo-hash ["-1610972762" "ufo_sightings_drag_9"],
   :name "compound_trend_1 - \"date_posted, rows\" - 1141",
   :w 10,
   :root [23 13],
   :h 5,
   :connection-id "bigfoot-ufos",
   :queries
   {:gen-viz-828
    {:select [[[[:count 1]] :agg] :date_posted],
     :from [:query/ufo-sightings-drag-9],
     :order-by [[:date_posted :desc]],
     :group-by [:date_posted]},
    :gen-viz-94
    {:select
     [[[:max
        [:round
         [:raw
          ["(100 * (("
           :query-preview/agg.0
           ".0 - "
           :query-preview/agg.1
           ".0) / "
           :query-preview/agg.0
           ".0))"]]
         2]]
       :diff]],
     :from [:query/ufo-sightings-drag-9]}},
   :tab "sapphire ape",
   :conditionals {:c345-up-or-down? [:> :query-preview/agg.0 :query-preview/agg.1]},
   :views
   {:oz
    [:v-box
     :size
     "auto"
     :height
     :half-panel-height-px
     :style
     {:padding-left "8px", :padding-right "8px"}
     :children
     [[:h-box
       :justify
       :between
       :children
       [[:box
         :padding
         "16px"
         :child
         [:number :query-preview/agg.0]
         :style
         {:font-size "39px", :color "#ffffff"}]
        [:h-box
         :padding
         "13px"
         :size
         "auto"
         :children
         [[:icon
           :md-icon-name
           [:if :condi/c345-up-or-down? "zmdi-chevron-up" "zmdi-chevron-down"]
           :style
           {:font-size "55px",
            :color [:if :condi/c345-up-or-down? "#20f323" "#f36464"],
            :opacity 0.5,
            :margin-top "8px"}]
          [:box
           :child
           [:percent :query-preview-2/diff.0]
           :style
           {:font-size "25px", :padding "15px"}]]]]]
      [:box
       :style
       {:margin-top "-10px"}
       :size
       "auto"
       :child
       [:vega-lite
        {:layer
         [{:encoding
           {:x {:field :date_posted, :type "temporal", :title nil, :sort "x"},
            :y
            {:aggregate "sum",
             :field :agg,
             :title nil,
             :scale {:zero false},
             :type "quantitative"},
            :row {:field nil, :legend nil},
            :size {:legend nil},
            :shape {:legend nil},
            :column {:field nil, :legend nil},
            :color
            {:scale {:scheme "purples"}, :legend nil, :field 1, :type "ordinal"}},
           :mark
           {:type "line",
            :interpolate "monotone",
            :line true,
            :point true,
            :tooltip {:content "encoding"}}}],
         :data {:values :gen-viz-828},
         :config
         {:view {:stroke "transparent"},
          :line {:strokeWidth 3},
          :axis
          {:domainColor "#ffffff22",
           :grid true,
           :font "Lato",
           :labelColor "#afafaf",
           :titleFont "Lato",
           :titleColor "#282828",
           :labelFont "Lato",
           :domain false,
           :gridColor "#ffffff22",
           :tickColor "#ffffff22",
           :axisFont "Lato"},
          :legend
          {:labelFont "Lato",
           :legendFont "Lato",
           :labelColor "#ffffff99",
           :titleColor "#ffffff99",
           :stroke "#ffffff99",
           :titleFont "Lato"},
          :header {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"},
          :mark {:font "Lato"},
          :title
          {:font "Lato",
           :subtitleFont "Lato",
           :labelFont "Lato",
           :titleFont "Lato",
           :titleColor "#ffffff99"}},
         :width :panel-width,
         :height :half-panel-height,
         :padding 4,
         :background "transparent"}
        {:actions false}]]
      [:box
       :align
       :center
       :justify
       :center
       :style
       {:padding-top "133px", :font-size "20px"}
       :child
       [:string [:date_posted " vs " :rows]]]]]}},
  :block-2536
  {:h 2,
   :w 16,
   :root [0 1],
   :tab "through the rabbit hole and out the other side",
   :selected-view :hi,
   :name "block-2536",
   :views
   {:hi
    [:box
     :attr
     {:id ":block-6121.:hi"}
     :style
     {:font-size "15px",
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:speak-click
      "Did you ever need a flow to stop and present an operator with some choices? Static or dynamic we need help to continue processing. How about this ALSO happening headlessly & seamlessly with your data UI?"]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-8805
  {:h 5,
   :w 8,
   :connection-id "bigfoot-ufos",
   :name "drag-from-select-all-ufo_sightings",
   :queries
   {:duration-hours-drag-43
    {:select [:duration_hours [[:count 1] :rowcnt]],
     :from [[:query/ufo-sightings-drag-9 :cc350]],
     :group-by [:duration_hours],
     :order-by [[:rowcnt :desc]]}},
   :root [25 8],
   :tab "sapphire ape"},
  :block-94
  {:mad-libs-combo-hash ["1561519308" "ufo_sightings_drag_9"],
   :name "basic_v_bar - \"country, rows\" - 559",
   :w 9,
   :root [14 13],
   :h 5,
   :connection-id "bigfoot-ufos",
   :queries
   {:gen-viz-84
    {:select [[[:count 1] :rows] :country],
     :from [:query/ufo-sightings-drag-9],
     :group-by [:country]}},
   :tab "sapphire ape",
   :conditionals nil,
   :views
   {:oz
    [:vega-lite
     {:layer
      [{:encoding
        {:y {:field :country, :type "ordinal"},
         :x {:aggregate "sum", :field :rows, :type "quantitative"},
         :row {:field nil, :legend nil},
         :size {:legend nil},
         :shape {:legend nil},
         :column {:field nil, :legend nil},
         :color
         {:scale :theme/vega-default-color-scheme,
          :legend nil,
          :field 1,
          :type "ordinal"}},
        :mark {:type "bar", :tooltip {:content "encoding"}}}],
      :data {:values :gen-viz-84},
      :config :theme/vega-defaults,
      :width "container",
      :height :panel-height,
      :padding 4,
      :background "transparent"}
     {:actions false}]}},
  :block-1913
  {:h 2,
   :w 16,
   :root [0 15],
   :tab "through the rabbit hole and out the other side",
   :selected-view :hi,
   :name "block-1913",
   :views
   {:hi
    [:box
     :attr
     {:id ":block-4121.:hi"}
     :style
     {:font-size "15px",
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:speak-click
      "Pretty cool, if you ask me. Regular Dashboards are, like, totally lame - reactive flow-powered data boards...  thats where its at."]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-9369
  {:h 3,
   :w 16,
   :root [0 11],
   :tab "through the rabbit hole and out the other side",
   :selected-view :hi,
   :name "block-9369",
   :views
   {:hi
    [:box
     :attr
     {:id ":block-9363.:hi"}
     :style
     {:font-size "15px",
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:speak-click
      "Going back to the canvas, the dialog box and channel reactivity works the same way. The server flow waits for the client and reacts to the value. No need to render or load the flow like before, we are merely a 'subscription client' to this flow."]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-1247
  {:name "block-1247",
   :w 18,
   :style :param/glass-fish-style,
   :selected-view :hi,
   :root [1 27],
   :h 2,
   :queries {},
   :tab "star-shaped wallaby",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-1247.:hi"}
     :style
     {:font-size "37px",
      :font-weight 700,
      :margin-top "0px",
      :padding-left "14px",
      :color :param/generated-colors>colors>0,
      :font-family :theme/base-font}
     :child
     [:string3 :data/new-clojure-2]]}},
  :block-7319
  {:h 5,
   :w 8,
   :connection-id "bigfoot-ufos",
   :name "drag-from-select-all-ufo_sightings",
   :queries
   {:shape-drag-7
    {:select [:shape [[:count 1] :rowcnt]],
     :from [[:query/ufo-sightings-drag-9 :hh354]],
     :group-by [:shape],
     :order-by [[:rowcnt :desc]]}},
   :root [9 8],
   :tab "sapphire ape"},
  :block-4121
  {:h 3,
   :w 16,
   :root [0 7],
   :tab "through the rabbit hole and out the other side",
   :selected-view :hi,
   :name "block-4121",
   :views
   {:hi
    [:box
     :attr
     {:id ":block-4121.:hi"}
     :style
     {:font-size "15px",
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:speak-click
      "We can also debug by forcing various values into any step in the flow in order to observe different reactions... Notice the flow doesn't re-start from scratch, it is actually still running and will react to new values that hit any of it's channels."]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-820
  {:clojure
   {:new-clojure-6
    (let [clojure-version (clojure-version)
          jvm-version (System/getProperty "java.version")]
      (str
        "🐇🥕 Sup! Internal RVBBIT ndddREPL! Clojure "
        clojure-version
        " on "
        jvm-version
        " JVM tech"
        " 🥕🐇"))},
   :name "block-820",
   :w 12,
   :selected-view :new-clojure-6,
   :root [50 13],
   :h 2,
   :queries {},
   :tab "star-shaped wallaby",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-820.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]}},
  :block-6256
  {:name "block-6256",
   :w 26,
   :selected-mode {:new-create-image :clover},
   :selected-view :new-create-image,
   :root [9 1],
   :h 16,
   :queries {},
   :tab "excellent snake",
   :python3
   {:new-python3
    ["import platform"
     ""
     ""
     ""
     "def main():"
     ""
     "    # Print Hello, World! "
     ""
     "    print(\"Hello, Worsffsld!\")"
     ""
     "    "
     ""
     "    # Print Python version"
     ""
     "    print(f\"Python version: {platform.python_version()}\")"
     ""
     "    "
     ""
     "    # Print detailed Python version info"
     ""
     "    print(f\"Python version info: {platform.python_version_tuple()}\")"
     ""
     "    "
     ""
     "    # Print system information"
     ""
     "    print(f\"System: {platform.system()}\")"
     ""
     "    print(f\"Node: {platform.node()}\")"
     ""
     "    print(f\"Release: {platform.release()}\")"
     ""
     "    print(f\"Version: {platform.version()}\")"
     ""
     "    print(f\"Machine: {platform.machine()}\")"
     ""
     "    print(f\"Processor: {platform.processor()}\")"
     ""
     ""
     ""
     "if __name__ == \"__main__\":"
     ""
     "    main()"
     ""],
    :new-python3-1
    ["Create a hyperrealistic visual representation of a full-figured woman in her late twenties of Irish-Scottish descent, featuring her fair complexion. She stands in a dystopian, New England-inspired town during a snowstorm. The scene is an innovative blend of cyberpunk and vaporwave aesthetics, referencing a vintage noir style of the 20th century against a captivating midnight backdrop. A forest shadows the town outskirts, and neon lights illuminate this eerie landscape in rose pink, purple, and sky blue. Focus on her allure through her long flowing hair and tattoos up to her neckline with wilderness and rabbit motifs, reflected in her necklace. Her mildly parted, plump lips add to her charm. Her outfit, reminiscent of the pin-up art period from the late 1800s to early 1900s, is captured from mid-torso upwards."]},
   :create-image
   {:new-create-image
    ["Please use this prompt exactly as it is with no changes or substitutions."
     ""
     "Create a hyperrealistic visual representation of a full-figured woman in her late twenties of Irish-Scottish descent, featuring her fair complexion. She stands in a dystopian, New England-inspired town during a snowstorm.      "
     ""
     "The scene is a gritty blend of cyberpunk and vaporwave aesthetics, referencing a vintage noir style of the 20th century against a captivating midnight backdrop. A forest shadows the town outskirts, and neon lights illuminate this eerie landscape in rose pink, purple, and sky blue.  "
     ""
     "Focus on her allure through her long flowing hair and tattoos up to her neckline with wilderness and rabbit motifs, reflected in her necklace. Her mildly parted, plump lips add to her charm. Her outfit, reminiscent of the pin-up art period from the late 1800s to early 1900s, is captured from bust upwards. "]},
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-6256.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]}},
  :block-1009
  {:name "block-1009",
   :w 16,
   :selected-view :new-create-image-1,
   :root [15 9],
   :h 10,
   :queries {},
   :tab "excellent snake",
   :create-image
   {:new-create-image-1
    ["A beautiful viking forest landscape with a waterfall, wildlife, fantasy lit with cyberpunk and vaporwave colors. A retro future. Many rabbits eye the scene. There is a beautiful woman standing in the field, she looks upon you with kind eyes and beckons you closer..."]},
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-1009.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]}},
  :block-1318
  {:clojure
   {:new-clojure-7
    (let [clojure-version (clojure-version)
          jvm-version (System/getProperty "java.version")]
      (str
        "🐇🥕 Sup! Internal RVBBIT nREPL. Clojure "
        clojure-version
        " on "
        jvm-version
        " JVM tech"
        " 🥕🐇"))},
   :name "block-1318",
   :w 14,
   :selected-mode {:new-clojure-7 :text, :new-clojure2-1 :text},
   :selected-view :new-clojure-7,
   :root [1 6],
   :h 2,
   :clojure2
   {:new-clojure2-1
    (let [clojure-version (clojure-version)
          jvm-version (System/getProperty "java.version")]
      (str
        "👻 Whoa. Spooky external nREPL! 👀 Clojure "
        clojure-version
        " on JVM tech "
        jvm-version
        " 👻"))},
   :queries {},
   :tab "excellent snake",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-1318.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]}},
  :block-7215
  {:h 4,
   :w 9,
   :tab "through the rabbit hole and out the other side",
   :root [5 20],
   :name "block-7215",
   :views
   {:param-val
    [:box
     :align
     :center
     :justify
     :center
     :padding
     "13px"
     :style
     {:font-size "88px"}
     :child
     [:string :flow/flow-forever>:final-math]]},
   :queries {}},
  :block-3777
  {:h 5,
   :w 8,
   :connection-id "bigfoot-ufos",
   :name "drag-from-select-all-ufo_sightings",
   :queries
   {:state-drag-3
    {:select [:state [[:count 1] :rowcnt]],
     :from [[:query/ufo-sightings-drag-9 :uu58]],
     :group-by [:state],
     :order-by [[:rowcnt :desc]]}},
   :root [17 8],
   :tab "sapphire ape"},
  :block-6403
  {:name "block-6403",
   :w 5,
   :selected-view :hi,
   :root [1 10],
   :h 4,
   :queries {},
   :tab "excellent snake",
   :python3
   {:new-python3-2
    ["import platform"
     ""
     "print(\"Hello, World! Python v\" + platform.python_version() + \" \" + platform.system() + \" \" + platform.release())"
     ""]},
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-6403.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]}},
  :block-6121
  {:h 2,
   :w 16,
   :root [0 4],
   :tab "through the rabbit hole and out the other side",
   :selected-view :hi,
   :name "block-6121",
   :views
   {:hi
    [:box
     :attr
     {:id ":block-6121.:hi"}
     :style
     {:font-size "15px",
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:speak-click
      "Here you can see that while running the flow interactively, we get the dialog push, as well as the ability to manipulate the options on the flow directly."]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-1449
  {:h 7,
   :w 32,
   :connection-id "bigfoot-ufos",
   :name "select-all-ufo_sightings",
   :queries
   {:ufo-sightings-drag-9
    {:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}},
   :root [1 1],
   :tab "sapphire ape",
   :selected-view :ufo-sightings-drag-9},
  :block-8594
  {:name "block-8594",
   :w 17,
   :style :param/glass-fish-style,
   :selected-view :hi,
   :root [1 1],
   :h 5,
   :connection-id "system-db",
   :queries
   {:new-query
    {:cache? false,
     :limit 100,
     :group-by [3],
     :_last-run "21:51:46",
     :refresh-every 10,
     :from [[:jvm_stats :kke192]],
     :order-by [[2 :desc]],
     :connection-id "system-db",
     :select
     [[[:avg :thread_count] :thread_count]
      [:ts :ts1]
      [[:substr :ts 0 16] :ts]
      [[:avg :sys_load] :sys_load]
      [[:avg :used_memory_mb] :used_memory_mb]],
     :post-process-fn reverse}},
   :tab "star-shaped wallaby",
   :views
   {:hi
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :BarChart
      {:data :new-query,
       :style {:label {:color "#ffffff"}, :font-family :theme/base-font},
       :margin {:top 15, :right 25, :left 10, :bottom 20}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0}]
      [:>
       :Tooltip
       {:content-style
        {:background-color "#00000099",
         :font-weight 700,
         :border "1px solid transparent",
         :border-radius "4px"}}]
      [:>
       :XAxis
       {:dataKey :ts1,
        :label
        {:value "sys load",
         :style {:font-size "15px", :color "#ffffff", :font-weight 700},
         :position "middle",
         :dy 25}}]
      [:> :YAxis {:domain ["auto" "auto"]}]
      [:>
       :Bar
       {:isAnimationActive true,
        :dataKey :sys_load,
        :stroke-width 3,
        :fill :param/generated-colors>colors>0}]]]}},
  :block-7922
  {:name "block-7922",
   :w 5,
   :style :param/glass-fish-style,
   :selected-view :hi,
   :root [36 1],
   :h 3,
   :queries {},
   :tab "star-shaped wallaby",
   :minimized? false,
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "60px",
      :color :param/generated-colors>colors>0,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :client/*client-name*>stats>memory]]
      [:box
       :style
       {:font-size "18px",
        :text-shadow
        [:string3
         "2px 2px 10px "
         :solver/colors-of-the-moment>darkest
         ", 2px 2px 10px "
         :solver/colors-of-the-moment>darkest],
        :margin-top "-15px"}
       :child
       "client js used (mb)"]]]}},
  :block-4082
  {:h 25,
   :w 8,
   :tab "star-shaped wallaby",
   :root [0 2],
   :name ":param/generated-colors",
   :views
   {:param-val
    [:box
     :align
     :center
     :justify
     :center
     :padding
     "13px"
     :style
     {:font-size "17px"}
     :child
     [:data-viewer :param/generated-colors]]},
   :queries {},
   :minimized? true},
  :block-11887
  {:h 16,
   :w 9,
   :tab "star-shaped wallaby",
   :root [52 17],
   :name ":param/generated-colors",
   :views
   {:param-val
    [:box
     :align
     :center
     :justify
     :center
     :padding
     "13px"
     :style
     {:font-size "12px"}
     :child
     [:data-viewer :param/generated-colors]]},
   :queries {}}},
 :selected-block "none!",
 :theme-colors-hashmap
 {"float" "#dacdba",
  "boolean" "#98bfbb",
  "map" "#c2b88a",
  "list" "#583c7e",
  "string" "#ffffff",
  "any" "#6b99ae",
  "vector" "#6ed0d4",
  "keyword" "#dce6c9",
  "rabbit-code" "#bf8178",
  "datetime" "#8f2834",
  "integer" "#ddadc5",
  "unknown" "#5c3a3e",
  "date" "#293824"},
 :click-param
 {:tables-sys
  {:db_schema "none",
   :db_catalog nil,
   :connection_id "system-db",
   :schema_cat nil,
   :table_name "board_history",
   :fields 4},
  :flow
  {:crow-flow-201a>*running? false,
   :counting-loop>*running? false,
   :flow-forever>*running? false,
   :flow-forever>final-math nil,
   :openai-image-gen-ladder3>relative-url-path-for-png-version
   "./images/gen/b64-image3-81362-16393.png",
   :openai-image-gen-ladder3>*running? false,
   :python-test-1>*running? false,
   :live-scratch-flow>*running? false},
  :flows-sys
  {:flow_id "python-test-1",
   :file_path "./flows/python-test-1.edn",
   :last_modified "2024-03-12 02:37:43"},
  :time {:now-seconds "Tuesday, August 13th 11:49:54PM", :month 4},
  :grid1-sys* {},
  :client
  {:affirmative-ultramarine-camel-9>stats>memory 550.3978,
   :elegant-icosahedral-rhinoceros-30>stats>memory nil,
   :super-yellow-hound-9>stats>memory nil,
   :quiet-cubic-beaver-23>stats>memory nil,
   :honest-copper-cockroach-0>stats>memory nil,
   :wonderful-black-bear-23>stats>memory 316,
   :*client-name*>stats>memory 292.6857,
   :accepted-diamond-zebra-40>stats>memory nil,
   :brave-prismatic-camel-31>stats>memory nil,
   :distinguished-hexagonal-badger-16>stats>memory nil,
   :essential-elliptic-locust-24>stats>memory nil,
   :wealthy-jade-human-10>stats>memory nil},
  :param
  {:background-image-path [:string3 :param/path-dir :param/rel-image-path],
   :rel-image-path2 "images/large/b64-image3-48163-50841-4k.webp",
   :path-dir "/home/ryanr/rvbbit/frontend/resources/public/",
   :selected-view-data
   (let [process (.exec (Runtime/getRuntime) "vmstat 1 1")
         reader (java.io.BufferedReader.
                  (java.io.InputStreamReader. (.getInputStream process)))
         react! (clojure.string/lower-case :time/now-seconds)
         output (StringBuilder.)]
     (loop [line (.readLine reader)]
       (when line
         (.append output line)
         (.append output "\n")
         (recur (.readLine reader))))
     (str output "\n")),
   :selected-view [:clojure :new-clojure],
   :generated-colors
   [:run-solver [:get-my-colors {:input-image-path :param/background-image-path}]],
   :miraculous-orange-hedgehog "new parameter value!",
   :rel-image-path :flow/openai-image-gen-ladder3>relative-url-path-for-png-version,
   :selected-block :block-2810,
   :glass-fish-style
   {:background-color "#00000000",
    :border-radius "16px",
    :box-shadow "10px 5px 5px #00000034",
    :backdrop-filter "blur(4px) brightness(60%)",
    :filter nil}},
  :theme
  {:codemirror-theme "rvbbit-dynamic",
   :editor-param-background-color "#000000",
   :base-block-style {:backdrop-filter "blur(2px) brightness(30%) "},
   :vega-defaults
   {:view {:stroke "transparent"},
    :axis
    {:domainColor "#ffffff22",
     :grid true,
     :font "Lato",
     :labelColor "#ffffff88",
     :titleFont "Lato",
     :titleColor "#ffffff99",
     :labelFont "Lato",
     :domain false,
     :gridColor "#ffffff22",
     :tickColor "#ffffff22",
     :axisFont "Lato"},
    :legend
    {:labelFont "Lato",
     :legendFont "Lato",
     :labelColor "#ffffff99",
     :titleColor "#ffffff99",
     :stroke "#ffffff99",
     :titleFont "Lato"},
    :header {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"},
    :mark {:font "Lato"},
    :title
    {:font "Lato",
     :subtitleFont "Lato",
     :labelFont "Lato",
     :titleFont "Lato",
     :titleColor "#ffffff99"}},
   :grid-selected-column-css
   {:background-color "#00000088", :filter "brightness(200%)"},
   :base-block-color-selected "#00030a",
   :block-title-font-color "#ffffff",
   :universal-pop-color [:invert-hex-color :theme/editor-outer-rim-color],
   :base-block-color "#04041e82",
   :editor-rim-color :param/generated-colors>colors>4,
   :base-block-filter-selected
   "drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)",
   :vega-default-color-scheme {:scheme "pastel2"},
   :data-colors :param/generated-colors>data-colors,
   :editor-grid-selected-font-color "#000000",
   :monospaced-font "Nova Mono",
   :editor-grid-selected-background-color "#dc9cb0",
   :nivo-defaults
   {:font-family "Instagram Sans",
    :labels
    {:text
     {:fill "#ffffff",
      :font-size "16px",
      :font-family "Instagram Sans",
      :font-weight 700}},
    :tooltip
    {:container
     {:background "#000",
      :color "#ffffff",
      :text {:fill "#eeeeee"},
      :fontSize "18px",
      :borderRadius "4px",
      :boxShadow "0 1px 2px rgba(0, 0, 0, 0.55)",
      :padding "5px 9px"},
     :basic {:whiteSpace "pre", :display "flex", :alignItems "center"},
     :tableCell {:padding "3px 5px"}},
    :axis
    {:legend
     {:text
      {:fill "#ffffff",
       :font-size "14px",
       :font-family "Instagram Sans",
       :font-weight 700}},
     :ticks
     {:line {:stroke "#ffffff60"}, :text {:fill "#ffffff60", :font-weight 700}}},
    :grid {:line {:stroke "#ffffff", :strokeWidth 0, :strokeDasharray "0 0"}}},
   :editor-outer-rim-color :param/generated-colors>highest-saturation,
   :grid-selected-font-color "#000000",
   :block-title-selected-font-color "#ffffff",
   :grid-selected-background-color "#a3d3ff",
   :grid-font-color "#ffffff",
   :canvas-background-css
   {:background-image [:string3 "url(" :param/rel-image-path ")"],
    :transition "all 0.8s ease-in-out",
    :background-size "cover",
    :background-color "#424f57"},
   :editor-font-color "#ffffff",
   :base-font "Nova Square",
   :block-tab-selected-font-color "#c9d1ff",
   :editor-background-color "#000006",
   :editor-grid-font-color "#ffffff"},
  :connections-sys {:database_name "*cache-db*", :connection_id "system-db"},
  :sys {:selected-tab "star-shaped wallaby", :selected-tab-idx 3},
  :data {:new-clojure-2 nil}},
 :selected-flow "live-scratch-flow"}