{:orders {:flow-fn-sys [:name :full_map :description :inputs :icon :input_types :output_types :category], :fflows-sys [:category :description :name :file_path :full_map :icon], :flows-sys [:flow_id :file_path :last_modified], :fflowparts-sys [:category :description :name :file_path :full_map :icon], :flow-history-drag-29 [:client_name :elapsed :elapsed_seconds :ended :flow_id :human_elapsed :in_error :parent_run_id :run_id :started :ts], :flow_history [:flow_id :run_id :parent_run_id :client_name :in_error :started :ended :elapsed :elapsed_seconds :human_elapsed :ts], :flow-fn-categories-sys [:category], :reco-counts [:table_name :cnt], :flow-fn-all-sys [:name]}, :reco-preview nil, :flow? false, :sql-source {:flow-history-drag-29 {:select [:client_name :elapsed :elapsed_seconds :ended :flow_id :human_elapsed :in_error :parent_run_id :run_id :started :ts], :from [[:flow_history :dd953]], :_last-run "08:56:39"}, :flow_history {:select [:*], :from [:flow_history], :limit 111}}, :selected-flow-block nil, :audio-playing? false, :meta {:flow-fn-sys {:fields {:name {:data-type "string", :distinct 18, :group-by? true, :commons {":write-file" 1, ":json-to-edn" 1, ":get-colors" 1}, :cardinality 100}, :full_map {:data-type "string", :distinct 18, :group-by? true, :commons {"{:description \"Convert a JSON string to Clojure EDN\", :fn (fn [json-string] (rvbbit-backend.util/json-to-edn json-string)), :inputs [:json-string], :icon \"zmdi-file-text\", :types {:json-string :string, :out :any}}" 1, "{:file-path \"./flows/node-color-thief-js.edn\", :icon \"zmdi-gradient\", :description \"Take an image local path and generate a color palette map from it.\"}" 1, "{:description \"Read file content from the server. Useful in chaining together operations.\", :fn (fn [full-path] (rvbbit-backend.websockets/read-local-file full-path)), :inputs [:full-path], :icon \"zmdi-file-text\", :types {:full-path :string, :out :string}}" 1}, :cardinality 100}, :description {:data-type "string", :distinct 17, :group-by? true, :commons {"Basic HTTP call primitive" 2, "Get top 50 color frequencies from an image in hex form." 1, "Send dialog content to a client - given a vector of choices, will render buttons" 1}, :cardinality 94}, :inputs {:data-type "string", :distinct 15, :group-by? true, :commons {"[:destination :content :w :h :duration]" 3, "[:req-map]" 2, "[:full-path :file-data]" 1}, :cardinality 83}, :icon {:data-type "string", :distinct 10, :group-by? true, :commons {"zmdi-file-text" 3, "zmdi-alert-polygon" 3, "zmdi-dns" 2}, :cardinality 55}, :input_types {:data-type "string", :distinct 11, :group-by? true, :commons {"[:string]" 5, "[:keyword :any :integer :integer :integer]" 3, "[:map]" 2}, :cardinality 61}, :output_types {:data-type "string", :distinct 5, :group-by? true, :commons {":any" 12, ":string" 3, ":keyword" 1}, :cardinality 27}, :category {:data-type "string", :distinct 1, :group-by? true, :commons {":rabbit-base" 18}, :cardinality 5}}, :rowcount 18}, :fflows-sys {:fields {:category {:data-type "string", :distinct 1, :group-by? true, :commons {":flow" 82}, :cardinality 1}, :description {:data-type "string", :distinct 1, :group-by? true, :commons {"" 82}, :cardinality 1}, :name {:data-type "string", :distinct 80, :group-by? true, :commons {"clam-flow-851" 3, "map-pull-test2" 1, "callie-3" 1}, :cardinality 97}, :file_path {:data-type "string", :distinct 82, :group-by? true, :commons {"./flows/stitches-math.edn" 1, "./flows/hey-rabbit-pathfinder.edn" 1, "./flows/dalle3-create-image-newengland-old.edn" 1}, :cardinality 100}, :full_map {:data-type "string", :distinct 81, :group-by? true, :commons {"{:flowmaps {:open-input {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :user-input \"feed me, seymour!!\"}, :z 0, :ports {:out {:out :string}}, :x 1169.1345454545453, :y 1210.6763636363637}}, :flow-id \"clam-flow-851\", :flowmaps-connections [[:open-input :done]]}" 2, "{:flowmaps {:kick-1 {:w 200, :h 100, :x 3449.707608604431, :y 1367.7343490600585, :z 0, :data {:flow-item {:description \"Push items to the client UI.\", :category \":rabbit-base\", :fn (fn [destination name sub-task & args] (rvbbit-backend.websockets/kick destination name sub-task args)), :name \":kick\", :type :kick, :icon \"images/pink-rabbit-head.png\", :defaults {:destination :client-name, :sub-task :flow-id, :name :flow-id}, :types {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :out :any}, :input_types \"[[:keyword :vector :list :set] :string [:string :keyword]]\", :style {:color \"#fc0fc0\"}, :selected-style {:color \"#fc0fc0\"}, :inputs [:destination :name :sub-task :value-3 :value-4], :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Push items to the client UI.\\\", :fn (fn [destination name sub-task & args] (rvbbit-backend.websockets/kick destination name sub-task args)), :type :kick, :icon \\\"images/pink-rabbit-head.png\\\", :defaults {:destination :client-name, :sub-task :flow-id, :name :flow-id}, :types {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :out :any}, :style {:color \\\"#fc0fc0\\\"}, :selected-style {:color \\\"#fc0fc0\\\"}, :inputs [:destination :name :sub-task], :expandable? true, :required [:destination :name :sub-task]}\", :required [:destination :name :sub-task]}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [357.3567810058594 157.34896850585938], :h 6, :connection-id nil, :queries {:name-drag-40 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :nn284]], :where [:= :name \":kick\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":kick\", :param-field :name, :source-panel-key :flow-fn-list*, :type :kick, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 6}}, :icon \"images/pink-rabbit-head.png\", :ports {:in {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :value-3 :any, :value-4 :any}, :out {:error :string, :* {:error \"java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long\"}}}}, :open-input-1 {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"feed me, seymour!\"}, :z 0, :ports {:in {}, :out {:out :string}}, :x 2736.8722753576326, :y 1370.837915698902}, :open-input-3 {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input :base}, :z 0, :ports {:out {:out :keyword}}, :x 2764.800122707993, :y 1561.5292232684237}, :kick-2 {:w 200, :h 100, :x 3412.0444202088465, :y 1642.0587967722038, :z 0, :data {:flow-item {:description \"Push items to the client UI.\", :category \":rabbit-base\", :fn (fn [destination name sub-task & args] (rvbbit-backend.websockets/kick destination name sub-task args)), :name \":kick\", :type :kick, :icon \"images/pink-rabbit-head.png\", :defaults {:destination :client-name, :sub-task :flow-id, :name :flow-id}, :types {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :out :any}, :input_types \"[[:keyword :vector :list :set] :string [:string :keyword]]\", :style {:color \"#fc0fc0\"}, :selected-style {:color \"#fc0fc0\"}, :inputs [:destination :name :sub-task :value-3 :value-4 :value-5 :value-6], :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Push items to the client UI.\\\", :fn (fn [destination name sub-task & args] (rvbbit-backend.websockets/kick destination name sub-task args)), :type :kick, :icon \\\"images/pink-rabbit-head.png\\\", :defaults {:destination :client-name, :sub-task :flow-id, :name :flow-id}, :types {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :out :any}, :style {:color \\\"#fc0fc0\\\"}, :selected-style {:color \\\"#fc0fc0\\\"}, :inputs [:destination :name :sub-task], :expandable? true, :required [:destination :name :sub-task]}\", :required [:destination :name :sub-task]}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [1096.4557304382324 275.4192810058594], :h 6, :connection-id nil, :queries {:name-drag-19 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :tt488]], :where [:= :name \":kick\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":kick\", :param-field :name, :source-panel-key :flow-fn-list*, :type :kick, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 6}}, :icon \"images/pink-rabbit-head.png\", :ports {:in {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :value-3 :any, :value-4 :any, :value-5 :any, :value-6 :any}, :out {:error :string, :* {:error \"java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long\"}}}}, :open-input-5 {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"nope!\"}, :z 0, :ports {:out {:out :string}}, :x 2720.677470934069, :y 1741.4885174725507}, :open-input {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"kick-test\"}, :z 0, :ports {:out {:out :string}}, :x 3004.6165799724517, :y 1592.9840098822297}, :open-input-4 {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input [:v-box :size \"auto\" :width \"490px\" :style {:font-size \"13px\", :opacity 0.33} :children [[:h-box :size \"auto\" :justify :between :children [[:box :child \":mean\"] [:box :child \"3853.75\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":standard-deviation\"] [:box :child \"1099.883942741233\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":sample-size\"] [:box :child \"4\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":fields\"] [:box :child \"[:YEAR]\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":calc-used\"] [:box :child \"[:percentiles [0.01 0.99]]\" :style {:font-weight 400}]]]]], :view-output? false, :width 350}, :z 0, :ports {:out {:idx7 :keyword, :idx5 :keyword, :* [:v-box :size \"auto\" :width \"490px\" :style {:font-size \"13px\", :opacity 0.33} :children [[:h-box :size \"auto\" :justify :between :children [[:box :child \":mean\"] [:box :child \"3853.75\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":standard-deviation\"] [:box :child \"1099.883942741233\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":sample-size\"] [:box :child \"4\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":fields\"] [:box :child \"[:YEAR]\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":calc-used\"] [:box :child \"[:percentiles [0.01 0.99]]\" :style {:font-weight 400}]]]]], :idx2 :string, :idx4 :string, :idx1 :keyword, :idx6 :map, :idx3 :keyword, :idx8 :vector, :idx0 :keyword}}, :x 3020.2006378998626, :y 1715.8480772276178}, :open-input-2 {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input :ufo-sightings-drag-44}, :z 0, :ports {:out {:out :keyword}}, :x 2759.2156427639634, :y 1475.5767468808303}}, :flow-id \"kick-test-1-3-24\", :flowmaps-connections [[:open-input-1 :kick-1/value-3] [:open-input :kick-1/name] [:kick-1 :done] [:open-input-3 :kick-1/sub-task] [:open-input-2 :kick-2/sub-task] [:open-input-4 :kick-2/value-3] [:open-input-5 :kick-2/value-4] [:open-input-1 :kick-2/value-5]]}" 1, "{:flowmaps {:open-fn-13 {:y 1824.6140314275567, :fn (fn [x] x), :w 200, :raw-fn (fn [hex-colors] (vec (let [hex-to-rgb (fn [hex] (map (fn [idx] (Integer/parseInt (subs hex idx (+ idx 2)) 16)) [1 3 5])) brightness (fn [rgb] (let [[r g b] rgb] (+ (* 0.299 r) (* 0.587 g) (* 0.114 b))))] (sort-by (comp brightness hex-to-rgb) hex-colors)))), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx8 :string, :idx0 :string}}, :h 100, :x 4508.6715997869305, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :second-lightest {:y 1972.8225287543403, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (last (drop-last x))), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 5305.513375289351, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-fn-8 {:y 1289.3273225170874, :fn (fn [x] x), :w 200, :raw-fn (fn [x y] (str (clojure.string/replace x \"/home/ryanr/rvbbit/frontend/resources/public/\" \"url(\") \")\")), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any, :value-1 :any}, :out {:out :any}}, :h 100, :x 4066.4052582891677, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :alert!-2 {:w 200, :h 100, :x 5313.887965339137, :y 1188.6692051877603, :z 0, :data {:flow-item {:description \"Send a pop-up notification to a client (or :all clients)\", :category \":rabbit-base\", :fn (fn [destination content w h duration] (rvbbit-backend.websockets/alert! destination content w h duration)), :name \":alert!\", :icon \"zmdi-alert-polygon\", :defaults {:destination :client-name, :content \"Alert!\", :w 10, :h 1, :duration 6}, :types {:destination :keyword, :content :any, :out :any, :w :integer, :h :integer, :duration :integer}, :input_types \"[:keyword :any :integer :integer :integer]\", :style {:color \"#FDFD96\"}, :selected-style {:color \"#FDFD96\"}, :inputs \"[:destination :content :w :h :duration]\", :output_types \":any\", :full_map \"{:description \\\"Send a pop-up notification to a client (or :all clients)\\\", :fn (fn [destination content w h duration] (rvbbit-backend.websockets/alert! destination content w h duration)), :inputs [:destination :content :w :h :duration], :icon \\\"zmdi-alert-polygon\\\", :style {:color \\\"#FDFD96\\\"}, :selected-style {:color \\\"#FDFD96\\\"}, :defaults {:destination :client-name, :content \\\"Alert!\\\", :w 10, :h 1, :duration 6}, :types {:destination :keyword, :content :any, :out :any, :w :integer, :h :integer, :duration :integer}}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [1154 188], :h 6, :connection-id nil, :queries {:name-drag-34 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :qq253]], :where [:= :name \":alert!\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":alert!\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 0}}, :icon \"zmdi-alert-polygon\", :ports {:in {:destination :keyword, :content :any, :w :integer, :h :integer, :duration :integer}, :out {:out :any}}}, :open-fn-7 {:y 1558.8995291537408, :fn (fn [x] x), :w 200, :raw-fn (fn [x y] (str \"convert \" x \" \" y)), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any, :value-1 :any}, :out {:out :any}}, :h 100, :x 3365.9914373132146, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :shell-command-1 {:w 200, :h 100, :x 3657.4198481531157, :y 1353.6626850116338, :z 0, :data {:flow-item {:description \"Execute shell command. WARNING: only use if you know what you're doing / have controlled inputs\", :category \":rabbit-base\", :fn (fn [command] (rvbbit-backend.websockets/run-shell-command command)), :name \":shell-command\", :icon \"zmdi-washing-machine\", :defaults {:command \"ls -la\"}, :types {:command :string, :out :any}, :input_types \"[:string]\", :style {:color \"#ffdd3c\"}, :selected-style {:color \"#ffdd3c\"}, :inputs \"[:command]\", :output_types \":any\", :full_map \"{:description \\\"Execute shell command. WARNING: only use if you know what you're doing / have controlled inputs\\\", :fn (fn [command] (rvbbit-backend.websockets/run-shell-command command)), :icon \\\"zmdi-washing-machine\\\", :defaults {:command \\\"ls -la\\\"}, :types {:command :string, :out :any}, :style {:color \\\"#ffdd3c\\\"}, :selected-style {:color \\\"#ffdd3c\\\"}, :inputs [:command], :required [:command]}\", :required [:command]}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [890 244], :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-37 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :vv683]], :where [:= :name \":shell-command\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":shell-command\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 7}}, :icon \"zmdi-washing-machine\", :ports {:in {:command :string}, :out {:output :vector, :exception :vector, :seconds :vector, :command :string, :* :map}}}, :lightest1 {:y 1798.000480143229, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (last x)), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 5290.254224537037, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :gradient1 {:y 1779.8277822989005, :fn (fn [x] x), :w 200, :raw-fn (fn [x y] (vec (rvbbit-backend.util/generate-gradient x y 8))), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any, :value-1 :any}, :out {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx0 :string}}, :h 100, :x 5737.372641782406, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-fn-1 {:y 1416.240407986111, :fn (fn [x] x), :w 200, :raw-fn (fn [x] x), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:headers :map, :method :keyword, :url :string, :body :map, :* :map}}, :h 100, :x 1314.2310474537035, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-fn-2 {:y 1472.904453412224, :fn (fn [x] x), :w 200, :raw-fn (fn [x] x), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:idx0 :map, :* :vector}}, :h 100, :x 1850.385489430147, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :darkest1 {:y 1499.4197961877892, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (first x)), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 5274.040574363425, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-input-1 {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"vivid\"}, :z 0, :ports {:out {:out :string}}, :x -113.35663248697915, :y 1226.1349690755208}, :open-input-3 {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input {:width 13, :height 8, :duration 9}}, :z 0, :ports {:out {:width :integer, :height :integer, :duration :integer, :* :map}}, :x 4554.520222267909, :y 1374.7628150627627}, :alert!-1 {:w 240, :h 100, :x 5282.577773321242, :y 1355.4901399717228, :z 0, :data {:flow-item {:description \"Send a pop-up notification to a client (or :all clients)\", :category \":rabbit-base\", :fn (fn [destination content w h duration] (rvbbit-backend.websockets/alert! destination content w h duration)), :name \":alert!\", :icon \"zmdi-alert-polygon\", :defaults {:destination :client-name, :content \"Alert!\", :w 10, :h 1, :duration 6}, :types {:destination :keyword, :content :any, :out :any, :w :integer, :h :integer, :duration :integer}, :input_types \"[:keyword :any :integer :integer :integer]\", :style {:color \"#FDFD96\"}, :selected-style {:color \"#FDFD96\"}, :inputs \"[:destination :content :w :h :duration]\", :output_types \":any\", :full_map \"{:description \\\"Send a pop-up notification to a client (or :all clients)\\\", :fn (fn [destination content w h duration] (rvbbit-backend.websockets/alert! destination content w h duration)), :inputs [:destination :content :w :h :duration], :icon \\\"zmdi-alert-polygon\\\", :style {:color \\\"#FDFD96\\\"}, :selected-style {:color \\\"#FDFD96\\\"}, :defaults {:destination :client-name, :content \\\"Alert!\\\", :w 10, :h 1, :duration 6}, :types {:destination :keyword, :content :any, :out :any, :w :integer, :h :integer, :duration :integer}}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [676 74], :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-17 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :yy463]], :where [:= :name \":alert!\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":alert!\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 0}}, :icon \"zmdi-alert-polygon\", :ports {:in {:destination :keyword, :content :any, :w :integer, :h :integer, :duration :integer}, :out {:out :any}}}, :make-data-colors {:y 1837.9007893880205, :fn (fn [x] x), :w 200, :raw-fn (fn [x y] (zipmap [\"float\" \"boolean\" \"map\" \"list\" \"string\" \"vector\" \"keyword\" \"rabbit-code\" \"datetime\" \"integer\" \"unknown\" \"date\" \"nil\"] (shuffle (into y x)))), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any, :value-1 :any}, :out {\"float\" :string, \"boolean\" :string, \"map\" :string, \"list\" :string, :* :map, \"string\" :string, \"vector\" :string, \"keyword\" :string, \"rabbit-code\" :string, \"datetime\" :string, \"integer\" :string, \"unknown\" :string, \"date\" :string, \"nil\" :string}}, :h 100, :x 6211.317592592592, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :in-prompt {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"A high-definition, hyperreal, vivid 16:9 image of a New England scene in America, just before dawn during a heavy snowstorm, blending traditional and cyberpunk elements. The scene has a slightly gritty atmosphere, with the town covered in snow and buildings emitting soft pink and neon light blue glows. On the left side of the frame, a young and beautiful Irish-looking woman, clearly in her late 20s, with pouty full lips (with the bottom lip being prominent) and a slightly upturned nose, poses with a pleased expression yet mischievious on her large mouth. Her long hair is slightly wet, with snow collecting on it and her face, emphasizing the heavy snowfall. She has intricate Celtic-style tattoos of rabbits and wilderness on her neck, collarbone, and shoulders. The pre-dawn light adds a serene yet mysterious feel to the scene, underscoring the fusion of the natural world and technological influence.\", :width 750}, :z 0, :ports {:out {:out :string}}, :x 727.2187565983952, :y 1028.1476308461783}, :open-fn-6 {:y 1360.8546035354202, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (clojure.string/replace (clojure.string/replace x \".webp\" \".png\") \"/home/ryanr/rvbbit-out\" \"/home/ryanr/rvbbit/frontend/resources/public/images/gen\")), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 3182.757763012036, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :ssecond-darkest {:y 1644.5442626953125, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (second x)), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 5294.654181134259, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :node-color-thief-js {:y 1781.755455824908, :sub-flow {:flow-id \"node-color-thief-js\", :file-path \"./flows/node-color-thief-js.edn\", :map {:image-path {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \" /home/ryanr/rvbbit/frontend/resources/public/images/shannon45.png\"}, :z 0, :ports {:out {:out :string}}, :x 948.9116738809121, :y 1074.148015202703}, :shell-command-1 {:w 200, :h 100, :x 1758.4411167689732, :y 1117.7292503720237, :z 0, :data {:flow-item {:description \"Execute shell command. WARNING: only use if you know what you're doing / have controlled inputs\", :category \":rabbit-base\", :fn (fn [command] (rvbbit-backend.websockets/run-shell-command command)), :name \":shell-command\", :icon \"zmdi-washing-machine\", :defaults {:command \"ls -la\"}, :types {:command :string, :out :any}, :input_types \"[:string]\", :style {:color \"#ffdd3c\"}, :selected-style {:color \"#ffdd3c\"}, :inputs \"[:command]\", :output_types \":any\", :full_map \"{:description \\\"Execute shell command. WARNING: only use if you know what you're doing / have controlled inputs\\\", :fn (fn [command] (rvbbit-backend.websockets/run-shell-command command)), :icon \\\"zmdi-washing-machine\\\", :defaults {:command \\\"ls -la\\\"}, :types {:command :string, :out :any}, :style {:color \\\"#ffdd3c\\\"}, :selected-style {:color \\\"#ffdd3c\\\"}, :inputs [:command], :required [:command]}\", :required [:command]}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [539.1770935058594 176.171875], :h 6, :connection-id nil, :queries {:name-drag-42 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :cc59]], :where [:= :name \":shell-command\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":shell-command\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 6}}, :icon \"zmdi-washing-machine\", :ports {:in {:command :string}, :out {:output :vector, :exception :vector, :seconds :vector, :command :string, :* :map}}}, :clojure-string-join-1 {:w 200, :h 100, :x 1348.4940418061756, :y 1136.4640299479165, :z 0, :data {:flow-item {:description \"Clojure.string's join function.\", :category \":clojure-base\", :fn (fn [delimiter & args] (clojure.string/join delimiter args)), :name \":clojure-string-join\", :icon \"zmdi-group\", :defaults {:delimiter \" \"}, :types {:delimiter :string, :out :string}, :input_types \"[:string]\", :inputs \"[:delimiter]\", :output_types \":string\", :expandable? true, :full_map \"{:description \\\"Clojure.string's join function.\\\", :fn (fn [delimiter & args] (clojure.string/join delimiter args)), :inputs [:delimiter], :required [:delimiter], :defaults {:delimiter \\\" \\\"}, :expandable? true, :icon \\\"zmdi-group\\\", :types {:delimiter :string, :out :string}}\", :required [:delimiter]}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [540.1770935058594 279.171875], :h 6, :connection-id nil, :queries {:name-drag-12 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ww526]], :where [:= :name \":clojure-string-join\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":clojure-string-join\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 15}}, :icon \"zmdi-group\", :ports {:in {:delimiter :string, :value-1 :any, :value-2 :any}, :out {:out :string}}}, :shell-command-in {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"cd /home/ryanr/color-thief-project ; node ./colorThief2.js\"}, :z 0, :ports {:out {:out :string}}, :x 960.0851863779922, :y 1224.4579849567817}, :join-output-as-string {:y 1158.848120777027, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (clojure.string/join \" \" x)), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 2212.3248878272807, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :json-to-edn {:w 200, :h 100, :x 2685.7088668823244, :y 1151.33984375, :z 0, :data {:flow-item {:description \"Convert a JSON string to Clojure EDN\", :category \":rabbit-base\", :fn (fn [json-string] (rvbbit-backend.util/json-to-edn json-string)), :name \":json-to-edn\", :icon \"zmdi-file-text\", :types {:json-string :string, :out :any}, :input_types \"[:string]\", :inputs \"[:json-string]\", :output_types \":any\", :full_map \"{:description \\\"Convert a JSON string to Clojure EDN\\\", :fn (fn [json-string] (rvbbit-backend.util/json-to-edn json-string)), :inputs [:json-string], :icon \\\"zmdi-file-text\\\", :types {:json-string :string, :out :any}}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [1297.1770935058594 207.171875], :h 6, :connection-id nil, :queries {:name-drag-41 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :uu284]], :where [:= :name \":json-to-edn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":json-to-edn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 7}}, :icon \"zmdi-file-text\", :ports {:in {:json-string :string}, :out {:dominantColor :string, :colorPalette :vector, :* :map}}}}, :connections [[:shell-command-in :clojure-string-join-1/value-1] [:image-path :clojure-string-join-1/value-2] [:clojure-string-join-1 :shell-command-1/command] [:shell-command-1/output :join-output-as-string/value] [:join-output-as-string :json-to-edn/json-string] [:json-to-edn :done]]}, :flow-id \"node-color-thief-js\", :w 200, :icon \"zmdi-puzzle-piece\", :z 0, :ports {:in {:image-path :string, :shell-command-in :string}, :out {:dominantColor :string, :colorPalette :vector, :* :map}}, :h 100, :file-path \"./flows/node-color-thief-js.edn\", :x 3288.9801815257347, :data {:flow-item nil, :name \"drag-from-\", :w 5, :source-panel :flow-list*, :root [678.71875 344.6979217529297], :h 6, :connection-id nil, :view-output? false, :queries {:flow-id-drag-5 {:select [:flow_id :file_path :last_modified], :from [[:query/flows-sys :cc208]], :where [:= :flow_id \"node-color-thief-js\"]}}, :drag-meta {:data-type \"string\", :done-block :json-to-edn, :source-query :flows-sys, :param-full \"node-color-thief-js\", :param-field :flow_id, :source-panel-key :flow-list*, :type :sub-flow, :param-table :flows-sys, :source-table :query/flows-sys, :connection-id nil, :target :flow_id, :row-num 4}}}, :open-fn-9 {:y 1308.2844527633101, :fn (fn [x] x), :w 200, :raw-fn (fn [& x] \"vivid\"), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any, :value-1 :any}, :out {:error :string, :* :map}}, :h 100, :x 343.7386610243055, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-input {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input {:headers :value-2, :method :post, :url :value-3, :body {:prompt :value-0, :n 1, :size \"1792x1024\", :style :value-4, :response_format \"b64_json\", :model \"dall-e-3\", :quality :value-1}}}, :z 0, :ports {:out {:headers :map, :method :keyword, :url :string, :body :map, :* :map}, :in {:value-0 :any, :value-1 :any, :value-2 :any, :value-3 :any, :value-4 :any}}, :x 1309.4404009650732, :y 1191.9339613970587}, :dom-color1 {:y 1627.0126651539522, :fn (fn [x] x), :w 200, :raw-fn (fn [x] x), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 4034.728400735294, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-fn-11 {:y 1794.0621538947612, :fn (fn [x] x), :w 200, :raw-fn (fn [x] x), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx8 :string, :idx0 :string}}, :h 100, :x 4061.411247702206, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-fn-3 {:y 1343.2759061925549, :fn (fn [x] x), :w 200, :raw-fn (fn [x] x), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:revised_prompt :string, :b64_json :string, :* :map}}, :h 100, :x 2270.161167279412, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :quality {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"hd\"}, :z 0, :ports {:out {:out :string}}, :x 734.1538809317127, :y 1194.2060836226851}, :open-fn-4 {:y 1246.006547277114, :fn (fn [x] x), :w 200, :raw-fn (fn [x] x), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 2784.174551930146, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-fn-12 {:y 1624.2565088104782, :fn (fn [x] x), :w 200, :raw-fn (fn [x] [:v-box :children [[:img {:src (str (clojure.string/replace x \"/home/ryanr/rvbbit/frontend/resources/public/\" \"\")), :width \"600px\", :style {:border-radius \"10px\"}}]]]), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:idx0 :keyword, :idx1 :keyword, :idx2 :vector, :* :vector}}, :h 100, :x 4505.923477619014, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-fn-5 {:y 1551.3756304572612, :fn (fn [x] x), :w 200, :raw-fn (fn [x] x), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 2821.4617187500003, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :upper-mid {:y 2136.9676296657985, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (get x 6)), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 5306.102387152777, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :http-call-1 {:w 200, :h 100, :x 1747.3439280790442, :y 1235.2979650160846, :z 0, :data {:flow-item {:description \"Basic HTTP call primitive\", :category \":rabbit-base\", :fn (fn [req-map] (rvbbit-backend.websockets/http-call req-map)), :name \":http-call\", :icon \"zmdi-http\", :defaults {:req-map {:url \"https://owen-wilson-wow-api.onrender.com/wows/random\", :query-params {:movie \"Wedding Crashers\", :results 40}}}, :types {:req-map :map, :out :any}, :input_types \"[:map]\", :style {:color \"#7BB696\"}, :selected-style {:color \"#7BB696\"}, :inputs \"[:req-map]\", :output_types \":any\", :expandable? false, :full_map \"{:description \\\"Basic HTTP call primitive\\\", :fn (fn [req-map] (rvbbit-backend.websockets/http-call req-map)), :icon \\\"zmdi-http\\\", :defaults {:req-map {:url \\\"https://owen-wilson-wow-api.onrender.com/wows/random\\\", :query-params {:movie \\\"Wedding Crashers\\\", :results 40}}}, :types {:req-map :map, :out :any}, :style {:color \\\"#7BB696\\\"}, :selected-style {:color \\\"#7BB696\\\"}, :inputs [:req-map], :expandable? false, :required [:req-map]}\", :required [:req-map]}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [864.1770935058594 199.171875], :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-27 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ff241]], :where [:= :name \":http-call\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":http-call\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}, :icon \"zmdi-http\", :ports {:in {:req-map :map}, :out {:created :integer, :data :rowset, :* :map}}}, :open-fn-14 {:y 1182.8275316519948, :fn (fn [x] x), :w 200, :raw-fn (fn [x] [:box :child (str x) :size \"none\" :width \"500px\" :style {:font-size \"9px\", :overflow \"auto\"}] nil), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 4444.901514382471, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :gradient2 {:y 2042.9487506763357, :fn (fn [x] x), :w 200, :raw-fn (fn [x y] (vec (rvbbit-backend.util/generate-gradient x y 8))), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any, :value-1 :any}, :out {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx0 :string}}, :h 100, :x 5749.094478297879, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :mid-high {:y 2301.8376654547615, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (get x 4)), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 5740.51254354941, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-input-2 {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"natural\"}, :z 0, :ports {:out {:out :string}}, :x -111.46861165364578, :y 1444.116943359375}, :headers-map {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input {\"Authorization\" \"Bearer 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\", \"Content-Type\" \"application/json\"}}, :z 0, :ports {:out {\"Authorization\" :string, \"Content-Type\" :string, :* :map}}, :x 786.0028392650462, :y 1522.4280164930553}, :url-str {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"https://api.openai.com/v1/images/generations\", :view-output? true}, :z 0, :ports {:out {:out :string}}, :x 768.1744249131942, :y 1362.70009765625}, :open-fn-10 {:y 2127.723868324454, :fn (fn [x] x), :w 200, :raw-fn (fn [x] x), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:dominantColor :string, :colorPalette :vector, :* :map}}, :h 100, :x 4055.738221356873, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}}, :flow-id \"dalle3-create-image\", :flowmaps-connections [[:in-prompt :open-input/value-0] [:quality :open-input/value-1] [:headers-map/* :open-input/value-2] [:url-str :open-input/value-3] [:open-input/* :open-fn-1/value] [:open-fn-1/* :http-call-1/req-map] [:http-call-1/data :open-fn-2/value] [:open-fn-2/idx0 :open-fn-3/value] [:open-fn-3/revised_prompt :open-fn-4/value] [:open-fn-3/b64_json :open-fn-5/value] [:open-fn-5 :open-fn-6/value] [:open-fn-5 :open-fn-7/value] [:open-fn-6 :open-fn-7/value-1] [:open-fn-7 :shell-command-1/command] [:open-fn-6 :done] [:open-fn-6 :open-fn-8/value] [:open-input-1 :open-fn-9/value] [:open-input-2 :open-fn-9/value-1] [:open-fn-9 :open-input/value-4] [:open-fn-5 :node-color-thief-js/image-path] [:node-color-thief-js/* :open-fn-10/value] [:node-color-thief-js/colorPalette :open-fn-11/value] [:node-color-thief-js/dominantColor :dom-color1/value] [:open-fn-11 :open-fn-13/value] [:open-fn-13 :darkest1/value] [:open-fn-13 :lightest1/value] [:open-fn-13 :ssecond-darkest/value] [:open-fn-13 :second-lightest/value] [:open-fn-13 :mid-high/value] [:open-fn-13 :upper-mid/value] [:ssecond-darkest :gradient1/value] [:upper-mid :gradient1/value-1] [:lightest1 :gradient2/value] [:ssecond-darkest :gradient2/value-1] [:gradient1 :make-data-colors/value] [:gradient2 :make-data-colors/value-1] [:open-fn-6 :open-fn-12/value] [:open-fn-12 :alert!-1/content] [:open-input-3/width :alert!-1/w] [:open-input-3/height :alert!-1/h] [:open-input-3/duration :alert!-1/duration] [:open-fn-4 :open-fn-14/value] [:open-fn-14 :alert!-2/content] [:open-input-3/width :alert!-2/w] [:open-input-3/height :alert!-2/h] [:open-input-3/duration :alert!-2/duration] [:shell-command-1/* :open-fn-8/value-1]]}" 1}, :cardinality 98}, :icon {:data-type "string", :distinct 1, :group-by? true, :commons {"zmdi-developer-board" 82}, :cardinality 1}}, :rowcount 82}, :jvm-stats-drag-39 {:fields {:internal_queries_run {:data-type "integer", :distinct 1, :group-by? true, :commons {139 500}, :cardinality 0}, :queries_run {:data-type "integer", :distinct 1, :group-by? true, :commons {38 500}, :cardinality 0}, :sniffs_run {:data-type "integer", :distinct 1, :group-by? true, :commons {7 500}, :cardinality 0}, :sql_cache_size {:data-type "integer", :distinct 1, :group-by? true, :commons {13 500}, :cardinality 0}, :thread_count {:data-type "integer", :distinct 16, :group-by? true, :commons {99 128, 100 93, 101 73}, :cardinality 3}, :ts {:data-type "string", :distinct 500, :group-by? true, :commons {"2024-03-04 00:04:44" 1, "2024-03-03 23:18:14" 1, "2024-03-03 22:14:44" 1}, :cardinality 100}, :used_memory_mb {:data-type "integer", :distinct 408, :group-by? true, :commons {1014 3, 1113 3, 1247 3}, :cardinality 81}, :ws_peers {:data-type "integer", :distinct 1, :group-by? true, :commons {2 500}, :cardinality 0}}, :rowcount 500}, :flows-sys {:fields {:flow_id {:data-type "string", :distinct 80, :group-by? true, :commons {"clam-flow-851" 3, "map-pull-test2" 1, "callie-3" 1}, :cardinality 97}, :file_path {:data-type "string", :distinct 82, :group-by? true, :commons {"./flows/stitches-math.edn" 1, "./flows/hey-rabbit-pathfinder.edn" 1, "./flows/dalle3-create-image-newengland-old.edn" 1}, :cardinality 100}, :last_modified {:data-type "string", :distinct 11, :group-by? true, :commons {"2024-03-12 02:37:43" 72, "2024-03-14 13:07:27" 1, "2024-03-14 07:50:09" 1}, :cardinality 13}}, :rowcount 82}, :channel-history-drag-42 {:fields {:path {:data-type "string", :distinct 26, :group-by? true, :commons {"[:creating-channels :*]" 183, "[:error-path-issue!]" 155, "[:open-input :+-1/args+0 :+-1 :open-fn-1/x :open-fn-1 :done]" 28}, :cardinality 5}, :end_ts {:data-type "string", :distinct 38, :group-by? true, :commons {"2024-03-01 23:25:18" 81, "2024-03-01 23:25:59" 49, "2024-03-01 23:25:57" 41}, :cardinality 7}, :value {:data-type "string", :distinct 44, :group-by? true, :commons {"" 183, ":done" 134, "567" 18}, :cardinality 8}, :start {:data-type "integer", :distinct 153, :group-by? true, :commons {1709335518568 43, 1709335557795 17, 1709335518567 16}, :cardinality 30}, :channel {:data-type "string", :distinct 138, :group-by? true, :commons {"[:+-1/args+1 :+-1]" 34, "[:+-1/args+0 :+-1]" 34, "[:open-fn-1/x :open-fn-1]" 24}, :cardinality 27}, :type {:data-type "string", :distinct 2, :group-by? true, :commons {":channel" 317, nil 183}, :cardinality 0}, :base_flow_id {:data-type "string", :distinct 4, :group-by? true, :commons {"maths-examplez" 288, "openai-image-gen" 167, "openai-image-gen/node-js-color-thief-script" 30}, :cardinality 0}, :ts {:data-type "string", :distinct 23, :group-by? true, :commons {"2024-03-01 23:26:01" 116, "2024-03-01 23:25:21" 81, "2024-03-01 23:41:26" 20}, :cardinality 4}, :flow_id {:data-type "string", :distinct 4, :group-by? true, :commons {"maths-examplez" 288, "openai-image-gen" 167, "openai-image-gen/node-js-color-thief-script" 30}, :cardinality 0}, :start_ts {:data-type "string", :distinct 38, :group-by? true, :commons {"2024-03-01 23:25:18" 81, "2024-03-01 23:25:59" 49, "2024-03-01 23:25:57" 41}, :cardinality 7}, :data_type {:data-type "string", :distinct 7, :group-by? true, :commons {"boot" 183, "keyword" 134, "integer" 104}, :cardinality 1}, :end {:data-type "integer", :distinct 152, :group-by? true, :commons {1709335518568 43, 1709335557795 17, 1709335518567 16}, :cardinality 30}, :dest {:data-type "string", :distinct 67, :group-by? true, :commons {nil 183, ":+-1" 50, ":done" 35}, :cardinality 13}}, :rowcount 500}, :fflowparts-sys {:fields {:category {:data-type "string", :distinct 3, :group-by? true, :commons {":rabbit-base" 18, ":clojure-base" 16, ":owen-wilson" 1}, :cardinality 8}, :description {:data-type "string", :distinct 33, :group-by? true, :commons {"Basic HTTP call primitive" 2, "Clojure subtract function." 2, "Get top 50 color frequencies from an image in hex form." 1}, :cardinality 94}, :name {:data-type "string", :distinct 35, :group-by? true, :commons {":=" 1, ":>=" 1, ":write-file" 1}, :cardinality 100}, :file_path {:data-type "string", :distinct 3, :group-by? true, :commons {"" 33, "./flows/a-random-wow.edn" 1, "./flows/node-color-thief-js.edn" 1}, :cardinality 8}, :full_map {:data-type "string", :distinct 35, :group-by? true, :commons {"{:description \"Clojure add function.\", :fn (fn [& args] (apply + args)), :inputs [:args], :icon \"zmdi-plus\", :types {:args [:integer :float], :out [:integer :float]}}" 1, "{:description \"Convert a JSON string to Clojure EDN\", :fn (fn [json-string] (rvbbit-backend.util/json-to-edn json-string)), :inputs [:json-string], :icon \"zmdi-file-text\", :types {:json-string :string, :out :any}}" 1, "{:file-path \"./flows/a-random-wow.edn\", :icon \"zmdi-pizza\", :description \"A random Owen Wilson quote from the Wedding Crashers movie.\"}" 1}, :cardinality 100}, :icon {:data-type "string", :distinct 20, :group-by? true, :commons {"zmdi-pizza" 4, "zmdi-file-text" 3, "zmdi-alert-polygon" 3}, :cardinality 57}}, :rowcount 35}, :flow-history-drag-29 {:fields {:started {:data-type "integer", :distinct 19, :group-by? true, :commons {1710439351995 1, 1710438907151 1, 1710438961899 1}, :cardinality 100}, :ended {:data-type "integer", :distinct 19, :group-by? true, :commons {1710438952801 1, 1710439352803 1, 1710438953044 1}, :cardinality 100}, :run_id {:data-type "string", :distinct 19, :group-by? true, :commons {"7f4164e4-8530-4ad4-9fd8-726602ba3318" 1, "00aa54e7-5083-4593-b2a1-daf120006581" 1, "bb5d6475-e15a-4409-8f8b-dbd0523d1aaa" 1}, :cardinality 100}, :human_elapsed {:data-type "string", :distinct 6, :group-by? true, :commons {"less than a second" 11, "42 seconds" 2, "45 seconds" 2}, :cardinality 31}, :in_error {:data-type "integer", :distinct 2, :group-by? true, :commons {0 17, 1 2}, :cardinality 10}, :ts {:data-type "string", :distinct 14, :group-by? true, :commons {"2024-03-14 18:00:45" 2, "2024-03-14 17:54:39" 2, "2024-03-14 17:55:52" 2}, :cardinality 73}, :flow_id {:data-type "string", :distinct 4, :group-by? true, :commons {"openai-image-gen-ladder/node-js-color-thief-script" 6, "dalle3-create-imageff" 5, "openai-image-gen-ladder" 5}, :cardinality 21}, :client_name {:data-type "string", :distinct 3, :group-by? true, :commons {":refined-rhomboidal-hawk-banned-from-nivation-hollow" 10, ":instinctive-lilac-chicken-of-the-scree" 8, ":rvbbit-scheduler" 1}, :cardinality 15}, :parent_run_id {:data-type "string", :distinct 9, :group-by? true, :commons {"" 11, "00aa54e7-5083-4593-b2a1-daf120006581" 1, "4e617c0f-0ce7-4a1d-b07a-0a5db5cc4016" 1}, :cardinality 47}, :elapsed_seconds {:data-type "float", :distinct 17, :group-by? true, :commons {0 3, 42.579 1, 0.698 1}, :cardinality 89}, :elapsed {:data-type "float", :distinct 17, :group-by? true, :commons {0 3, 48861 1, 45463 1}, :cardinality 89}}, :rowcount 19}, :thread-count-drag-20 {:fields {:thread_count_avg {:data-type "float", :distinct 1, :group-by? false, :commons {101.21882951653944 1}, :cardinality 100}}, :rowcount 1}, :flow_history {:fields {:started {:data-type "integer", :distinct 19, :group-by? true, :commons {1710439351995 1, 1710438907151 1, 1710438961899 1}, :cardinality 100}, :ended {:data-type "integer", :distinct 19, :group-by? true, :commons {1710438952801 1, 1710439352803 1, 1710438953044 1}, :cardinality 100}, :run_id {:data-type "string", :distinct 19, :group-by? true, :commons {"7f4164e4-8530-4ad4-9fd8-726602ba3318" 1, "00aa54e7-5083-4593-b2a1-daf120006581" 1, "bb5d6475-e15a-4409-8f8b-dbd0523d1aaa" 1}, :cardinality 100}, :human_elapsed {:data-type "string", :distinct 6, :group-by? true, :commons {"less than a second" 11, "42 seconds" 2, "45 seconds" 2}, :cardinality 31}, :in_error {:data-type "integer", :distinct 2, :group-by? true, :commons {0 17, 1 2}, :cardinality 10}, :ts {:data-type "string", :distinct 14, :group-by? true, :commons {"2024-03-14 18:00:45" 2, "2024-03-14 17:54:39" 2, "2024-03-14 17:55:52" 2}, :cardinality 73}, :flow_id {:data-type "string", :distinct 4, :group-by? true, :commons {"openai-image-gen-ladder/node-js-color-thief-script" 6, "dalle3-create-imageff" 5, "openai-image-gen-ladder" 5}, :cardinality 21}, :client_name {:data-type "string", :distinct 3, :group-by? true, :commons {":refined-rhomboidal-hawk-banned-from-nivation-hollow" 10, ":instinctive-lilac-chicken-of-the-scree" 8, ":rvbbit-scheduler" 1}, :cardinality 15}, :parent_run_id {:data-type "string", :distinct 9, :group-by? true, :commons {"" 11, "00aa54e7-5083-4593-b2a1-daf120006581" 1, "4e617c0f-0ce7-4a1d-b07a-0a5db5cc4016" 1}, :cardinality 47}, :elapsed_seconds {:data-type "float", :distinct 17, :group-by? true, :commons {0 3, 42.579 1, 0.698 1}, :cardinality 89}, :elapsed {:data-type "float", :distinct 17, :group-by? true, :commons {0 3, 48861 1, 45463 1}, :cardinality 89}}, :rowcount 19}, :flow-fn-categories-sys {:fields {:category {:data-type "string", :distinct 3, :group-by? true, :commons {":rabbit-base" 1, ":owen-wilson" 1, ":clojure-base" 1}, :cardinality 100}}, :rowcount 3}, :gen-viz-749 {:fields {:rows {:data-type "integer", :distinct 33, :group-by? false, :commons {81 126, 49 84, 80 34}, :cardinality 6}, :end_ts {:data-type "string", :distinct 500, :group-by? true, :commons {"2024-03-02 01:58:35" 1, "2024-03-02 22:36:42" 1, "2024-03-01 23:46:20" 1}, :cardinality 100}}, :rowcount 500}, :data-type-drag-31 {:fields {:data_type {:data-type "string", :distinct 7, :group-by? true, :commons {"float" 1, "integer" 1, "vector" 1}, :cardinality 100}, :rowcnt {:data-type "integer", :distinct 7, :group-by? false, :commons {23 1, 202 1, 458 1}, :cardinality 100}}, :rowcount 7}, :reco-counts {:fields {}, :rowcount 0}, :flow-fn-all-sys {:fields {:name {:data-type "string", :distinct 35, :group-by? true, :commons {":=" 1, ":>=" 1, ":write-file" 1}, :cardinality 100}}, :rowcount 35}}, :default-col-widths {:block-5967 {:flow-history-drag-29 100}}, :runstream-drops {"choppa-my-addy" {:choppah {:in :int-input-two, :out :choppa-halfy, :type #{:float :integer}}}}, :data-hash 1303457846, :tabs ["find all the snakes - for ireland!" "greenspun was right" "effective beaver" "conical donkey" "rectangular hyena" "circular elk" "lavender boar"], :selected-cols nil, :server {:settings {:harvest-on-boot? true, :default "./screens/looking-glass-redux.edn", :eleven-labs-api-key nil, :kits {:buffy {:author {:name "Ryan Robitaille", :email "ryan.robitaille@gmail.com", :x "@ryrobes", :site "https://ryrob.es/"}, :kit-name :buffy, :package-name :grab-bag, :fn (rvbbit-backend.assistants/buffy :query-name), :name "Ask Buffy!", :icon "zmdi-cocktail", :run-on :queries, :description "What does Buffy think about this data? Who knows!"}, :outliers {:description "A basic multivariate outlier detection runstream. Highlight outliers in various dimensional groupings as a launch pad for further exploration.", :image-url "images/outliers-image.png", :fn (rabbit-kit-outliers.core/get-outliers :query-name :panel-name :query), :name "Outliers", :icon "zmdi-functions", :author {:name "Ryan Robitaille", :email "ryan.robitaille@gmail.com", :x "@ryrobes", :site "https://ryrob.es/"}, :run-on :queries, :repl {:host "127.0.0.1", :port 42999}, :kit-name :outliers, :package-name :query-basics-1}, :forecast {:description "WIP: basic timeseries forecasting based on previous values", :fn (rabbit-kit-outliers.core/get-forecast :query-name :panel-name :query), :name "Forecasting", :icon "zmdi-brightness-7", :author {:name "Ryan Robitaille", :email "ryan.robitaille@gmail.com", :x "@ryrobes", :site "https://ryrob.es/"}, :run-on :queries, :repl {:host "127.0.0.1", :port 42999}, :kit-name :forecast, :package-name :query-basics-1}}, :graphite-host "127.0.0.1", :openapi-org-id nil, :debug-level 1, :screens ["GGGeat-ochre-mole-exiled-from-abyssal-plain" "SSSSSSuccessful-oval-sea-urchin-of-mountain-range" "SSuccessful-oval-sea-urchin-of-mountain-range" "aaa-run-amok" "aaaaah-esday-the-day" "aaaaah-wednesday-the-day" "aaaah-wednesday-the-day" "alice-puzzle-1" "asdasdasdasd" "autumn-theme" "battle-mage" "bigfoot-snapshots" "bigfoot-snapshots2" "bigfoot-snapshots3" "blank-sizzle" "blank-sizzle2" "blue-pines" "boston-test-10-3-23" "broken-jacket" "bunch of bullshit" "bunch of bullshit2" "bunch of bullshit4" "caliope" "calliope" "canvas-scrubber-test1" "capecod-viking" "chaos simple" "chaos-views" "chompers" "claude-testing2" "clean-grey-defaults" "code-data-literal-stonks-test" "conifer-boughs" "counting-lord-of-the-woods" "crazy-alice" "dark-crested-jackelope" "data-literals-test-sunday" "data-literals-test-sundaydd" "demo-dark-pumpkin-bkgrd-sept23" "demo-light-bkgrd-sept23" "demo-lime-green-slime" "desktops-and-broomsticks" "error-monitor" "error-monitor-vanessa" "error-monitor-vanessa2" "error-monitor-vanessa3" "evil-main-street" "fake-books-1" "fetching-pentagonal-termite-of-tghe-submarine-canyon" "final-fantasy-dorchester" "fox-hills" "glass-fish-board-test" "green-storm-city" "hue-board-1" "late-winter-theme" "lavender-side-eye" "layout-test-1" "layout-test-12" "light-theme" "literal-data-test" "looking-glass-redux" "looking-glass-redux2" "luck-of-the-irish" "mapbox-test" "may-20" "my-goodness" "my-goodness-the-sequel" "neverwinter-amy" "night-city-never-sleeps" "nightcity-cape-cod" "nivo-getting-better!" "nivo-hacking-2023" "nivo-hacking-2023333" "nivo-hacking-october-2nd" "old-defaults" "old-fashioned-christmas" "old-town-snow-stars" "pensive-look" "pine-wood-dawn" "pink-and-green-elk" "pink-dusk-falls" "pinup-rabbit-fields" "poor-touring-me" "pres-sql-test-1" "purple-dusk-old-town" "purple-nightshades" "purple-techno-sunset" "recharts-test-blocks" "refresh-test" "retro-machines" "riffle-test" "sick-of-your-shit" "sizzle-board-1" "sneaky-swamp-creatures1" "stop-drawing-dead-dashboards" "swamp-nightgown" "swamp-reacher" "tallica-param-test2" "tangerine-dreams" "technicolor-shanny" "the-future-soon" "the-generated-lass" "the-generated-lass-glow" "the-generated-lass-ne" "the-generated-lass-sgt" "the-generated-lassff" "the-outer-blues" "trad-hybrid" "tweet-bigfoot-is-blurry" "tweet-demo-thing-bigfoot-is-blurry" "unnamed-screen!" "viking-pastels" "weave-test" "weave-test1" "weave-test122" "who ya gonna call?" "who ya gonna call? again" "winter-theme" "winter-theme-choom" "winter-theme2" "winter-theme33" "winter-theme45" "winter-theme47" "winter-twin-peaks" "witchy425" "wonderland-horror-interface" "wow-board"], :openapi-key "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"}}, :runstreams {"dalle3-create-image-newengland" {:open? false}, "gpt35-color-parser" {:open? false, :open-outputs? false, :actions? false}, "dalle3-create-image" {:values {:in-prompt {:value :param/learned-sangria-whale, :source :param, :open? false}, :open-input-3 {:open? true}, :headers-map {:open? false}, :open-input-2 {:open? false}, :url-str {:open? false}, :open-input-1 {:open? true}}, :open? false, :open-outputs? false, :actions? true, :drops? false, :fire? false}, "choppa-my-addy" {:open? false, :open-outputs? true, :drops? false, :values {:int-input-two {:value :param/fine-raspberry-elephant, :source :param}}, :fire? true}, "dalle3-create-imageff" {:open? true, :values {:in-prompt {:value :param/gorgeous-chartreuse-jay, :source :param}}, :open-outputs? true}, "quick-maths-v2" {:open? true}, "slow-maths-v2" {:open? true}}, :editor? false, :buffy? false, :memory [384401300 309830844 4294705152], :status-data {"kick-test!" {:kick {:data [{:sent! "kick-test!", :to :instinctive-lilac-chicken-of-the-scree, :at "2024-03-14 14:02:48", :payload {:query-log {:data [{:content ["2024-03-14 14:02:48 - query ran in 2 ms."], :name "query-log-:flow_history", :order 1710439368, :parameters {}, :forced-mutates {}, :step-mutates {}}], :description "query-log-:flow_history", :mutates {}, :options {:actions? false, :pages? false, :search? false}, :parameters {}}}, :payload-kp [:flow_history "kick-test!"]} nil], :elapsed-ms nil, :reco-count nil}}, :heartbeat {:kick {:data [{:sent! :heartbeat, :to :all, :at "2024-03-14 14:03:18", :payload nil, :payload-kp [:heartbeat :heartbeat]} nil], :elapsed-ms nil, :reco-count nil}}, :alert1 {:alerts {:data [[[:v-box :justify :center :style {:margin-top "-6px", :color "inherit"} :children [[:box :child "flow dalle3-create-imageff has finished"] nil [:box :style {:font-weight 700, :font-size "10px", :opacity 0.7} :child "45 seconds "] [:box :style {:font-weight 700, :font-size "10px", :opacity 0.7} :child "returns: /home/ryanr/rvbbit/frontend/resources/public/images/gen/b64-decoded-223993.png"]]] 10 1.35 9] nil], :elapsed-ms nil, :reco-count nil}}}, :flow-subs [:flow/dalle3-create-image>:in-prompt :flow/quick-maths-v2>*running? :flow/dalle3-create-imageff>make-data-colors :flow/dalle3-create-image>open-fn-6 :flow/dalle3-create-imageff>upper-mid :flow/dalle3-create-image-newengland>*running? :flow/dalle3-create-imageff>:node-color-thief-js :flow/choppa-my-addy>*running? :flow/dalle3-create-imageff>darkest1 :flow/dalle3-create-imageff>lightest1 :flow/dalle3-create-imageff>:open-fn-4 :flow/dalle3-create-image>:open-fn-2 :flow/gpt35-color-parser>*running? :flow/dalle3-create-imageff>*running? :flow/dalle3-create-image>open-fn-7 :flow/dalle3-create-image>*running? :flow/dalle3-create-image>open-fn-4 :flow/dalle3-create-imageff>open-fn-8 :flow/dalle3-create-image>open-fn-8 :flow/a-random-wow>open-fn-2 :flow/slow-maths-v2>*running? :flow/koala-flow-438>*running?], :client-name :instinctive-lilac-chicken-of-the-scree, :runstreams-lookups {"choppa-my-addy" {:open-inputs {:int-input-two {:user-input 234, :defaults {}, :type :integer}, :int-input-one {:user-input 123, :defaults {}, :type :integer}}, :blocks {:int-input-two {:type {:out :integer}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :addy-baddie {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :choppa-halfy {:type {:out :any}, :ttype :open-fn, :meta nil, :last? true, :defaults {}, :sample "no sample data"}, :int-input-one {:type {:out :integer}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}}}, "slow-maths-v2" {:open-inputs {:static-value-1 {:user-input 123323, :defaults {}, :type :integer}, :test-integer-slider {:user-input 135, :defaults {}, :type :integer}, :start-with-a-bang {:user-input :go, :defaults {}, :type :keyword}, :scrubber-buttons {:user-input "tick", :defaults {}, :type :string}}, :blocks {:divider-out-out {:type {:out :float}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :random-vector-full-of-stuff {:type {:idx7 :vector, :idx5 :integer, :* :vector, :idx2 :integer, :idx4 :map, :idx1 :integer, :idx6 :boolean, :idx3 :keyword, :idx0 :integer}, :ttype :open-block, :meta {:test1* {:desc "Replace /path/to/source/dir with the path to your source directory and *.ext with the file extension that matches your source files. For instance, if you're counting lines in a Python project, you would use *.py.", :scrubber {:message "ytodad", :values ["area" "bar" "circle" "line" "point" "rect" "rule" "square" "text" "tick"]}}}, :last? false, :defaults {:test1* 143}, :sample "no sample data"}, :random-vector-full-of-stuff_idx6 {:type {:idx0 :boolean, :idx1 :integer, :idx2 :boolean, :idx3 :float, :* :vector}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :divisive-2 {:type {:out :float}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :static-value-1 {:type {:out :integer}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :get-random-integer {:type {:out :integer}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :test-integer-slider {:type {:out :integer}, :ttype :open-block, :meta {:* {:scrubber [0 1 900]}}, :last? false, :defaults {}, :sample "no sample data"}, :static-value-2-out-out {:type {:out :integer}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :start-with-a-bang {:type {:out :keyword}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :random-vector-full-of-stuff_idx6_out {:type {:idx0 :boolean, :idx1 :integer, :idx2 :boolean, :idx3 :float, :* :vector}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :divider-out {:type {:out :float}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :divider {:type {:out :float}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :scrubber-buttons {:type {:out :string}, :ttype :open-block, :meta {:* {:desc "Replace /path/to/source/dir with the path to your source directory and *.ext with the file extension that matches your source files. For instance, if you're counting lines in a Python project, you would use *.py.", :scrubber {:message "ytodad", :values ["area" "bar" "circle" "line" "point" "rect" "rule" "square" "text" "tick"]}}}, :last? false, :defaults {}, :sample "no sample data"}, :random-vector-full-of-stuff_idx6_idx0 {:type {:out :boolean}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :java-uid-test-string {:type {:out :string}, :ttype :open-fn, :meta nil, :last? true, :defaults {}, :sample "no sample data"}, :some-quick-maths-yo {:type {:out :integer}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :random-vector-full-of-stuff_idx1 {:type {:out :integer}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :static-value-2-out {:type {:out :integer}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :grab-an-item {:type {:fook :boolean, :bite :integer, :goo :string, :* :map}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :static-value-2-out-out-out {:type {:out :float}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}}}, "gpt35-color-parser" {:open-inputs {:open-input-1 {:user-input {:url "http://10.174.1.174/api/sqOjLm0JhoioAbwhwPm6ZlHiuCAx-KnQEYwAZOWL/groups"}, :defaults {}, :type :map}, :system-prompt {:user-input {:role "system", :content "You are a parser bot. Users will ask to set a particular light-id to a certain color. You will match the light name with on of these light name IDs. Pick the one that matches to the users request best.  The only valid light-ids are ['Living Room Lights', 'Dining Room Lights', 'Patio Lights']  Only one. You will only return one thing. Two values encased in square brackets, with 2 double-quoted strings inside (valid Clojure EDN). They will be as follows. [\"The light id chosen\" \"Hex version of requested color\"]  Example:  User Input: \"Hey, change the living room lights to be green.\" Your Output: [\"Living Room\" \"#00FF00\"]"}, :defaults {}, :type :map}, :open-input-2 {:user-input true, :defaults {}, :type :boolean}, :headers-map {:user-input {"Authorization" "Bearer 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", "Content-Type" "application/json"}, :defaults {}, :type :map}, :user-sentence {:user-input "hey huie, lets make the living room a nasty deep red. thank you.", :defaults {}, :type :string}, :url-str {:user-input "https://api.openai.com/v1/chat/completions", :defaults {}, :type :string}}, :blocks {:open-fn-1 {:type {:idx0 :string, :idx1 :string, :idx2 :boolean, :* :vector}, :ttype :open-fn, :meta nil, :last? true, :defaults {}, :sample "no sample data"}, :http-call-2 {:type {:* :map, :10 :map, :4 :map, :7 :map, :1 :map, :8 :map, :9 :map, :2 :map, :5 :map, :200 :map, :3 :map, :6 :map}, :ttype :where, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-2 {:type {:idx0 :map, :idx1 :map, :* :vector}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-input-1 {:type {:url :string, :* :map}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :hue-change-group-color {:type nil, :ttype :sub-flow, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-input {:type {:headers :map, :method :keyword, :url :string, :body :map, :* :map}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :system-prompt {:type {:role :string, :content :string, :* :map}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-3 {:type {"9" :string, "3" :string, :* :map, "4" :string, "8" :string, "7" :string, "5" :string, "6" :string, "200" :string, "1" :string, "2" :string, "10" :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-4 {:type {:role :string, :content :string, :* :map}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :http-call-1 {:type {:id :string, :object :string, :created :integer, :model :string, :choices :rowset, :usage :map, :system_fingerprint :list, :* :map}, :ttype :where, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :user-input-color {:type {:role :string, :content :string, :* :map}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-input-2 {:type {:out :boolean}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :headers-map {:type {"Authorization" :string, "Content-Type" :string, :* :map}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :user-sentence {:type {:out :string}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :url-str {:type {:out :string}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}}}, "quick-maths-v2" {:open-inputs {:static-value-1 {:user-input 123323, :defaults {}, :type :integer}, :test-integer-slider {:user-input 135, :defaults {}, :type :integer}, :start-with-a-bang {:user-input :go, :defaults {}, :type :keyword}, :scrubber-buttons {:user-input "tick", :defaults {}, :type :string}}, :blocks {:divider-out-out {:type {:out :float}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :random-vector-full-of-stuff {:type {:idx7 :vector, :idx5 :integer, :* :vector, :idx2 :integer, :idx4 :map, :idx1 :integer, :idx6 :boolean, :idx3 :keyword, :idx0 :integer}, :ttype :open-block, :meta {:test1* {:desc "Replace /path/to/source/dir with the path to your source directory and *.ext with the file extension that matches your source files. For instance, if you're counting lines in a Python project, you would use *.py.", :scrubber {:message "ytodad", :values ["area" "bar" "circle" "line" "point" "rect" "rule" "square" "text" "tick"]}}}, :last? false, :defaults {:test1* 143}, :sample "no sample data"}, :random-vector-full-of-stuff_idx6 {:type {:idx0 :boolean, :idx1 :integer, :idx2 :boolean, :idx3 :float, :* :vector}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :divisive-2 {:type {:out :float}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :static-value-1 {:type {:out :integer}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :get-random-integer {:type {:out :integer}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :test-integer-slider {:type {:out :integer}, :ttype :open-block, :meta {:* {:scrubber [0 1 900]}}, :last? false, :defaults {}, :sample "no sample data"}, :static-value-2-out-out {:type {:out :integer}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :start-with-a-bang {:type {:out :keyword}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :random-vector-full-of-stuff_idx6_out {:type {:idx0 :boolean, :idx1 :integer, :idx2 :boolean, :idx3 :float, :* :vector}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :divider-out {:type {:out :float}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :divider {:type {:out :float}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :scrubber-buttons {:type {:out :string}, :ttype :open-block, :meta {:* {:desc "Replace /path/to/source/dir with the path to your source directory and *.ext with the file extension that matches your source files. For instance, if you're counting lines in a Python project, you would use *.py.", :scrubber {:message "ytodad", :values ["area" "bar" "circle" "line" "point" "rect" "rule" "square" "text" "tick"]}}}, :last? false, :defaults {}, :sample "no sample data"}, :random-vector-full-of-stuff_idx6_idx0 {:type {:out :boolean}, :ttype :open-fn, :meta nil, :last? true, :defaults {}, :sample "no sample data"}, :java-uid-test-string {:type {:out :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :some-quick-maths-yo {:type {:out :integer}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :random-vector-full-of-stuff_idx1 {:type {:out :integer}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :static-value-2-out {:type {:out :integer}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :grab-an-item {:type {:fook :boolean, :bite :integer, :goo :string, :* :map}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :static-value-2-out-out-out {:type {:out :float}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}}}, "dalle3-create-image-newengland" {:open-inputs {:open-input-1 {:user-input "vivid", :defaults {}, :type :string}, :in-prompt {:user-input "USE EXACTLY THIS PROMPT: A highly detailed illustration showcasing a stunning, young, robust, and powerfully built Swedish woman in her early 30s, characterized by a full-face and long, thick Viking braids. She stands majestically in the heart of a Northeast American forest, the New England wilderness being particularly picturesque during dusk. She locks gaze with the camera, her confident and alluring look intensified by the dramatic Cyberpunk-Vaporwave aesthetic lighting and her dark eye makeup. A sly, playful smile dances on her lips, adding a mystical and alluring atmosphere. Her shoulders and collarbone are lavishly adorned with intricate and ornate tattoos. The captivating body art continues up to her neck, each design an intricate narrative of its own. The woman is also seen donning a necklace with a rabbit pendant, and similar rabbit motifs can be found delicately integrated into her tattoos. Overall, the image captures a mixture of wonder, mystery, and temptation.", :defaults {}, :type :string}, :quality {:user-input "hd", :defaults {}, :type :string}, :open-input-2 {:user-input "natural", :defaults {}, :type :string}, :headers-map {:user-input {"Authorization" "Bearer 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", "Content-Type" "application/json"}, :defaults {}, :type :map}, :url-str {:user-input "https://api.openai.com/v1/images/generations", :defaults {}, :type :string}}, :blocks {:open-fn-13 {:type {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx8 :string, :idx0 :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :second-lightest {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-8 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-7 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :shell-command-1 {:type {:output :vector, :exception :vector, :seconds :vector, :command :string, :* :map}, :ttype :where, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :lightest1 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :gradient1 {:type {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx0 :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-1 {:type {:headers :map, :method :keyword, :url :string, :body :map, :* :map}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-2 {:type {:idx0 :map, :* :vector}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :darkest1 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-input-1 {:type {:out :string}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :make-data-colors {:type {"float" :string, "boolean" :string, "map" :string, "list" :string, :* :map, "string" :string, "vector" :string, "keyword" :string, "rabbit-code" :string, "datetime" :string, "integer" :string, "unknown" :string, "date" :string, "nil" :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :in-prompt {:type {:out :string}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-6 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? true, :defaults {}, :sample "no sample data"}, :ssecond-darkest {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :node-color-thief-js {:type {:dominantColor :string, :colorPalette :vector, :* :map}, :ttype :sub-flow, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-9 {:type {:error :string, :* :map}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-input {:type {:headers :map, :method :keyword, :url :string, :body :map, :* :map}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :dom-color1 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-11 {:type {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx8 :string, :idx0 :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-3 {:type {:revised_prompt :string, :b64_json :string, :* :map}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :quality {:type {:out :string}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-4 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-5 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :upper-mid {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :http-call-1 {:type {:created :integer, :data :rowset, :* :map}, :ttype :where, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :gradient2 {:type {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx0 :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :mid-high {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-input-2 {:type {:out :string}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :headers-map {:type {"Authorization" :string, "Content-Type" :string, :* :map}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :url-str {:type {:out :string}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-10 {:type {:dominantColor :string, :colorPalette :vector, :* :map}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}}}, "dalle3-create-image" {:open-inputs {:open-input-1 {:user-input "vivid", :defaults {}, :type :string}, :open-input-3 {:user-input {:width 13, :height 8, :duration 9}, :defaults {}, :type :map}, :in-prompt {:user-input "A high-definition, hyperreal, vivid 16:9 image of a New England scene in America, just before dawn during a heavy snowstorm, blending traditional and cyberpunk elements. The scene has a slightly gritty atmosphere, with the town covered in snow and buildings emitting soft pink and neon light blue glows. On the left side of the frame, a young and beautiful Irish-looking woman, clearly in her late 20s, with pouty full lips (with the bottom lip being prominent) and a slightly upturned nose, poses with a pleased expression yet mischievious on her large mouth. Her long hair is slightly wet, with snow collecting on it and her face, emphasizing the heavy snowfall. She has intricate Celtic-style tattoos of rabbits and wilderness on her neck, collarbone, and shoulders. The pre-dawn light adds a serene yet mysterious feel to the scene, underscoring the fusion of the natural world and technological influence.", :defaults {}, :type :string}, :quality {:user-input "hd", :defaults {}, :type :string}, :open-input-2 {:user-input "natural", :defaults {}, :type :string}, :headers-map {:user-input {"Authorization" "Bearer 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", "Content-Type" "application/json"}, :defaults {}, :type :map}, :url-str {:user-input "https://api.openai.com/v1/images/generations", :defaults {}, :type :string}}, :blocks {:open-fn-13 {:type {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx8 :string, :idx0 :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :second-lightest {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-8 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :alert!-2 {:type {:out :any}, :ttype :where, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-7 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :shell-command-1 {:type {:output :vector, :exception :vector, :seconds :vector, :command :string, :* :map}, :ttype :where, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :lightest1 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :gradient1 {:type {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx0 :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-1 {:type {:headers :map, :method :keyword, :url :string, :body :map, :* :map}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-2 {:type {:idx0 :map, :* :vector}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :darkest1 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-input-1 {:type {:out :string}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-input-3 {:type {:width :integer, :height :integer, :duration :integer, :* :map}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :alert!-1 {:type {:out :any}, :ttype :where, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :make-data-colors {:type {"float" :string, "boolean" :string, "map" :string, "list" :string, :* :map, "string" :string, "vector" :string, "keyword" :string, "rabbit-code" :string, "datetime" :string, "integer" :string, "unknown" :string, "date" :string, "nil" :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :in-prompt {:type {:out :string}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-6 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? true, :defaults {}, :sample "no sample data"}, :ssecond-darkest {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :node-color-thief-js {:type {:dominantColor :string, :colorPalette :vector, :* :map}, :ttype :sub-flow, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-9 {:type {:error :string, :* :map}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-input {:type {:headers :map, :method :keyword, :url :string, :body :map, :* :map}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :dom-color1 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-11 {:type {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx8 :string, :idx0 :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-3 {:type {:revised_prompt :string, :b64_json :string, :* :map}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :quality {:type {:out :string}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-4 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-12 {:type {:idx0 :keyword, :idx1 :keyword, :idx2 :vector, :* :vector}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-5 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :upper-mid {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :http-call-1 {:type {:created :integer, :data :rowset, :* :map}, :ttype :where, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-14 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :gradient2 {:type {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx0 :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :mid-high {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-input-2 {:type {:out :string}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :headers-map {:type {"Authorization" :string, "Content-Type" :string, :* :map}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :url-str {:type {:out :string}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-10 {:type {:dominantColor :string, :colorPalette :vector, :* :map}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}}}, "dalle3-create-imageff" {:open-inputs {:open-input-1 {:user-input "vivid", :defaults {}, :type :string}, :open-input-3 {:user-input {:width 13, :height 8, :duration 9}, :defaults {}, :type :map}, :in-prompt {:user-input "A high-definition, hyperreal, vivid 16:9 image of a New England scene in America, just before dawn during a heavy snowstorm, blending traditional and cyberpunk elements. The scene has a slightly gritty atmosphere, with the town covered in snow and buildings emitting soft pink and neon light blue glows. On the left side of the frame, a young and beautiful Irish-looking woman, clearly in her late 20s, with pouty full lips (with the bottom lip being prominent) and a slightly upturned nose, poses with a pleased expression yet mischievious on her large mouth. Her long hair is slightly wet, with snow collecting on it and her face, emphasizing the heavy snowfall. She has intricate Celtic-style tattoos of rabbits and wilderness on her neck, collarbone, and shoulders. The pre-dawn light adds a serene yet mysterious feel to the scene, underscoring the fusion of the natural world and technological influence.", :defaults {}, :type :string}, :quality {:user-input "hd", :defaults {}, :type :string}, :open-fn-12 {:user-input nil, :defaults {}, :type :vector}, :open-input-2 {:user-input "natural", :defaults {}, :type :string}, :headers-map {:user-input {"Authorization" "Bearer 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", "Content-Type" "application/json"}, :defaults {}, :type :map}, :url-str {:user-input "https://api.openai.com/v1/images/generations", :defaults {}, :type :string}}, :blocks {:open-fn-13 {:type {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx8 :string, :idx0 :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :second-lightest {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-8 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :alert!-2 {:type {:out :any}, :ttype :where, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-7 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :shell-command-1 {:type {:output :vector, :exception :vector, :seconds :vector, :command :string, :* :map}, :ttype :where, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :lightest1 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :gradient1 {:type {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx0 :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-1 {:type :map, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "{:headers {\"Authorization\" \"Bearer sk-wdy5fbKL5OOMv0BqmiowT3..."}, :open-fn-2 {:type {:idx0 :map, :* :vector}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :darkest1 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-input-1 {:type :string, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "vivid"}, :open-input-3 {:type :map, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "{:width 13, :height 8, :duration 9}"}, :alert!-1 {:type {:out :any}, :ttype :where, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :make-data-colors {:type {"float" :string, "boolean" :string, "map" :string, "list" :string, :* :map, "string" :string, "vector" :string, "keyword" :string, "rabbit-code" :string, "datetime" :string, "integer" :string, "unknown" :string, "date" :string, "nil" :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :in-prompt {:type :string, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "PLEASE USE EXACTLY THIS PROMPT: A high-definition, hyperreal..."}, :open-fn-6 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? true, :defaults {}, :sample "no sample data"}, :ssecond-darkest {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :node-color-thief-js {:type {:dominantColor :string, :colorPalette :vector, :* :map}, :ttype :sub-flow, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-9 {:type :string, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "vivid"}, :open-input {:type :map, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "{:headers {\"Authorization\" \"Bearer sk-wdy5fbKL5OOMv0BqmiowT3..."}, :dom-color1 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-11 {:type {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx8 :string, :idx0 :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-3 {:type {:revised_prompt :string, :b64_json :string, :* :map}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :quality {:type :string, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "hd"}, :open-fn-4 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-12 {:type {:idx0 :keyword, :idx1 :keyword, :idx2 :vector, :* :vector}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-5 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :upper-mid {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :http-call-1 {:type {:created :integer, :data :rowset, :* :map}, :ttype :where, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-fn-14 {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :gradient2 {:type {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx0 :string}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :mid-high {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :open-input-2 {:type :string, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "natural"}, :headers-map {:type :map, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "{\"Authorization\" \"Bearer sk-wdy5fbKL5OOMv0BqmiowT3BlbkFJy8h5..."}, :url-str {:type :string, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "https://api.openai.com/v1/images/generations"}, :open-fn-10 {:type {:dominantColor :string, :colorPalette :vector, :* :map}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}}}}, :alt-key-held? false, :flow-editor? true, :openai-api-key "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", :window {:w 2220, :h 1264}, :post-meta {:fflows-sys {:* {:rowcount "[SQLITE_ERROR] SQL error or missing database (near \")\": syntax error)"}}, :jvm-stats-drag-39 {:* {:rowcount 1}}, :flows-sys {:* {:rowcount "[SQLITE_ERROR] SQL error or missing database (near \")\": syntax error)"}}, :channel-history-drag-42 {:* {:rowcount 0}}, :fflowparts-sys {:* {:rowcount "[SQLITE_ERROR] SQL error or missing database (near \")\": syntax error)"}}, :flow-history-drag-29 {:* {:rowcount 0}}, :thread-count-drag-20 {:* {:rowcount 1}}, :gen-viz-749 {:* {:rowcount 0}}, :data-type-drag-31 {:* {:rowcount 0}}}, :flow-estimates {"dalle3-create-imageff" {:times 50.5, :run-id "ebed3d5b-ee97-4cf2-a3a4-6cae24120a8a"}, "koala-flow-438" {:times nil, :run-id "ec302cc5-ebb6-42b0-89bd-5e7224a2d18f"}}, :status {"kick-test!" {:kick :flow_history}, :heartbeat {:kick [:flow/dalle3-create-image>:in-prompt :flow/quick-maths-v2>*running? :flow/dalle3-create-imageff>make-data-colors :flow/dalle3-create-image>open-fn-6 :flow/dalle3-create-imageff>upper-mid :flow/dalle3-create-image-newengland>*running? :flow/dalle3-create-imageff>:node-color-thief-js :flow/choppa-my-addy>*running? :flow/dalle3-create-imageff>darkest1 :flow/dalle3-create-imageff>lightest1 :flow/dalle3-create-imageff>:open-fn-4 :flow/dalle3-create-image>:open-fn-2 :flow/gpt35-color-parser>*running? :flow/dalle3-create-imageff>*running? :flow/dalle3-create-image>open-fn-7 :flow/dalle3-create-image>*running? :flow/dalle3-create-image>open-fn-4 :flow/dalle3-create-imageff>open-fn-8 :flow/dalle3-create-image>open-fn-8 :flow/a-random-wow>open-fn-2 :flow/slow-maths-v2>*running? :flow/koala-flow-438>*running?]}, :alert1 {:alerts :alert2}}, :screen-name "the-generated-lassff", :recos-page2 0, :selected-tab "effective beaver", :col-names nil, :snapshots nil, :openai-org-id "org-YLngjih2M4oju0tnnZtKCAYg", :alerts [], :recos-page 0, :flow-runner {"koala-flow-438" {:open-fn-2 {:error "com.jcraft.jsch.JSchException: Auth fail"}, :open-input-1 "10.174.1.162", :open-input-3 "ryanr", :start-process-1 {:stdout "total 388K\n-rw-rw-r-- 1 ryanr ryanr 2.5K Mar 12 02:37 canvas.json\n-rw-rw-r-- 1 ryanr ryanr  792 Mar 12 02:37 CHANGELOG.md\ndrwxrwxr-x 3 ryanr ryanr 4.0K Mar 12 02:24 checkouts\n-rw-rw-r-- 1 ryanr ryanr  232 Mar 12 02:37 config.edn\ndrwxrwxr-x 2 ryanr ryanr 4.0K Mar 12 02:37 connections\ndrwxrwxr-x 3 ryanr ryanr 4.0K Mar 12 02:37 data\ndrwxrwxr-x 2 ryanr ryanr 4.0K Mar 14 12:56 db\ndrwxrwxr-x 2 ryanr ryanr 4.0K Mar 12 02:37 defs\ndrwxrwxr-x 2 ryanr ryanr 4.0K Mar 12 02:37 doc\ndrwxrwxr-x 4 ryanr ryanr  12K Mar 14 13:09 flow-history\ndrwxrwxr-x 3 ryanr ryanr 4.0K Mar 14 12:42 flows\ndrwxrwxr-x 2 ryanr ryanr 4.0K Mar 12 02:37 kit-rowsets\ndrwxrwxr-x 2 ryanr ryanr 4.0K Mar 12 02:37 kits\n-rw-rw-r-- 1 ryanr ryanr  15K Mar 12 02:37 LICENSE\ndrwxrwxr-x 5 ryanr ryanr 4.0K Mar 14 12:53 live\ndrwxrwxr-x 2 ryanr ryanr 4.0K Mar 11 11:29 logs\n-rw-rw-r-- 1 ryanr ryanr 5.7K Mar 12 02:37 name.ans\n-rw-rw-r-- 1 ryanr ryanr 2.8K Mar 12 02:37 name-smol.ans\n-rw-rw-r-- 1 ryanr ryanr  17K Mar 12 02:37 nname.ans\n-rw-rw-r-- 1 ryanr ryanr 5.3K Mar 14 12:21 project.clj\n-rw-rw-r-- 1 ryanr ryanr  752 Mar 12 02:37 README.md\ndrwxrwxr-x 3 ryanr ryanr 4.0K Mar 12 02:37 resources\n-rw-rw-r-- 1 ryanr ryanr  63K Mar 12 02:37 rrvbbit.ans\n-rw-rw-r-- 1 ryanr ryanr  31K Mar 12 02:37 rrvbbit-smol.ans\n-rw-rw-r-- 1 ryanr ryanr  32K Mar 12 02:37 rrvbitt-smol.ans\n-rw-rw-r-- 1 ryanr ryanr  31K Mar 12 02:37 rvbbit.ans\n-rw-rw-r-- 1 ryanr ryanr  15K Mar 12 02:37 rvbbit-smol.ans\n-rw-rw-r-- 1 ryanr ryanr 2.6K Mar 12 02:37 rvbbit.txt\ndrwxrwxr-x 4 ryanr ryanr  12K Mar 14 08:19 screens\ndrwxrwxr-x 2 ryanr ryanr 4.0K Mar 11 11:29 shell-root\ndrwxrwxr-x 2 ryanr ryanr  20K Mar 14 12:28 snaps\ndrwxrwxr-x 3 ryanr ryanr 4.0K Mar 12 02:38 src\ndrwxrwxr-x 2 ryanr ryanr  12K Mar 14 13:10 status-change-logs\ndrwxrwxr-x 4 ryanr ryanr 4.0K Mar 12 02:37 target\ndrwxrwxr-x 3 ryanr ryanr 4.0K Mar 11 11:35 test\n-rw-rw-r-- 1 ryanr ryanr  12K Mar 12 02:37 TODO.md\n-rw-rw-r-- 1 ryanr ryanr  124 Mar 12 02:37 user.clj\n", :stderr ""}, :start-process-2 {:error "java.lang.ClassCastException"}, :open-input-5 "remote-process1", :open-input "local-process", :open-input-4 "notofox", :open-input-2 ["ls" "-l" "-h"]}}, :rs-overrides-hashmap {"dalle3-create-image-newengland" nil, "gpt35-color-parser" nil, "dalle3-create-image" {:in-prompt "PLEASE USE EXACTLY THIS PROMPT: A high-definition, hyperreal, vivid 16:9 highly stylized & exaggerated pinup style illustration showcasing a stunning, buxom, robust, and fit yet curvaceous Irish woman in her late 20s, characterized by long, thick Viking braids, a slightly upturned nose, and a buxom yet slim figure. She stands majestically in the heart of a Northeast American forest, the New England wilderness being particularly picturesque during dusk. \n\nShe locks gaze with the camera, her confident and alluring look intensified by the dramatic Cyberpunk-Vaporwave aesthetic lighting and her dark makeup. \n\nHer dark hair contrasts with her pale skin. A sly, playful smile dances on her full lips, adding a mystical and alluring atmosphere. Her shoulders and collarbone are lavishly adorned with intricate and ornate tattoos. \n\nShe is buxom, robust, hyper curvaceous. She wears a choker ribbon and a long necklace.\n\nThe captivating body art continues up to her neck, each design an intricate narrative of its own. The woman is also seen donning a necklace with a rabbit pendant, and similar rabbit motifs can be found delicately integrated into her tattoos. Overall, the image captures a mixture of wonder, mystery, and temptation, sultry, burlesque. As the sun rises, its light gleams off her body radiantly. Full figured and motherly.\n\n"}, "choppa-my-addy" {:int-input-two 34444}, "dalle3-create-imageff" {:in-prompt "A high-definition, vivid 16:9 highly stylized & exaggerated pinup style illustration of a New England scene in America, just before dawn during a heavy snowstorm, blending traditional and cyberpunk elements. \n\nThe scene carries a slightly gritty atmosphere, with the town blanketed in snow and buildings emitting gentle pink and neon light blue illuminations. \n\nOn the left side of the frame, a young and beautiful, stunning, young, robust, and fit yet curvaceous Irish woman, clearly in her early 30s, with full pouty lips (the bottom one being prominent) and a slightly upturned nose, offers a pleased yet sultry expression on her large mouth. She is buxom, robust, hyper curvaceous. She wears a choker ribbon and a long necklace.\n\nHer silky long hair is flowing. She is completely covered with intricate Celtic-style tattoos of rabbits and wilderness over her neck, collarbone, and shoulders. The pre-dawn light instills a serene yet enigmatic ambiance to the scene, emphasizing the synergy between the natural world and technological influence. As the sun rises, its light gleams off her body radiantly. The camera looks down on her from above as the snow falls upon her - she is visible in the frame from the lower-chest up.\n\nIn the background the Mayflower is coming in to port."}, "quick-maths-v2" nil, "slow-maths-v2" nil}, :base-sniff-queries {:flow_history -1964522657}, :panels-hash -1981711654, :sessions [["independent-pyramidal-pheasant-banned-from-stratocone.edn" "59 hours, 25 minutes, 2 seconds" 213902290] ["good-hexagonal-hummingbird-banned-from-ait.edn" "4 hours, 27 minutes, 58 seconds" 16078374] ["intelligent-silver-swallow-banned-from-maar.edn" "1 hour, 40 minutes, 5 seconds" 6005846] ["whole-icosahedral-frog-hailing-from-thermokarst.edn" "59 hours, 25 minutes, 2 seconds" 213902286] ["special-globular-coyote-of-oceanic-trench.edn" "59 hours, 25 minutes, 2 seconds" 213902282] ["brilliant-linear-monkey-hailing-from-natural-arch.edn" "59 hours, 25 minutes, 2 seconds" 213902282] ["honest-icosahedral-boar-of-the-arroyo.edn" "6 hours, 39 minutes, 50 seconds" 23990328] ["trusting-cubic-eagle-hailing-from-salt-pan.edn" "59 hours, 25 minutes, 2 seconds" 213902282] ["bubbly-ovoid-bee-hailing-from-pull-apart-basin.edn" "59 hours, 25 minutes, 2 seconds" 213902270] ["open-crimson-bear-of-the-supervolcano.edn" "35 hours, 56 minutes, 19 seconds" 129379672] ["good-bulbous-woodpecker-banned-from-pingo.edn" "59 hours, 25 minutes, 2 seconds" 213902258] ["impressive-periwinkle-jay-banned-from-rock-formations.edn" "59 hours, 25 minutes, 2 seconds" 213902258] ["honest-orchid-fish-banned-from-volcanic-crater.edn" "59 hours, 25 minutes, 2 seconds" 213902254] ["clean-pyramidal-human-hailing-from-gulch.edn" "59 hours, 25 minutes, 2 seconds" 213902254] ["optimistic-carmine-mole-hailing-from-flat.edn" "59 hours, 25 minutes, 2 seconds" 213902250] ["energetic-plum-hyena-of-the-marine-terrace.edn" "6 hours, 42 minutes, 20 seconds" 24140352] ["stellar-oval-swan-of-salt-marsh.edn" "59 hours, 25 minutes, 2 seconds" 213902246] ["light-linear-hedgehog-of-confluence.edn" "59 hours, 25 minutes, 2 seconds" 213902242] ["refined-rhomboidal-hawk-banned-from-nivation-hollow.edn" "9 seconds" 9731] ["ethical-round-oyster-of-glacial-horn.edn" "59 hours, 25 minutes, 2 seconds" 213902242] ["ideal-long-oyster-banned-from-lava.edn" "59 hours, 25 minutes, 2 seconds" 213902242] ["accomplished-globular-dove-banned-from-swamp.edn" "4 minutes, 34 seconds" 274188] ["supporting-narrow-beaver-banned-from-strath.edn" "59 hours, 25 minutes, 2 seconds" 213902242] ["remarkable-thin-wombat-banned-from-flyggberg.edn" "1 hour, 35 minutes, 58 seconds" 5758769] ["healthy-rhomboidal-grasshopper-of-drainage-basin.edn" "59 hours, 25 minutes, 2 seconds" 213902238] ["sunny-puce-grasshopper-of-dry-lake.edn" "59 hours, 25 minutes, 2 seconds" 213902238] ["reassuring-rectangular-locust-exiled-from-oceanic-trench.edn" "59 hours, 25 minutes, 2 seconds" 213902234] ["vibrant-champagne-gnat-of-the-volcanic-island.edn" "59 hours, 25 minutes, 2 seconds" 213902234] ["gorgeous-wide-wren-banned-from-etchplain.edn" "56 hours, 56 minutes, 29 seconds" 204989323] ["terrific-round-pheasant-hailing-from-honeycomb-weathering.edn" "35 hours, 57 minutes, 52 seconds" 129472828] ["ready-cerise-badger-of-the-ria.edn" "59 hours, 25 minutes, 2 seconds" 213902234] ["friendly-turquoise-yak-exiled-from-pseudocrater.edn" "6 hours, 50 minutes, 29 seconds" 24629625] ["victorious-plum-locust-exiled-from-watershed.edn" "27 seconds" 27855] ["attractive-magenta-turtle-exiled-from-hillock.edn" "59 hours, 25 minutes, 2 seconds" 213902226] ["positive-circular-platypus-exiled-from-pit-crater.edn" "59 hours, 25 minutes, 2 seconds" 213902226] ["seemly-carmine-skunk-banned-from-outwash-plain.edn" "59 hours, 25 minutes, 2 seconds" 213902218] ["healing-rectangular-pig-of-salt-pan.edn" "59 hours, 25 minutes, 2 seconds" 213902214] ["earnest-puce-squirrel-of-flared-slope.edn" "25 hours, 14 minutes, 15 seconds" 90855287] ["luminous-black-codfish-of-the-dale.edn" "59 hours, 25 minutes, 2 seconds" 213902210] ["affluent-baby-blue-kangaroo-hailing-from-hoodoo.edn" "59 hours, 25 minutes, 2 seconds" 213902206] ["prepared-circular-tiger-of-tidal-marsh.edn" "59 hours, 25 minutes, 2 seconds" 213902206] ["brilliant-copper-toad-of-the-proglacial-lake.edn" "59 hours, 25 minutes, 2 seconds" 213902202] ["genuine-elliptic-wolf-of-the-oasis.edn" "59 hours, 25 minutes, 2 seconds" 213902202] ["moving-fat-hamster-banned-from-oxbow-lake.edn" "59 hours, 25 minutes, 2 seconds" 213902202] ["green-periwinkle-gnat-of-shoal.edn" "59 hours, 25 minutes, 2 seconds" 213902198] ["remarkable-orchid-gull-hailing-from-somma-volcano.edn" "59 hours, 25 minutes, 2 seconds" 213902190] ["genuine-slate-gray-gerbil-banned-from-strait.edn" "59 hours, 25 minutes, 2 seconds" 213902190] ["instinctive-square-nightingale-of-the-hoodoo.edn" "59 hours, 25 minutes, 2 seconds" 213902190] ["brilliant-maroon-otter-banned-from-entrenched-meander.edn" "59 hours, 25 minutes, 2 seconds" 213902186] ["ethical-orange-buffalo-exiled-from-hornito.edn" "52 hours, 42 minutes, 27 seconds" 189747650] ["plentiful-pyramidal-sand-dollar-of-arroyo.edn" "59 hours, 25 minutes, 2 seconds" 213902182] ["constant-star-shaped-echidna-banned-from-towhead.edn" "35 hours, 56 minutes, 15 seconds" 129375272] ["soulful-red-termite-exiled-from-backswamp.edn" "59 hours, 25 minutes, 2 seconds" 213902170] ["adorable-fat-swan-hailing-from-moraine.edn" "59 hours, 25 minutes, 2 seconds" 213902162] ["kind-lemon-mallard-hailing-from-supervolcano.edn" "59 hours, 25 minutes, 2 seconds" 213902162] ["agreeable-orchid-dove-of-palsa.edn" "59 hours, 25 minutes, 2 seconds" 213902158] ["distinguished-harlequin-cheetah-of-the-drumlin.edn" "59 hours, 25 minutes, 2 seconds" 213902158] ["thrilling-rhomboidal-eagle-of-the-v-shaped-valley.edn" "59 hours, 25 minutes, 2 seconds" 213902154] ["quick-narrow-jay-of-ria.edn" "59 hours, 25 minutes, 2 seconds" 213902154] ["grin-fat-wren-of-thalweg.edn" "59 hours, 25 minutes, 2 seconds" 213902146] ["honest-wide-mouse-exiled-from-subglacial-mound.edn" "59 hours, 25 minutes, 2 seconds" 213902146] ["refreshing-thin-dolphin-of-the-cuesta.edn" "8 hours, 52 minutes, 27 seconds" 31947581] ["meaningful-rhomboidal-kangaroo-banned-from-volcanic-dam.edn" "6 hours, 49 minutes, 34 seconds" 24574461] ["lucky-indigo-bear-of-hornito.edn" "59 hours, 25 minutes, 2 seconds" 213902146] ["rejoiceful-burgundy-wasp-banned-from-sand-boil.edn" "59 hours, 25 minutes, 2 seconds" 213902146] ["instinctive-lilac-chicken-of-the-scree.edn" "29 seconds" 29479] ["affluent-chocolate-hawk-exiled-from-volcanic-island.edn" "59 hours, 25 minutes, 2 seconds" 213902142] ["honorable-amethyst-skunk-of-the-calanque.edn" "59 hours, 25 minutes, 2 seconds" 213902142] ["zealous-linear-raven-banned-from-lava-spine.edn" "59 hours, 25 minutes, 2 seconds" 213902142] ["proud-thin-elk-of-rôche-moutonnée.edn" "59 hours, 25 minutes, 2 seconds" 213902134] ["plentiful-cylindrical-grasshopper-banned-from-gulch.edn" "59 hours, 25 minutes, 2 seconds" 213902130] ["upbeat-fat-dove-exiled-from-marine-terrace.edn" "59 hours, 25 minutes, 2 seconds" 213902130] ["sunny-mauve-tiger-hailing-from-permafrost-plateau.edn" "59 hours, 25 minutes, 2 seconds" 213902126] ["gorgeous-spring-bud-wallaby-of-the-permafrost-plateau.edn" "59 hours, 25 minutes, 2 seconds" 213902122] ["accepted-icosahedral-hedgehog-exiled-from-tuff-cone.edn" "59 hours, 25 minutes, 2 seconds" 213902122] ["poised-tan-seal-of-the-potrero.edn" "47 minutes, 0 second" 2820873] ["earnest-ultramarine-serval-exiled-from-landforms-by-shape.edn" "59 hours, 25 minutes, 2 seconds" 213902118] ["wholesome-thin-bee-hailing-from-tuya.edn" "59 hours, 25 minutes, 2 seconds" 213902110] ["cute-amethyst-opossum-hailing-from-cirque.edn" "59 hours, 25 minutes, 2 seconds" 213902002] ["secure-taupe-heron-banned-from-tepui.edn" "56 hours, 58 minutes, 20 seconds" 205100191] ["spirited-bulbous-clam-of-the-towhead.edn" "8 hours, 41 minutes, 14 seconds" 31274235] ["independent-fat-koala-banned-from-tuya.edn" "59 hours, 25 minutes, 1 second" 213901982] ["glowing-long-grasshopper-of-playa-lake.edn" "59 hours, 25 minutes, 1 second" 213901982] ["fine-orange-louse-of-bluff.edn" "59 hours, 25 minutes, 1 second" 213901974] ["marvelous-sapphire-mosquito-hailing-from-dirt-cone.edn" "59 hours, 25 minutes, 1 second" 213901974] ["meaningful-turquoise-fly-hailing-from-lithalsa.edn" "59 hours, 25 minutes, 1 second" 213901974] ["safe-conical-bat-exiled-from-marine-terrace.edn" "59 hours, 25 minutes, 1 second" 213901966] ["vigorous-square-serval-banned-from-thalweg.edn" "54 hours, 2 minutes, 43 seconds" 194563432] ["vivacious-rectangular-penguin-hailing-from-lacustrine-terrace.edn" "59 hours, 25 minutes, 1 second" 213901966] ["keen-bronze-skunk-of-the-salt-pan.edn" "53 hours, 19 minutes, 47 seconds" 191987285] ["open-wide-dog-of-the-bluff.edn" "59 hours, 25 minutes, 1 second" 213901966] ["famous-burgundy-eel-of-glacier.edn" "59 hours, 25 minutes, 1 second" 213901966] ["courageous-amber-buffalo-exiled-from-barrier-bar.edn" "59 hours, 25 minutes, 1 second" 213901962] ["satisfactory-narrow-donkey-banned-from-tea-table.edn" "59 hours, 25 minutes, 1 second" 213901958] ["honest-sapphire-eagle-exiled-from-escarpment.edn" "59 hours, 25 minutes, 1 second" 213901958] ["reassuring-fat-dog-banned-from-flat.edn" "59 hours, 25 minutes, 1 second" 213901954] ["satisfactory-navy-blue-fly-exiled-from-bar.edn" "22 minutes, 35 seconds" 1355705] ["favorable-baby-blue-wasp-hailing-from-Carolina-bay.edn" "59 hours, 25 minutes, 1 second" 213901954] ["fresh-electric-blue-seal-of-gulch.edn" "59 hours, 25 minutes, 1 second" 213901954] ["gorgeous-elliptic-pronghorn-banned-from-rock-formations.edn" "59 hours, 25 minutes, 1 second" 213901950] ["beneficial-spherical-ostrich-hailing-from-volcanic-cone.edn" "59 hours, 25 minutes, 1 second" 213901950] ["instantaneous-rectangular-bird-of-lava.edn" "59 hours, 25 minutes, 1 second" 213901950] ["dazzling-blush-badger-banned-from-plunge-pool.edn" "59 hours, 25 minutes, 1 second" 213901950] ["kind-rhomboidal-lion-of-the-floodplain.edn" "59 hours, 25 minutes, 1 second" 213901950] ["meritorious-long-mule-of-pediplain.edn" "59 hours, 25 minutes, 1 second" 213901946] ["fantastic-magenta-hyena-of-the-scarp.edn" "59 hours, 25 minutes, 1 second" 213901942] ["worthy-cyan-rat-of-the-tea-table.edn" "22 minutes, 35 seconds" 1355841] ["refined-carmine-crow-exiled-from-ejecta-blanket.edn" "59 hours, 25 minutes, 1 second" 213901922] ["engaging-spring-green-antelope-of-the-table.edn" "59 hours, 25 minutes, 1 second" 213901918] ["robust-mauve-ox-of-the-cave.edn" "59 hours, 25 minutes, 1 second" 213901918] ["keen-periwinkle-butterfly-of-trim-line.edn" "59 hours, 25 minutes, 1 second" 213901918] ["famous-square-sand-dollar-hailing-from-yazoo-stream.edn" "56 hours, 53 minutes, 48 seconds" 204828251]], :elevenlabs-api-key "f74e20dec69741c2d51663cbd8cd4cf6", :user-params-hash -1050300602, :grid-recos? true, :panels {:block-1304 {:h 3, :w 31, :tab "find all the snakes - for ireland!", :root [1 1], :name "block-1304", :views {:param-val [:box :align :center :justify :center :padding "13px" :style {:font-size "45px"} :child [:string :flow/a-random-wow>open-fn-2]]}, :queries {}}, :block-3117 {:h 4, :w 10, :tab "greenspun was right", :root [0 24], :name "block-3117", :views {:param-val [:box :align :center :justify :center :padding "13px" :style {:font-size "20px"} :child [:string :flow/dalle3-create-image>open-fn-7]]}, :queries {}}, :block-10874 {:drag-meta {:type :open-input}, :w 9, :selected-view :gorgeous-chartreuse-jay, :h 19, :views {:gorgeous-chartreuse-jay [:open-input {:kp [:param :gorgeous-chartreuse-jay], :width-int :panel-width+100, :height-int :panel-height+80, :syntax "text"}]}, :tab "effective beaver", :root [10 4], :name "block-10874"}, :block-825 {:h 3, :w 6, :tab "rectangular hyena", :root [0 22], :name "block-825", :views {:param-val [:box :align :center :justify :center :padding "13px" :style {:font-size "12px"} :child [:string :flow/dalle3-create-imageff>:node-color-thief-js]]}, :queries {}}, :block-2626 {:h 3, :w 6, :tab "conical donkey", :root [17 4], :name "block-2626", :views {:param-val [:box :align :center :justify :center :padding "13px" :style {:font-size "11px"} :child [:string :flow/dalle3-create-image>:open-fn-2]]}, :queries {}, :minimized? true}, :block-30 {:h 2, :w 6, :root [13 13], :tab "conical donkey", :selected-view :cell-drop-choppah2, :name "block-30", :views {:hi [:box :align :center :justify :center :attr {:id ":block-30.:hi"} :style {:font-size "106px", :font-weight 700, :padding-top "6px", :padding-left "14px", :margin-top "-8px", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child "hi!"], :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}], :cell-drop-choppah2 [:box :size "auto" :style {:font-size [:auto-size-px :flow-history-drag-29/elapsed_seconds.6], :transition "all 0.6s ease-in-out"} :child [:choppah :flow-history-drag-29/elapsed_seconds.1]]}, :queries {}}, :block-0 {:mad-libs-combo-hash ["-1108671860" "channel_history_drag_42"], :name "recharts_area - \"end_ts, rows\" - 686", :w 15, :style {:mix-blend-mode "normal", :opacity 0.85}, :selected-view :reech, :root [0 18], :h 4, :connection-id "flows-db", :queries {:gen-viz-749 {:select [[[[:count 1]] :rows] :end_ts], :from [:query/channel-history-drag-42], :group-by [:end_ts]}}, :tab "greenspun was right", :conditionals nil, :views {:reech [:> :ResponsiveContainer {:width "100%", :height :panel-height+50} [:> :AreaChart {:data :gen-viz-749, :margin {:top 5, :bottom 5, :right 30, :left 20}} [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}] [:> :Tooltip] [:> :XAxis {:dataKey :end_ts}] [:> :Area {:type "monotone", :dataKey :rows, :stroke "#8884d8", :activeDot {:r 8}}]]]}}, :block-8874 {:drag-meta {:type :open-input}, :w 9, :selected-view :learned-sangria-whale, :h 19, :views {:learned-sangria-whale [:open-input {:kp [:param :learned-sangria-whale], :width-int :panel-width+100, :height-int :panel-height+80, :syntax "text"}]}, :tab "effective beaver", :root [1 4], :name "block-8874"}, :block-3736 {:drag-meta {:type :open-input}, :w 7, :selected-view :dazzling-gold-bear, :h 19, :views {:dazzling-gold-bear [:open-input {:kp [:param :dazzling-gold-bear], :width-int :panel-width+100, :height-int :panel-height+80, :syntax "text"}]}, :tab "effective beaver", :root [38 4], :name "block-3736"}, :block-7670 {:h 2, :w 8, :tab "greenspun was right", :root [12 30], :name "block-7670", :views {:param-val [:box :align :center :justify :center :padding "13px" :style {:font-size "12px"} :child [:string :flow/dalle3-create-image>open-fn-8]]}, :queries {}}, :block-3950 {:h 9, :w 6, :tab "conical donkey", :root [17 8], :name "block-3950", :views {:param-val [:box :align :center :justify :center :padding "13px" :style {:font-size "11px"} :child [:string :flow/dalle3-create-image>:in-prompt]]}, :queries {}, :minimized? true}, :block-9153 {:h 6, :w 9, :tab "rectangular hyena", :root [32 2], :name "block-9153", :views {:param-val [:box :align :center :justify :center :padding "13px" :style {:font-size "13px"} :child [:string :flow/dalle3-create-imageff>:open-fn-4]]}, :queries {}}, :block-5748 {:h 4, :w 5, :root [1 8], :tab "conical donkey", :selected-view :hi, :name "block-5748", :views {:hi [:box :align :center :justify :center :attr {:id ":block-5748.:hi"} :style {:font-size "106px", :font-weight 700, :padding-top "6px", :padding-left "14px", :margin-top "-8px", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child "hi!"], :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}, :queries {}}, :block-3483 {:h 2, :w 7, :views {:flow-play-runstreamed [:box :align :center :justify :center :style {:font-size "25px", :font-weight 700, :padding-top "6px", :padding-left "14px", :margin-top "-8px", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child [:run-flow ["dalle3-create-image" "run dalle3-create-image" :runstream-overrides]]]}, :name "flow-play-from-runstreams", :root [15 1], :tab "conical donkey"}, :block-11214 {:drag-meta {:type :open-input}, :w 10, :selected-view :exciting-bronze-platypus, :h 19, :views {:exciting-bronze-platypus [:open-input {:kp [:param :exciting-bronze-platypus], :width-int :panel-width+100, :height-int :panel-height+80, :syntax "text"}]}, :tab "effective beaver", :root [28 4], :name "block-11214"}, :block-6215 {:name "select-all-jvm_stats", :w 17, :style {:mix-blend-mode "normal", :opacity 0.85}, :selected-view :jvm-stats-drag-39, :root [0 12], :h 6, :connection-id "system-db", :queries {:jvm-stats-drag-39 {:select [:internal_queries_run :queries_run :sniffs_run :sql_cache_size :thread_count :ts :used_memory_mb :ws_peers], :cache? false, :refresh-every 20, :from [[:jvm_stats :rr751]], :order-by [[:ts :desc]], :_last-run "16:28:24"}}, :tab "greenspun was right"}, :block-7784 {:h 5, :w 8, :connection-id "flows-db", :name "drag-from-select-all-channel_history", :queries {:data-type-drag-31 {:select [:data_type [[:count 1] :rowcnt]], :from [[:query/channel-history-drag-42 :kk584]], :group-by [:data_type], :order-by [[:rowcnt :desc]]}}, :root [5 7], :tab "greenspun was right"}, :block-8164 {:name "select-all-channel_history", :w 13, :style {:mix-blend-mode "normal", :opacity 0.85}, :selected-view :channel-history-drag-42, :root [0 0], :h 7, :connection-id "flows-db", :queries {:channel-history-drag-42 {:select [:base_flow_id :channel :data_type :dest :end :end_ts :flow_id :path :start :start_ts :ts :type :value], :from [[:channel_history :tt564]]}}, :tab "greenspun was right"}, :block-9866 {:h 6, :w 25, :tab "greenspun was right", :root [10 22], :style {:mix-blend-mode "normal", :opacity 0.55}, :name "block-9866", :views {:param-val [:box :align :center :justify :center :padding "11px" :style {:font-size "13px"} :child [:string :flow/dalle3-create-image>open-fn-4]]}, :queries {}}, :block-443 {:h 2, :w 9, :views {:flow-play-runstreamed [:box :align :center :justify :center :style {:font-size "25px", :font-weight 700, :padding-top "6px", :padding-left "14px", :margin-top "-8px", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child [:run-flow ["dalle3-create-imageff" "run dalle3-create-imageff" :runstream-overrides]]]}, :name "flow-play-from-runstreams", :root [32 0], :tab "rectangular hyena"}, :block-7359 {:h 2, :w 10, :views {:flow-play [:box :align :center :justify :center :style {:font-size "25px", :font-weight 700, :padding-top "6px", :padding-left "14px", :margin-top "-8px", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child [:run-flow ["dalle3-create-image" "run dalle3-create-image"]]]}, :name "flow-play", :root [0 22], :tab "greenspun was right"}, :block-4292 {:h 4, :w 5, :connection-id "system-db", :name "drag-from-select-all-jvm_stats", :style {:mix-blend-mode "normal", :opacity 0.85}, :queries {:thread-count-drag-20 {:select [[[:avg :thread_count] :thread_count_avg]], :cache? false, :refresh-every 20, :from [[:query/jvm-stats-drag-39 :qq262]], :_last-run "16:28:24"}}, :root [0 8], :tab "greenspun was right"}, :block-5967 {:h 7, :w 13, :connection-id "flows-db", :name "select-all-flow_history", :queries {:flow-history-drag-29 {:select [:client_name :elapsed :elapsed_seconds :ended :flow_id :human_elapsed :in_error :parent_run_id :run_id :started :ts], :from [[:flow_history :dd953]], :_last-run "08:56:39"}}, :root [1 1], :tab "conical donkey"}, :block-9709 {:drag-meta {:type :open-input}, :w 9, :selected-view :good-plum-sheep, :h 19, :views {:good-plum-sheep [:open-input {:kp [:param :good-plum-sheep], :width-int :panel-width+100, :height-int :panel-height+80, :syntax "text"}]}, :tab "effective beaver", :root [19 4], :name "block-9709"}, :block-188 {:h 4, :w 5, :root [15 3], :tab "conical donkey", :selected-view :hi, :name "block-188", :views {:hi [:box :align :center :justify :center :attr {:id ":block-188.:hi"} :style {:font-size "106px", :font-weight 700, :padding-top "6px", :padding-left "14px", :margin-top "-8px", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child "hi!"], :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}, :queries {}}, :block-5474 {:h 3, :w 10, :root [9 9], :tab "conical donkey", :selected-view :hi, :name "block-5474", :views {:hi [:box :padding "20px" :size "auto" :padding "10px" :style {:font-size "65px", :border "0px solid pink"} :child [:choppah 335425.423]], :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}, :queries {}}, :block-10454 {:h 2, :w 12, :tab "greenspun was right", :root [0 30], :name "block-10454", :views {:param-val [:box :align :center :justify :center :padding "13px" :style {:font-size "14px"} :child [:string :flow/dalle3-create-image>open-fn-6]]}, :queries {}}}, :selected-block "none!", :theme-colors-hashmap {"float" "#3C686A", "boolean" "#D8108D2", "map" "#E6166120", "list" "#9EA18F", "string" "#D0DCC8", "vector" "#AEACA9", "keyword" "#DC136EC", "rabbit-code" "#4D7866", "datetime" "#B6BDBF", "integer" "#829477", "unknown" "#B0ACB7", "date" "#2C435C", "nil" "#7A7898"}, :click-param {:flow-fn-sys {:name ":shell-command", :full_map "{:description \"Execute shell command. WARNING: only use if you know what you're doing / have controlled inputs\", :fn (fn [command] (rvbbit-backend.websockets/run-shell-command command)), :icon \"zmdi-washing-machine\", :defaults {:command \"ls -la\"}, :types {:command :string, :out :any}, :style {:color \"#ffdd3c\"}, :selected-style {:color \"#ffdd3c\"}, :inputs [:command], :required [:command]}", :description "Execute shell command. WARNING: only use if you know what you're doing / have controlled inputs", :inputs "[:command]", :icon "zmdi-washing-machine", :input_types "[:string]", :output_types ":any", :category ":rabbit-base"}, :blocks-sys {:block_key ":*theme*", :block_name "(meta: this screen's theme)", :queries 0, :views 27, :block_data "{:codemirror-theme \"the-matrix\", :editor-param-background-color \"#000000\", :base-block-style {:backdrop-filter \"blur(2px) brightness(70%) \"}, :vega-defaults {:view {:stroke \"transparent\"}, :axis {:domainColor \"#ffffff22\", :grid true, :font \"Lato\", :labelColor \"#ffffff88\", :titleFont \"Lato\", :titleColor \"#ffffff99\", :labelFont \"Lato\", :domain false, :gridColor \"#ffffff22\", :tickColor \"#ffffff22\", :axisFont \"Lato\"}, :legend {:labelFont \"Lato\", :legendFont \"Lato\", :labelColor \"#ffffff99\", :titleColor \"#ffffff99\", :stroke \"#ffffff99\", :titleFont \"Lato\"}, :header {:labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}, :mark {:font \"Lato\"}, :title {:font \"Lato\", :subtitleFont \"Lato\", :labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}}, :grid-selected-column-css {:background-color \"#00000088\", :filter \"brightness(200%)\"}, :base-block-color-selected \"#091536\", :block-title-font-color \"#ffffff\", :base-block-color \"#0b0f2180\", :editor-rim-color \"#2b4270\", :base-block-filter-selected \"drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)\", :vega-default-color-scheme {:scheme \"pastel2\"}, :data-colors {\"float\" \"#2c728e\", \"boolean\" \"#f386bf\", \"map\" \"#00FFFF\", \"list\" \"#c32148\", \"string\" \"#7de883\", \"vector\" \"#008080\", \"keyword\" \"#add8e6\", \"rabbit-code\" \"#FC0FC0\", \"datetime\" \"#472d7b\", \"integer\" \"#d6e367\", \"unknown\" \"#c7005d\", \"date\" \"#3b528b\", \"nil\" \"#ff2147\"}, :editor-grid-selected-font-color \"#000000\", :monospaced-font \"JetBrains Mono\", :editor-grid-selected-background-color \"#8879bc\", :nivo-defaults {:font-family :theme/base-font, :labels {:text {:fill \"#ffffff\", :font-size \"16px\", :font-family :theme/base-font, :font-weight 700}}, :tooltip {:container {:background \"#000\", :color \"#ffffff\", :text {:fill \"#eeeeee\"}, :fontSize \"18px\", :borderRadius \"4px\", :boxShadow \"0 1px 2px rgba(0, 0, 0, 0.55)\", :padding \"5px 9px\"}, :basic {:whiteSpace \"pre\", :display \"flex\", :alignItems \"center\"}, :tableCell {:padding \"3px 5px\"}}, :axis {:legend {:text {:fill \"#ffffff\", :font-size \"14px\", :font-family :theme/base-font, :font-weight 700}}, :ticks {:line {:stroke \"#ffffff60\"}, :text {:fill \"#ffffff60\", :font-weight 700}}}, :grid {:line {:stroke \"#ffffff\", :strokeWidth 0, :strokeDasharray \"0 0\"}}}, :editor-outer-rim-color \"#40d6ff\", :grid-selected-font-color \"#000000\", :block-title-selected-font-color \"#ffffff\", :grid-selected-background-color \"#a3d3ff\", :grid-font-color \"#ffffff\", :canvas-background-css {:background-image \"url(images/morg1-localup.png)\", :transition \"all 0.6s ease-in-out\", :background-size \"cover\", :background-color \"#424f57\"}, :editor-font-color \"#ffffff\", :base-font \"Nova Square\", :block-tab-selected-font-color \"#c9d1ff\", :editor-background-color \"#000006\", :editor-grid-font-color \"#ffffff\"}", :view_names ":codemirror-theme :editor-param-background-color :base-block-style :vega-defaults :grid-selected-column-css :base-block-color-selected :block-title-font-color :base-block-color :editor-rim-color :base-block-filter-selected :vega-default-color-scheme :data-colors :editor-grid-selected-font-color :monospaced-font :editor-grid-selected-background-color :nivo-defaults :editor-outer-rim-color :grid-selected-font-color :block-title-selected-font-color :grid-selected-background-color :grid-font-color :canvas-background-css :editor-font-color :base-font :block-tab-selected-font-color :editor-background-color :editor-grid-font-color", :query_names ""}, :tables-sys {:db_schema "none", :db_catalog nil, :connection_id "flows-db", :schema_cat nil, :table_name "flow_history", :fields 12}, :viz-shapes0-sys2 {:shape "recharts_area"}, :flow {:choppa-my-addy__2154444>choppa-halfy nil, :choppa-my-addy>addy-baddie 168, :dalle3-create-imageff>darkest1 "#0a1e15", :dalle3-create-imageff>*running? false, :dalle3-create-image>open-fn-4 "Create a hyperreal image with a 16:9 aspect ratio that portrays a buxom, fit, curvaceous Irish woman in her late 20s. Her physical features include long, thick Viking braids, a slightly upturned nose, and a playful smile that adds to the captivating and mysterious atmosphere. She is located in a picturesque Northeast American forest during dusk with dramatic Cyberpunk-Vaporwave aesthetic lighting illuminating her. Adorned with intricate body art that tells multiple narratives, her neck features a ribbon choker and a long necklace with a rabbit pendant, a motif that resurfaces in her tattoos. As the sun rises, light radiates off her body, emphasizing her muscular and motherly figure.", :tet2>*running? nil, :choppa-my-addy__4444>choppa-halfy nil, :dalle3-create-image>open-fn-7 "convert /home/ryanr/rvbbit-out/b64-decoded-5014602.webp /home/ryanr/rvbbit/frontend/resources/public/images/gen/b64-decoded-5014602.png", :choppa-my-addy>*running? false, :dalle3-create-image>darkest1 "#0e0f12", :choppa-my-addy__14444>choppa-halfy nil, :choppa-my-addy__0>choppa-halfy 61.6335, :choppa-my-addy__315553>choppa-halfy 157838.3435, :dalle3-create-image>upper-mid "#df4c92", :dalle3-create-image>*done? true, :dalle3-create-imageff>open-fn-8 "url(images/gen/b64-decoded-223993.png)", :counting-loop>open-fn-2 5, :gpt35-color-parser>*running? false, :choppa-my-addy__555>choppa-halfy 339.3435, :choppa-my-addy__1073031715>choppa-halfy 89.3925, :choppa-my-addy>choppa-halfy 17283.5, :claude-3-opus-loop1>*running? false, :dalle3-create-image>*running? false, :koala-flow-438>*running? false, :dalle3-create-image>open-fn-2 [{:revised_prompt "Create a hyperreal image with a 16:9 aspect ratio that portrays a buxom, fit, curvaceous Irish woman in her late 20s. Her physical features include long, thick Viking braids, a slightly upturned nose, and a playful smile that adds to the captivating and mysterious atmosphere. She is located in a picturesque Northeast American forest during dusk with dramatic Cyberpunk-Vaporwave aesthetic lighting illuminating her. Adorned with intricate body art that tells multiple narratives, her neck features a ribbon choker and a long necklace with a rabbit pendant, a motif that resurfaces in her tattoos. As the sun rises, light radiates off her body, emphasizing her muscular and motherly figure.", :b64_json "/home/ryanr/rvbbit-out/b64-decoded-5014602.webp"}], :a-random-wow>open-fn-2 nil, :live-scratch-flow>*running? false, :dalle3-create-image>open-fn-8 "url(images/gen/b64-decoded-5014602.png)", :quick-maths-v2>*running? false, :slow-maths-v2>*running? false, :choppa-my-addy__34>choppa-halfy 78.527, :dalle3-create-image>*status nil, :choppa-my-addy__31555>choppa-halfy 15839.3435, :dalle3-create-image>*result nil, :path-logic-flow>*running? false, :dalle3-create-image>mid-high "#40618a", :counting-loop>*running? false, :choppa-my-addy__21542444>choppa-halfy 1.07712835E7, :clam-flow-851>*running? nil, :choppa-my-addy__26686>choppa-halfy nil, :choppa-my-addy__154444>choppa-halfy nil, :dalle3-create-image>second-lightest "#64bcc6", :dalle3-create-imageff>upper-mid "#b66b56", :dalle3-create-imageff>node-color-thief-js {:dominantColor "#4a7bc5", :colorPalette ["#e6a8ca" "#0a1e15" "#3f84d2" "#1f3d5c" "#8c84cd" "#64aef2" "#1d538c" "#c64294" "#433989" "#b66b56"]}, :tet3>*running? nil, :dalle3-create-imageff>make-data-colors {"float" "#3C686A", "boolean" "#D8108D2", "map" "#E6166120", "list" "#9EA18F", "string" "#D0DCC8", "vector" "#AEACA9", "keyword" "#DC136EC", "rabbit-code" "#4D7866", "datetime" "#B6BDBF", "integer" "#829477", "unknown" "#B0ACB7", "date" "#2C435C", "nil" "#7A7898"}, :dalle3-create-image>open-fn-6 "/home/ryanr/rvbbit/frontend/resources/public/images/gen/b64-decoded-5014602.png", :choppa-my-addy__123>choppa-halfy 123.0615, :choppa-my-addy__254386>choppa-halfy nil, :dalle3-create-imageff>lightest1 "#e6a8ca", :choppa-my-addy__1555>choppa-halfy 839.3435, :dalle3-create-image>*rdunning? nil, :dalle3-create-image-newengland>*running? false, :dalle3-create-imageff>open-fn-4 "Picture a highly detailed, 16:9 ratio stylized illustration, with a blend of traditional and cyberpunk elements. This vivid image is set in a snow-blanketed, New England town in America, just before dawn during a relentless snowstorm. The atmosphere is slightly gritty, heightened by buildings that emit soft neon lights in hues of pink and blue. To the left of the frame is a young, beautiful, and fit Irish woman in her early 30s, who radiates a robust yet curvaceous figure. Her full lips wear a pleased yet sultry expression, while her slightly upturned nose adds to her charm. Dressed in a choker ribbon and a long necklace, her flowing, silky hair accentuates her beauty. Her neck, collarbone, and shoulders are adorned with intricate Celtic-style tattoos of rabbits and wilderness. The serene pre-dawn light creates an enigmatic ambiance, highlighting the dialogue between the natural world and technological influence. As the sun begins to bleed into the sky, its light gleams off her radiant form. Overhead, you observe this scene as snow gently falls upon her - she is visible in the frame from the lower-chest up. In the deep background, the silhouette of a ship, reminiscent of the historical Mayflower, is seen coming into port.", :choppa-my-addy__39>choppa-halfy nil, :dalle3-create-image>in-prompt "PLEASE USE EXACTLY THIS PROMPT: A high-definition, hyperreal, vivid 16:9 highly stylized & exaggerated pinup style illustration showcasing a stunning, buxom, robust, and fit yet curvaceous Irish woman in her late 20s, characterized by long, thick Viking braids, a slightly upturned nose, and a buxom yet slim figure. She stands majestically in the heart of a Northeast American forest, the New England wilderness being particularly picturesque during dusk. \n\nShe locks gaze with the camera, her confident and alluring look intensified by the dramatic Cyberpunk-Vaporwave aesthetic lighting and her dark makeup. \n\nHer dark hair contrasts with her pale skin. A sly, playful smile dances on her full lips, adding a mystical and alluring atmosphere. Her shoulders and collarbone are lavishly adorned with intricate and ornate tattoos. \n\nShe is buxom, robust, hyper curvaceous. She wears a choker ribbon and a long necklace.\n\nThe captivating body art continues up to her neck, each design an intricate narrative of its own. The woman is also seen donning a necklace with a rabbit pendant, and similar rabbit motifs can be found delicately integrated into her tattoos. Overall, the image captures a mixture of wonder, mystery, and temptation, sultry, burlesque. As the sun rises, its light gleams off her body radiantly. Full figured and motherly.\n\n", :dalle3-create-image>make-data-colors {"float" "#766594", "boolean" "#DF105F3", "map" "#BAA7BE", "list" "#5B788D", "string" "#F713D187", "vector" "#33396A", "keyword" "#9A84A9", "rabbit-code" "#514A7F", "datetime" "#33396A", "integer" "#101E7102", "unknown" "#CED8D3", "date" "#D3CED3", "nil" "#DBEBE0"}, :dalle3-create-image>lightest1 "#f8cb9b", :pizza-time-for-me>*running? nil, :tet>*running? nil, :choppa-my-addy__500414743>choppa-halfy 167774.2115}, :flows-sys {:flow_id "quick-maths-v2", :file_path "./flows/quick-maths-v2.edn", :last_modified "2024-03-12 05:34:56"}, :files-sys {:file_path "./screens/autumn-theme.edn", :screen_name "autumn-theme", :blocks 2, :queries 0, :ts "2024-01-07 03:03:16"}, :viz-tables-sys2 {:table_name :channel-history-drag-42}, :param {:exciting-bronze-platypus ["PLEASE USE EXACTLY THIS PROMPT: A high-definition, hyperreal, vivid 16:9 highly stylized & exaggerated pinup style illustration showcasing a stunning, buxom, robust, and fit yet curvaceous white woman in her late 20s, posing and dressed as the Statue of Liberty, a slightly upturned nose, and a buxom yet slim figure. She holds and AR-15 rifle. She stands majestically at the port of an American New England scene with boats, American flags and cheering crowds with rifles. " "" "She locks gaze with the camera, her confident and alluring look intensified by the dramatic Cyberpunk-Vaporwave aesthetic lighting. " "" "Her dark hair contrasts with her pale skin. A sly, playful smile dances on her full lips, adding a mystical and alluring atmosphere. Her shoulders and collarbone are lavishly adorned with intricate and ornate freedom and liberty tattoos. " "" "She is buxom, robust, hyper curvaceous. She wears a choker ribbon and a long necklace. " "" "The captivating body art continues up to her neck, each design an intricate narrative of its own. Overall, the image captures a mixture of wonder, mystery, pride, and temptation, sultry, burlesque. As the sun rises, its light gleams off her body radiantly. Full figured and motherly."], :fine-raspberry-elephant 34444, :gorgeous-chartreuse-jay ["A high-definition, vivid 16:9 highly stylized & exaggerated pinup style illustration of a New England scene in America, just before dawn during a heavy snowstorm, blending traditional and cyberpunk elements. " "" "The scene carries a slightly gritty atmosphere, with the town blanketed in snow and buildings emitting gentle pink and neon light blue illuminations. " "" "On the left side of the frame, a young and beautiful, stunning, young, robust, and fit yet curvaceous Irish woman, clearly in her early 30s, with full pouty lips (the bottom one being prominent) and a slightly upturned nose, offers a pleased yet sultry expression on her large mouth. She is buxom, robust, hyper curvaceous. She wears a choker ribbon and a long necklace." "" "Her silky long hair is flowing. She is completely covered with intricate Celtic-style tattoos of rabbits and wilderness over her neck, collarbone, and shoulders. The pre-dawn light instills a serene yet enigmatic ambiance to the scene, emphasizing the synergy between the natural world and technological influence. As the sun rises, its light gleams off her body radiantly. The camera looks down on her from above as the snow falls upon her - she is visible in the frame from the lower-chest up." "" "In the background the Mayflower is coming in to port."], :nummers 5733.562, :selected-view-data [:open-input {:kp [:param :dazzling-gold-bear], :width-int :panel-width+100, :height-int :panel-height+80, :syntax "clojure"}], :good-plum-sheep ["PLEASE USE EXACTLY THIS PROMPT: A high-definition, hyperreal, vivid 16:9 highly stylized & exaggerated pinup style cyberpunk illustration that portrays a late-20s Alice from Alice in Wonderland, detailed in a pin-up style illustration. She is a beautiful white girl with blonde hair - pouty lips and a slightly upturned nose. " "" "She should have intricate tattoos but still be recognizably Alice, with features and attire that hint at her Alice in Wonderland identity. " "" "She's engaged in a complex interaction with a wall filled with cut-out shapes, where she is fitting a piece into place. " "" "The other side of the wall is operated by a whimsical machine, inserting and retracting shapes. The setting is a gritty urban environment with colorful neon lights providing atmospheric illumination, reminiscent of a Cyberpunk 2077 scene." "" "She is buxom, robust, hyper curvaceous. She wears a choker ribbon and a long necklace. Burlesque."], :selected-view [:views :dazzling-gold-bear], :butter-tits? true, :secure-ochre-buffalo "new parameter value!", :learned-sangria-whale ["PLEASE USE EXACTLY THIS PROMPT: A high-definition, hyperreal, vivid 16:9 highly stylized & exaggerated pinup style illustration showcasing a stunning, buxom, robust, and fit yet curvaceous Irish woman in her late 20s, characterized by long, thick Viking braids, a slightly upturned nose, and a buxom yet slim figure. She stands majestically in the heart of a Northeast American forest, the New England wilderness being particularly picturesque during dusk. " "" "She locks gaze with the camera, her confident and alluring look intensified by the dramatic Cyberpunk-Vaporwave aesthetic lighting and her dark makeup. " "" "Her dark hair contrasts with her pale skin. A sly, playful smile dances on her full lips, adding a mystical and alluring atmosphere. Her shoulders and collarbone are lavishly adorned with intricate and ornate tattoos. " "" "She is buxom, robust, hyper curvaceous. She wears a choker ribbon and a long necklace." "" "The captivating body art continues up to her neck, each design an intricate narrative of its own. The woman is also seen donning a necklace with a rabbit pendant, and similar rabbit motifs can be found delicately integrated into her tattoos. Overall, the image captures a mixture of wonder, mystery, and temptation, sultry, burlesque. As the sun rises, its light gleams off her body radiantly. Full figured and motherly." "" ""], :dazzling-gold-bear ["A highly-detailed, hyperrealistic 16:9 digitally-rendered illustration of a pre-dawn winter scene in a traditional New England setting, filled with a mix of rustic charm and cyberpunk aesthetics. The town is bathed in a fresh blanket of snow under a heavy snowstorm, capturing a slightly gritty ambience, with buildings glowing softly in hues of pink and neon light blue. On the left of the frame stands a vibrant Irish woman in her early 30s. Features include a very buxom build, full pouty lips with a prominent bottom one, an upturned nose, and a pleased yet sultry expression. Her long hair, slightly damp from the intense snow, runs down her neck and shoulders. Intricate, Celtic-inspired tattoos depicting rabbits and wilderness adorn her neck, collarbone, and shoulders. As the sun cautiously peeps over the horizon, its light reflects off her body, enhancing the mood set by the serene yet enigmatic pre-dawn lighting. Full figured and motherly - as the light dances off her body."], :selected-block :block-3736}, :flow-history-drag-29 {:started 1707909981462, :ended 1707910021601, :run_id "9d293613-7b11-437d-ad59-7bf598d24db1", :human_elapsed "40 seconds", :in_error 0, :ts "2024-02-14 11:27:01", :flow_id "openai-image-gen", :client_name ":refined-cubic-rhinoceros-of-the-fjord", :parent_run_id "", :elapsed_seconds 40.139, :elapsed 40139}, :theme {:codemirror-theme "rvbbit-dynamic", :editor-param-background-color "#000000", :base-block-style {:backdrop-filter "blur(2px) brightness(70%) "}, :vega-defaults {:view {:stroke "transparent"}, :axis {:domainColor "#ffffff22", :grid true, :font "Lato", :labelColor "#ffffff88", :titleFont "Lato", :titleColor "#ffffff99", :labelFont "Lato", :domain false, :gridColor "#ffffff22", :tickColor "#ffffff22", :axisFont "Lato"}, :legend {:labelFont "Lato", :legendFont "Lato", :labelColor "#ffffff99", :titleColor "#ffffff99", :stroke "#ffffff99", :titleFont "Lato"}, :header {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"}, :mark {:font "Lato"}, :title {:font "Lato", :subtitleFont "Lato", :labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"}}, :grid-selected-column-css {:background-color "#00000088", :filter "brightness(200%)"}, :base-block-color-selected "#00030a", :block-title-font-color "#ffffff", :base-block-color [:if :flow/dalle3-create-imageff>darkest1 [:string :flow/dalle3-create-imageff>darkest1 82] "#0b0f2180"], :editor-rim-color [:if :flow/dalle3-create-imageff>upper-mid :flow/dalle3-create-imageff>upper-mid "#3f522b"], :base-block-filter-selected "drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)", :vega-default-color-scheme {:scheme "pastel2"}, :data-colors [:if :flow/dalle3-create-imageff>make-data-colors :flow/dalle3-create-imageff>make-data-colors {"float" "#2c728e", "boolean" "#f386bf", "map" "#00FFFF", "list" "#c32148", "string" "#7de883", "vector" "#008080", "keyword" "#add8e6", "rabbit-code" "#FC0FC0", "datetime" "#472d7b", "integer" "#d6e367", "unknown" "#c7005d", "date" "#3b528b", "nil" "#ff2147"}], :editor-grid-selected-font-color "#000000", :monospaced-font "JetBrains Mono", :editor-grid-selected-background-color [:if :flow/dalle3-create-imageff>upper-mid :flow/dalle3-create-imageff>lightest1 "#6de069"], :nivo-defaults {:font-family :theme/base-font, :labels {:text {:fill "#ffffff", :font-size "16px", :font-family :theme/base-font, :font-weight 700}}, :tooltip {:container {:background "#000", :color "#ffffff", :text {:fill "#eeeeee"}, :fontSize "18px", :borderRadius "4px", :boxShadow "0 1px 2px rgba(0, 0, 0, 0.55)", :padding "5px 9px"}, :basic {:whiteSpace "pre", :display "flex", :alignItems "center"}, :tableCell {:padding "3px 5px"}}, :axis {:legend {:text {:fill "#ffffff", :font-size "14px", :font-family :theme/base-font, :font-weight 700}}, :ticks {:line {:stroke "#ffffff60"}, :text {:fill "#ffffff60", :font-weight 700}}}, :grid {:line {:stroke "#ffffff", :strokeWidth 0, :strokeDasharray "0 0"}}}, :editor-outer-rim-color [:if :flow/dalle3-create-imageff>upper-mid :flow/dalle3-create-imageff>upper-mid "#87f5c2"], :grid-selected-font-color "#000000", :block-title-selected-font-color "#ffffff", :grid-selected-background-color "#a3d3ff", :grid-font-color "#ffffff", :canvas-background-css {:background-image :flow/dalle3-create-imageff>open-fn-8, :transition "all 0.8s ease-in-out", :background-size "cover", :background-color "#424f57"}, :editor-font-color "#ffffff", :base-font "Instagram Sans", :block-tab-selected-font-color "#c9d1ff", :editor-background-color "#000006", :editor-grid-font-color "#ffffff"}, :flow-fn-categories-sys {:category ":rabbit-base"}, :connections-sys {:database_name "*cache-db*", :connection_id "flows-db"}, :sys {:selected-tab "effective beaver", :selected-tab-idx 2}, :kits-sys {:enabled [[:query-basics-1 :outliers]]}}, :selected-flow "koala-flow-438", :flow-statuses {"koala-flow-438" {:time-running "less than a second", :*running? false, :tracker-events 10, :*started-by :instinctive-lilac-chicken-of-the-scree, :channels-open? false, :channels 0, :channels-open 0, :blocks_finished 28}, "my-pcos" {:command "ls -l -h", :*running? false, :start 1710435284035, :exit-code 0, :end 1710435284036, :process? true}, "ls -l -h" {:command "ls -l -h", :*running? false, :start 1710435284035, :exit-code 0, :end 1710435284036, :process? true}, "local-process" {:command "ls -l -h", :*running? false, :start 1710436247553, :exit-code 0, :end 1710436247554, :process? true}}}