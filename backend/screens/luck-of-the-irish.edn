{:orders
 {:flow-fn-sys
  [:name
   :full_map
   :description
   :inputs
   :icon
   :input_types
   :output_types
   :category],
  :fields-sys [:field_name :field_type :data_type],
  :tables-sys
  [:db_schema
   :db_catalog
   :connection_id
   :schema_cat
   :table_name
   :fields],
  :flows-sys [:flow_id :file_path :last_modified],
  :kits
  [:item_hash
   :item_name
   :kit_name
   :item_type
   :item_key
   :item_idx
   :item_options
   :item_data
   :client_name
   :flow_id
   :updated],
  :kits-drag-28
  [:client_name
   :flow_id
   :item_data
   :item_hash
   :item_idx
   :item_key
   :item_name
   :item_options
   :item_type
   :kit_name
   :updated],
  :flow-fn-categories-sys [:category],
  :tmp--603116194-hist-sys
  [:client_name
   :data
   :diff
   :diff_kp
   :key
   :kp
   :panel_key
   :pre_data
   :type
   :updated],
  :connections-sys [:database_name :connection_id],
  :reco-counts [:table_name :cnt],
  :kit-results-sys
  [:item_hash
   :item_name
   :kit_name
   :item_type
   :item_key
   :item_idx
   :item_options
   :item_data
   :client_name
   :flow_id
   :updated],
  :flow-fn-all-sys [:name]},
 :reco-preview nil,
 :flow? false,
 :sql-source
 {:kits-drag-28
  {:select
   [:client_name
    :flow_id
    :item_data
    :item_hash
    :item_idx
    :item_key
    :item_name
    :item_options
    :item_type
    :kit_name
    :updated],
   :from [[:kits :xx394]]},
  :kits {:select [:*], :from [:kits], :limit 111}},
 :selected-flow-block :kick-1,
 :meta
 {:flow-fn-sys
  {:fields
   {:name
    {:data-type "string",
     :distinct 8,
     :group-by? true,
     :commons {":kick" 1, ":http-call" 1, ":open-fn" 1},
     :cardinality 100},
    :full_map
    {:data-type "string",
     :distinct 8,
     :group-by? true,
     :commons
     {"{:description \"Push items to the client UI.\", :fn (fn [destination ref item-key thread-id thread-desc message-name & args] (rvbbit-backend.websockets/kick destination ref item-key thread-id thread-desc message-name args)), :type :kick, :icon \"images/pink-rabbit-head.png\", :defaults {:destination :client-name, :item-key \":base\", :thread-id :flow-id, :message-name \"Unnamed Message\", :thread-desc :flow-id, :ref :flow-id}, :types {:destination [:keyword :vector :list :set], :ref :string, :item-key :keyword, :thread-id :string, :message-name :string, :thread-desc :string, :out :any}, :pill-name \"content\", :style {:color \"#fc0fc0\"}, :selected-style {:color \"#fc0fc0\"}, :inputs [:destination :ref :item-key :thread-id :message-name :thread-desc], :expandable? true, :required [:destination :ref :item-key :thread-id :message-name :thread-desc]}"
      1,
      "{:description \"Basic HTTP call primitive\", :fn (fn [req-map] (rvbbit-backend.websockets/http-call req-map)), :icon \"zmdi-http\", :defaults {:req-map {:url \"https://owen-wilson-wow-api.onrender.com/wows/random\", :query-params {:movie \"Wedding Crashers\", :results 40}}}, :types {:req-map :map, :out :any}, :style {:color \"#7BB696\"}, :selected-style {:color \"#7BB696\"}, :inputs [:req-map], :expandable? true, :required [:req-map]}"
      1,
      "{:description \"Write you own Clojure function! Godspeed!\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}"
      1},
     :cardinality 100},
    :description
    {:data-type "string",
     :distinct 8,
     :group-by? true,
     :commons
     {"Push items to the client UI." 1,
      "Basic HTTP call primitive" 1,
      "Write you own Clojure function! Godspeed!" 1},
     :cardinality 100},
    :inputs
    {:data-type "string",
     :distinct 8,
     :group-by? true,
     :commons
     {"[:destination :ref :item-key :thread-id :message-name :thread-desc]"
      1,
      "[:req-map]" 1,
      "[:value]" 1},
     :cardinality 100},
    :icon
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons
     {"zmdi-file-text" 2,
      "zmdi-dns" 2,
      "images/pink-rabbit-head.png" 1},
     :cardinality 75},
    :input_types
    {:data-type "string",
     :distinct 7,
     :group-by? true,
     :commons
     {"[:string]" 2,
      "[[:keyword :vector :list :set] :string :keyword :string :string :string]"
      1,
      "[:map]" 1},
     :cardinality 87},
    :output_types
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons {":any" 4, ":string" 2, ":keyword" 1},
     :cardinality 50},
    :category
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":rabbit-base" 8},
     :cardinality 12}},
   :rowcount 8},
  :blocks-sys
  {:fields
   {:block_key
    {:data-type "string",
     :distinct 8,
     :group-by? true,
     :commons {":block-6800" 1, ":block-7680" 1, ":block-10504" 1},
     :cardinality 100},
    :block_name
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons
     {"select-all-offenses" 2, "" 2, "select-all-offense_codes" 1},
     :cardinality 75},
    :queries
    {:data-type "integer",
     :distinct 2,
     :group-by? true,
     :commons {1 5, 0 3},
     :cardinality 25},
    :views
    {:data-type "integer",
     :distinct 2,
     :group-by? true,
     :commons {0 7, 27 1},
     :cardinality 25},
    :block_data
    {:data-type "string",
     :distinct 8,
     :group-by? true,
     :commons
     {"{:h 6, :w 34, :connection-id \"boston-crime\", :name \"select-all-offenses\", :queries {:offenses-drag-9 {:select [:DAY_OF_WEEK :DISTRICT :HOUR :INCIDENT_NUMBER :Lat :Long :MONTH :OCCURRED_ON_DATE :OFFENSE_CODE :OFFENSE_CODE_GROUP :OFFENSE_DESCRIPTION :REPORTING_AREA :SHOOTING :STREET :UCR_PART :YEAR], :from [[:offenses :mm47]]}}, :root [1 1], :tab \"littering and littering and littering and\", :selected-view :offenses-drag-9}"
      1,
      "{:h 9, :w 30, :connection-id \"boston-crime\", :name \"select-all-offenses\", :queries {:offenses-drag-17 {:select [:DAY_OF_WEEK :DISTRICT :HOUR :INCIDENT_NUMBER :Lat :Location :Long :MONTH :OCCURRED_ON_DATE :OFFENSE_CODE :OFFENSE_CODE_GROUP :OFFENSE_DESCRIPTION :REPORTING_AREA :SHOOTING :STREET :UCR_PART :YEAR], :from [[:offenses :jj935]], :where [:and [:= :OFFENSE_CODE_GROUP \"Vandalism\"] [:= :DISTRICT \"C11\"]], :style-rules {[:* :higlight-683042327] {:logic [:and [:= :STREET \"DORCHESTER AVE\"]], :style {:background-color \"#008b8b66\", :border \"1px solid #00000000\"}}}}}, :root [1 1], :tab \"pyramidal eagle\"}"
      1,
      "{:h 7, :w 5, :connection-id \"boston-crime\", :name \"select-all-offense_codes\", :queries {:offense-codes-drag-1 {:select [:CODE :NAME], :from [[:offense_codes :kk735]]}}, :root [1 17], :tab \"littering and littering and littering and\"}"
      1},
     :cardinality 100},
    :view_names
    {:data-type "string",
     :distinct 2,
     :group-by? true,
     :commons
     {"" 7,
      ":codemirror-theme :editor-param-background-color :base-block-style :vega-defaults :grid-selected-column-css :base-block-color-selected :block-title-font-color :base-block-color :editor-rim-color :base-block-filter-selected :vega-default-color-scheme :data-colors :editor-grid-selected-font-color :monospaced-font :editor-grid-selected-background-color :nivo-defaults :editor-outer-rim-color :grid-selected-font-color :block-title-selected-font-color :grid-selected-background-color :grid-font-color :canvas-background-css :editor-font-color :base-font :block-tab-selected-font-color :editor-background-color :editor-grid-font-color"
      1},
     :cardinality 25},
    :query_names
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons {"" 3, ":offenses-drag-9" 1, ":offenses-drag-17" 1},
     :cardinality 75}},
   :rowcount 8},
  :fields-sys
  {:fields
   {:field_name
    {:data-type "string",
     :distinct 11,
     :group-by? true,
     :commons {"item_options" 1, "item_name" 1, "flow_id" 1},
     :cardinality 100},
    :field_type
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {"TEXT" 9, "TIMESTAMP" 1, "INTEGER" 1},
     :cardinality 27},
    :data_type
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {"string" 9, "datetime" 1, "integer" 1},
     :cardinality 27}},
   :rowcount 11},
  :tables-sys
  {:fields
   {:db_schema
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"none" 23},
     :cardinality 4},
    :db_catalog
    {:data-type "unknown",
     :distinct 1,
     :group-by? true,
     :commons {nil 23},
     :cardinality 4},
    :connection_id
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"system-db" 23},
     :cardinality 4},
    :schema_cat
    {:data-type "unknown",
     :distinct 1,
     :group-by? false,
     :commons {nil 23},
     :cardinality 4},
    :table_name
    {:data-type "string",
     :distinct 23,
     :group-by? true,
     :commons
     {"connections" 1, "board_history" 1, "rule_maps_tests" 1},
     :cardinality 100},
    :fields
    {:data-type "integer",
     :distinct 14,
     :group-by? false,
     :commons {5 3, 12 3, 6 3},
     :cardinality 60}},
   :rowcount 23},
  :flows-sys
  {:fields
   {:flow_id
    {:data-type "string",
     :distinct 14,
     :group-by? true,
     :commons {"clam-flow-851" 3, "map-pull-test2" 1, "kick-test-1" 1},
     :cardinality 87},
    :file_path
    {:data-type "string",
     :distinct 16,
     :group-by? true,
     :commons
     {"./flows/raw-fn-testing1.edn" 1,
      "./flows/add-then-multiply.edn" 1,
      "./flows/kick-test-1.edn" 1},
     :cardinality 100},
    :last_modified
    {:data-type "string",
     :distinct 16,
     :group-by? true,
     :commons
     {"2023-12-31 20:10:21" 1,
      "2023-12-28 17:03:55" 1,
      "2023-12-28 17:08:54" 1},
     :cardinality 100}},
   :rowcount 16},
  :files-sys
  {:fields
   {:file_path
    {:data-type "string",
     :distinct 67,
     :group-by? true,
     :commons
     {"./screens/weave-test122.edn" 1,
      "./screens/boston-test-10-3-23.edn" 1,
      "./screens/tweet-bigfoot-is-blurry.edn" 1},
     :cardinality 100},
    :screen_name
    {:data-type "string",
     :distinct 63,
     :group-by? true,
     :commons
     {"unnamed-screen!" 4, "tallica-param-test2" 2, "light-theme" 1},
     :cardinality 94},
    :blocks
    {:data-type "integer",
     :distinct 31,
     :group-by? true,
     :commons {13 5, 15 5, 11 4},
     :cardinality 46},
    :queries
    {:data-type "integer",
     :distinct 29,
     :group-by? true,
     :commons {5 7, 11 6, 0 6},
     :cardinality 43},
    :ts
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"2024-01-03 06:38:11" 36,
      "2024-01-03 06:38:12" 28,
      "2024-01-03 06:38:10" 3},
     :cardinality 4}},
   :rowcount 67},
  :kits
  {:fields
   {:item_idx
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {0 40},
     :cardinality 2},
    :item_options
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons
     {"{:options {:actions? false, :pages? false, :search? false}, :parameters {}, :mutates {}, :description \"Kick Test Desc\"}"
      40},
     :cardinality 2},
    :updated
    {:data-type "string",
     :distinct 8,
     :group-by? true,
     :commons
     {"2024-01-05 22:01:33" 28,
      "2024-01-05 22:01:28" 4,
      "2024-01-05 22:54:05" 2},
     :cardinality 20},
    :item_hash
    {:data-type "string",
     :distinct 31,
     :group-by? true,
     :commons {"-1109292874" 4, "1348026704" 3, "62750881" 2},
     :cardinality 77},
    :item_type
    {:data-type "string",
     :distinct 2,
     :group-by? true,
     :commons
     {"kick-test!" 39,
      "Linux DESKTOP-37QPP2M 5.15.133.1-microsoft-standard-WSL2 #1 SMP Thu Oct 5 21:02:42 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux"
      1},
     :cardinality 5},
    :item_name
    {:data-type "string",
     :distinct 40,
     :group-by? true,
     :commons {":errors" 1, ":kits-drag-28" 1, ":flows" 1},
     :cardinality 100},
    :flow_id
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"flow-id-here!" 40},
     :cardinality 2},
    :client_name
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons
     {":creative-thin-parrot-banned-from-dreikanter" 35,
      ":upright-coral-rat-of-drumlin" 3,
      ":server" 1},
     :cardinality 10},
    :item_data
    {:data-type "string",
     :distinct 31,
     :group-by? true,
     :commons
     {"{:content [\"2024-01-05 17:01:33 - query ran in 19 ms.\"], :name \"arbitrary kick data\", :order 0, :parameters {}, :step-mutates {}}"
      4,
      "{:content [\"2024-01-05 17:01:33 - query ran in 26 ms.\"], :name \"arbitrary kick data\", :order 0, :parameters {}, :step-mutates {}}"
      3,
      "{:content [\"2024-01-05 17:01:30 - query ran in 15 ms.\"], :name \"arbitrary kick data\", :order 0, :parameters {}, :step-mutates {}}"
      2},
     :cardinality 77},
    :item_key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":kick-payload" 40},
     :cardinality 2},
    :kit_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":kick" 40},
     :cardinality 2}},
   :rowcount 40},
  :kits-drag-28
  {:fields
   {:item_idx
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {0 8},
     :cardinality 12},
    :item_options
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons
     {"{:options {:actions? false, :pages? false, :search? false}, :parameters {}, :mutates {}, :description \"\"}"
      8},
     :cardinality 12},
    :updated
    {:data-type "string",
     :distinct 8,
     :group-by? true,
     :commons
     {"2024-01-06 00:02:56" 1,
      "2024-01-06 00:02:21" 1,
      "2024-01-06 00:02:19" 1},
     :cardinality 100},
    :item_hash
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {"1401834052" 4, "-1200836999" 3, "-805805360" 1},
     :cardinality 37},
    :item_type
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {"kick-test!" 4, "map-pull-test2" 3, "a-random-wow" 1},
     :cardinality 37},
    :item_name
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {":base" 4, ":kits-drag-28" 3, ":flows-sys" 1},
     :cardinality 37},
    :flow_id
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"flow-id-here!" 8},
     :cardinality 12},
    :client_name
    {:data-type "string",
     :distinct 2,
     :group-by? true,
     :commons
     {":upright-coral-rat-of-drumlin" 4,
      ":right-cylindrical-raccoon-hailing-from-playa-lake" 4},
     :cardinality 25},
    :item_data
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"{:content [], :name \"\", :order 0, :parameters {}, :forced-mutates {}, :step-mutates {}}"
      4,
      "{:content [\"Linux DESKTOP-37QPP2M 5.15.133.1-microsoft-standard-WSL2 #1 SMP Thu Oct 5 21:02:42 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux\"], :name \"\", :order 0, :parameters {}, :forced-mutates {}, :step-mutates {}}"
      3,
      "{:content [\"Free Birds\"], :name \"\", :order 0, :parameters {}, :forced-mutates {}, :step-mutates {}}"
      1},
     :cardinality 37},
    :item_key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":" 8},
     :cardinality 12},
    :kit_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":kick" 8},
     :cardinality 12}},
   :rowcount 8},
  :flow-fn-categories-sys
  {:fields
   {:category
    {:data-type "string",
     :distinct 2,
     :group-by? true,
     :commons {":rabbit-base" 1, ":clojure-base" 1},
     :cardinality 100}},
   :rowcount 2},
  :tmp--603116194-hist-sys {:fields {}, :rowcount 0},
  :connections-sys
  {:fields
   {:database_name
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {"*cache-db*" 5, "SQLite" 4, "*csv-import-db*" 1},
     :cardinality 30},
    :connection_id
    {:data-type "string",
     :distinct 10,
     :group-by? true,
     :commons {"imported" 1, "bigfoot-ufos" 1, "snifftmp1" 1},
     :cardinality 100}},
   :rowcount 10},
  :reco-counts {:fields {}, :rowcount 0},
  :kit-results-sys
  {:fields
   {:item_idx
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {0 1},
     :cardinality 100},
    :item_options
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons
     {"{:options {:actions? false, :pages? false, :search? false}, :parameters {}, :mutates {}, :description \"\"}"
      1},
     :cardinality 100},
    :updated
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"2024-01-06 00:02:56" 1},
     :cardinality 100},
    :item_hash
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"-805805360" 1},
     :cardinality 100},
    :item_type
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"a-random-wow" 1},
     :cardinality 100},
    :item_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":base" 1},
     :cardinality 100},
    :flow_id
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"flow-id-here!" 1},
     :cardinality 100},
    :client_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":upright-coral-rat-of-drumlin" 1},
     :cardinality 100},
    :item_data
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons
     {"{:content [\"Free Birds\"], :name \"\", :order 0, :parameters {}, :forced-mutates {}, :step-mutates {}}"
      1},
     :cardinality 100},
    :item_key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":" 1},
     :cardinality 100},
    :kit_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":kick" 1},
     :cardinality 100}},
   :rowcount 1},
  :flow-fn-all-sys
  {:fields
   {:name
    {:data-type "string",
     :distinct 24,
     :group-by? true,
     :commons {":=" 1, ":>=" 1, ":write-file" 1},
     :cardinality 100}},
   :rowcount 24}},
 :default-col-widths
 {:system-connections-list* {:connections-sys 111},
  :system-tables-list* {:tables-sys 137},
  :system-fields-list* {:fields-sys 170},
  :flow-list* {:flows-sys 187},
  :flow-cat-list* {:flow-fn-categories-sys 111},
  :flow-fn-list* {:flow-fn-sys 100},
  :block-1579 {:kits-drag-28 110}},
 :data-hash 897890293,
 :tabs ["find all the snakes - for ireland!" "Persian blue gerbil"],
 :selected-cols nil,
 :server
 {:settings
  {:harvest-on-boot? true,
   :default "./screens/winter-theme.edn",
   :eleven-labs-api-key nil,
   :kits
   {:buffy
    {:author
     {:name "Ryan Robitaille",
      :email "ryan.robitaille@gmail.com",
      :x "@ryrobes",
      :site "https://ryrob.es/"},
     :kit-name :buffy,
     :package-name :grab-bag,
     :fn (rvbbit-backend.assistants/buffy :query-name),
     :name "Ask Buffy!",
     :icon "zmdi-cocktail",
     :run-on :queries,
     :description "What does Buffy think about this data? Who knows!"},
    :outliers
    {:description
     "A basic multivariate outlier detection runstream. Highlight outliers in various dimensional groupings as a launch pad for further exploration.",
     :image-url "images/outliers-image.png",
     :fn
     (rabbit-kit-outliers.core/get-outliers
       :query-name
       :panel-name
       :query),
     :name "Outliers",
     :icon "zmdi-functions",
     :author
     {:name "Ryan Robitaille",
      :email "ryan.robitaille@gmail.com",
      :x "@ryrobes",
      :site "https://ryrob.es/"},
     :run-on :queries,
     :repl {:host "127.0.0.1", :port 42999},
     :kit-name :outliers,
     :package-name :query-basics-1},
    :forecast
    {:description
     "WIP: basic timeseries forecasting based on previous values",
     :fn
     (rabbit-kit-outliers.core/get-forecast
       :query-name
       :panel-name
       :query),
     :name "Forecasting",
     :icon "zmdi-brightness-7",
     :author
     {:name "Ryan Robitaille",
      :email "ryan.robitaille@gmail.com",
      :x "@ryrobes",
      :site "https://ryrob.es/"},
     :run-on :queries,
     :repl {:host "127.0.0.1", :port 42999},
     :kit-name :forecast,
     :package-name :query-basics-1}},
   :graphite-host "127.0.0.1",
   :openapi-org-id nil,
   :debug-level 1,
   :screens
   ["GGGeat-ochre-mole-exiled-from-abyssal-plain"
    "SSSSSSuccessful-oval-sea-urchin-of-mountain-range"
    "SSuccessful-oval-sea-urchin-of-mountain-range"
    "aaa-run-amok"
    "asdasdasdasd"
    "autumn-theme"
    "bigfoot-snapshots"
    "bigfoot-snapshots2"
    "bigfoot-snapshots3"
    "boston-test-10-3-23"
    "bunch of bullshit"
    "bunch of bullshit2"
    "bunch of bullshit4"
    "caliope"
    "calliope"
    "canvas-scrubber-test1"
    "chaos simple"
    "chaos-views"
    "clean-grey-defaults"
    "code-data-literal-stonks-test"
    "data-literals-test-sunday"
    "data-literals-test-sundaydd"
    "demo-dark-pumpkin-bkgrd-sept23"
    "demo-light-bkgrd-sept23"
    "demo-lime-green-slime"
    "error-monitor"
    "error-monitor-vanessa"
    "error-monitor-vanessa2"
    "fake-books-1"
    "fetching-pentagonal-termite-of-tghe-submarine-canyon"
    "glass-fish-board-test"
    "layout-test-1"
    "layout-test-12"
    "light-theme"
    "literal-data-test"
    "luck-of-the-irish"
    "mapbox-test"
    "night-city-never-sleeps"
    "nivo-getting-better!"
    "nivo-hacking-2023"
    "nivo-hacking-2023333"
    "nivo-hacking-october-2nd"
    "old-defaults"
    "poor-touring-me"
    "pres-sql-test-1"
    "recharts-test-blocks"
    "refresh-test"
    "tallica-param-test2"
    "the-future-soon"
    "tweet-bigfoot-is-blurry"
    "tweet-demo-thing-bigfoot-is-blurry"
    "unnamed-screen!"
    "weave-test"
    "weave-test1"
    "weave-test122"
    "who ya gonna call?"
    "who ya gonna call? again"
    "winter-theme"
    "winter-theme-choom"
    "winter-theme2"
    "winter-theme33"
    "winter-theme45"
    "winter-theme47"
    "wow-board"],
   :openapi-key
   "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"}},
 :editor? true,
 :buffy? true,
 :status-data
 {:heartbeat
  {:kick
   {:data
    [{:sent! :heartbeat,
      :to :all,
      :at "2024-01-05 19:04:28",
      :payload nil,
      :payload-kp [:heartbeat :heartbeat]}
     nil],
    :elapsed-ms nil,
    :reco-count nil}},
  "kick-test!"
  {:kick
   {:data
    [{:sent! "kick-test!",
      :to :upright-coral-rat-of-drumlin,
      :at "2024-01-05 17:57:31",
      :payload
      {:kick-payload
       {:data
        [{:content ["2024-01-05 17:57:31 - query ran in 1 ms."],
          :name "arbitrary kick data",
          :order 0,
          :parameters {},
          :step-mutates {}}],
        :description "Kick Test Desc",
        :mutates {},
        :options {:actions? false, :pages? false, :search? false},
        :parameters {}}},
      :payload-kp [:kits-drag-28 "kick-test!"]}
     nil],
    :elapsed-ms nil,
    :reco-count nil}},
  "owen"
  {:kick
   {:data
    [{:sent! "owen",
      :to :upright-coral-rat-of-drumlin,
      :at "2024-01-05 18:04:32",
      :payload
      {:kick-payload
       {:data
        [{:content
          ["Cars"
           "Wow! This organic fuel is great!"
           "Lightning McQueen"],
          :name "arbitrary kick data",
          :order 0,
          :parameters {},
          :step-mutates {}}],
        :description "Kick Test Desc",
        :mutates {},
        :options {:actions? false, :pages? false, :search? false},
        :parameters {}}},
      :payload-kp [":base" "owen"]}
     nil],
    :elapsed-ms nil,
    :reco-count nil}},
  "a-random-wow"
  {:kick
   {:data
    [{:sent! "a-random-wow",
      :to :upright-coral-rat-of-drumlin,
      :at "2024-01-05 18:15:05",
      :payload
      {:kick-payload
       {:data
        [{:content
          ["Are You Here"
           "Oh, wow. Thank you for that."
           "Steve Dallas"],
          :name "arbitrary kick data",
          :order 0,
          :parameters {},
          :step-mutates {}}],
        :description "Kick Test Desc",
        :mutates {},
        :options {:actions? false, :pages? false, :search? false},
        :parameters {}}},
      :payload-kp [":base" "a-random-wow"]}
     nil],
    :elapsed-ms nil,
    :reco-count nil}},
  "I Spy"
  {:kick
   {:data
    [{:sent! "I Spy",
      :to :upright-coral-rat-of-drumlin,
      :at "2024-01-05 18:29:25",
      :payload
      {:kick-payload
       {:data
        [{:content
          ["I Spy"
           "Wow, sounds like a sweet woman."
           "Alexander Scott"],
          :name "arbitrary kick data",
          :order 0,
          :parameters {},
          :step-mutates {}}],
        :description "Kick Test Desc",
        :mutates {},
        :options {:actions? false, :pages? false, :search? false},
        :parameters {}}},
      :payload-kp [":base" "I Spy"]}
     nil],
    :elapsed-ms nil,
    :reco-count nil}}},
 :re-pressed.core/keydown
 {:keys
  [{:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 87}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 65}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 65}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 65}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 65}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 27}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 72}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 72}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 72}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 72}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey true,
    :keyCode 32}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 27}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 72}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 72}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 27}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}],
  :event-keys
  [[[:viz-yard.bricks/esc-unselect-current] [{:keyCode 27}]]
   [[:viz-yard.bricks/redo-one]
    [{:keyCode 90, :ctrlKey true, :shiftKey true}]]
   [[:viz-yard.bricks/undo-one]
    [{:keyCode 90, :ctrlKey true, :shiftKey false}]]
   [[:viz-yard.bricks/toggle-buffy]
    [{:keyCode 32, :shiftKey true, :ctrlKey false}]]
   [[:viz-yard.bricks/toggle-editor]
    [{:keyCode 32, :shiftKey false, :ctrlKey false}]]
   [[:viz-yard.bricks/toggle-flow]
    [{:keyCode 32, :shiftKey false, :ctrlKey true}]]
   [[:viz-yard.bricks/next-panel] [{:keyCode 9}]]
   [[:viz-yard.bricks/toggle-peek] [{:keyCode 80}]]
   [[:viz-yard.bricks/toggle-lines] [{:keyCode 76}]]
   [[:viz-yard.bricks/toggle-auto-run] [{:keyCode 79}]]
   [[:viz-yard.bricks/delete-selected-panel]
    [{:keyCode 46, :shiftKey true}]]
   [[:viz-yard.bricks/cycle-column-select false] [{:keyCode 81}]]
   [[:viz-yard.bricks/cycle-column-select true] [{:keyCode 69}]]
   [[:viz-yard.audio/start-recording] [{:keyCode 84}]]
   [[:viz-yard.audio/stop-recording] [{:keyCode 89}]]
   [[:viz-yard.bricks/stretch-panel :wider]
    [{:keyCode 68, :shiftKey true}]]
   [[:viz-yard.bricks/stretch-panel :longer]
    [{:keyCode 83, :shiftKey true}]]
   [[:viz-yard.bricks/stretch-panel :narrower]
    [{:keyCode 65, :shiftKey true}]]
   [[:viz-yard.bricks/stretch-panel :shorter]
    [{:keyCode 87, :shiftKey true}]]
   [[:viz-yard.bricks/panel-depth-up] [{:keyCode 82, :shiftKey true}]]
   [[:viz-yard.bricks/panel-depth-down]
    [{:keyCode 70, :shiftKey true}]]
   [[:viz-yard.bricks/nudge-panel :up] [{:keyCode 87}]]
   [[:viz-yard.bricks/nudge-panel :down] [{:keyCode 83}]]
   [[:viz-yard.bricks/nudge-panel :left] [{:keyCode 65}]]
   [[:viz-yard.bricks/nudge-panel :right] [{:keyCode 68}]]],
  :clear-keys nil,
  :always-listen-keys nil,
  :prevent-default-keys
  [{:keyCode 32}
   {:keyCode 46, :shiftKey true}
   {:keyCode 83, :ctrlKey true}
   {:keyCode 9}
   {:keyCode 70, :ctrlKey true}]},
 :flow-subs [:flow/a-random-wow>open-fn-2],
 :client-name :upright-coral-rat-of-drumlin,
 :flows
 {"a-random-wow"
  {:map
   {:open-fn-1
    {:y 1076.3695847284225,
     :fn (fn [x] x),
     :w 200,
     :raw-fn (fn [x] x),
     :right-click? true,
     :icon "zmdi-functions",
     :z 0,
     :ports
     {:in {:value :any},
      :out
      {:video :map,
       :total_wows_in_movie :integer,
       :* :map,
       :release_date :string,
       :director :string,
       :full_line :string,
       :movie :string,
       :year :integer,
       :poster :string,
       :audio :string,
       :current_wow_in_movie :integer,
       :timestamp :string,
       :movie_duration :string,
       :character :string}},
     :h 100,
     :x 1627.5426208496094,
     :data
     {:flow-item
      {:description "Write you own Clojure function! Godspeed!",
       :category ":rabbit-base",
       :fn (fn [x] x),
       :name ":open-fn",
       :raw-fn (fn [x] x),
       :type :open-fn,
       :icon "zmdi-functions",
       :types {:value :any, :out :any},
       :input_types "[:any]",
       :inputs "[:value]",
       :output_types ":any",
       :expandable? true,
       :full_map
       "{:description \"Write you own Clojure function! Godspeed!\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}"},
      :name "drag-from-",
      :w 5,
      :source-panel :flow-fn-list*,
      :h 6,
      :connection-id nil,
      :view-output? true,
      :queries
      {:name-drag-25
       {:select
        [:name
         :full_map
         :description
         :inputs
         :icon
         :input_types
         :output_types
         :category],
        :from [[:query/flow-fn-sys :ii11]],
        :where [:= :name ":open-fn"]}},
      :drag-meta
      {:data-type "string",
       :source-query :flow-fn-sys,
       :param-full ":open-fn",
       :param-field :name,
       :source-panel-key :flow-fn-list*,
       :type :open-fn,
       :param-table :flow-fn-sys,
       :source-table :query/flow-fn-sys,
       :connection-id nil,
       :target :name,
       :row-num 5}}},
    :kick-1
    {:w 200,
     :h 100,
     :x 2605.9421304238813,
     :y 1194.4130093961148,
     :z 0,
     :data
     {:flow-item
      {:description "Push items to the client UI.",
       :category ":rabbit-base",
       :fn
       (fn [destination
            ref
            item-key
            thread-id
            thread-desc
            message-name
            &
            args]
         (rvbbit-backend.websockets/kick
           destination
           ref
           item-key
           thread-id
           thread-desc
           message-name
           args)),
       :name ":kick",
       :type :kick,
       :icon "images/pink-rabbit-head.png",
       :defaults
       {:destination :client-name,
        :item-key ":base",
        :thread-id :flow-id,
        :message-name "Unnamed Message",
        :thread-desc :flow-id,
        :ref :flow-id},
       :types
       {:destination [:keyword :vector :list :set],
        :ref :string,
        :item-key :keyword,
        :thread-id :string,
        :message-name :string,
        :thread-desc :string,
        :out :any},
       :pill-name "content",
       :input_types
       "[[:keyword :vector :list :set] :string :keyword :string :string :string]",
       :style {:color "#fc0fc0"},
       :selected-style {:color "#fc0fc0"},
       :inputs
       [:destination
        :ref
        :item-key
        :thread-id
        :message-name
        :thread-desc
        :content-6],
       :output_types ":any",
       :expandable? true,
       :full_map
       "{:description \"Push items to the client UI.\", :fn (fn [destination ref item-key thread-id thread-desc message-name & args] (rvbbit-backend.websockets/kick destination ref item-key thread-id thread-desc message-name args)), :type :kick, :icon \"images/pink-rabbit-head.png\", :defaults {:destination :client-name, :item-key \":base\", :thread-id :flow-id, :message-name \"Unnamed Message\", :thread-desc :flow-id, :ref :flow-id}, :types {:destination [:keyword :vector :list :set], :ref :string, :item-key :keyword, :thread-id :string, :message-name :string, :thread-desc :string, :out :any}, :pill-name \"content\", :style {:color \"#fc0fc0\"}, :selected-style {:color \"#fc0fc0\"}, :inputs [:destination :ref :item-key :thread-id :message-name :thread-desc], :expandable? true, :required [:destination :ref :item-key :thread-id :message-name :thread-desc]}",
       :required
       [:destination
        :ref
        :item-key
        :thread-id
        :message-name
        :thread-desc]},
      :name "drag-from-",
      :w 5,
      :source-panel :flow-fn-list*,
      :root [1032.9036483764648 276.86981201171875],
      :h 6,
      :connection-id nil,
      :queries
      {:name-drag-30
       {:select
        [:name
         :full_map
         :description
         :inputs
         :icon
         :input_types
         :output_types
         :category],
        :from [[:query/flow-fn-sys :ww380]],
        :where [:= :name ":kick"]}},
      :drag-meta
      {:data-type "string",
       :source-query :flow-fn-sys,
       :param-full ":kick",
       :param-field :name,
       :source-panel-key :flow-fn-list*,
       :type :kick,
       :param-table :flow-fn-sys,
       :source-table :query/flow-fn-sys,
       :connection-id nil,
       :target :name,
       :row-num 7}},
     :icon "images/pink-rabbit-head.png",
     :ports
     {:in
      {:destination [:keyword :vector :list :set],
       :ref :string,
       :item-key :keyword,
       :thread-id :string,
       :message-name :string,
       :thread-desc :string,
       :content-6 :any},
      :out {:out :any}}},
    :open-fn-2
    {:y 1180.6607971191406,
     :fn (fn [x] x),
     :w 200,
     :raw-fn (fn [x] x),
     :right-click? true,
     :icon "zmdi-functions",
     :z 0,
     :ports {:in {:value :any}, :out {:out :any}},
     :h 100,
     :x 2128.9655223846435,
     :data
     {:flow-item
      {:description "Write you own Clojure function! Godspeed!",
       :category ":rabbit-base",
       :fn (fn [x] x),
       :name ":open-fn",
       :raw-fn (fn [x] x),
       :type :open-fn,
       :icon "zmdi-functions",
       :types {:value :any, :out :any},
       :input_types "[:any]",
       :inputs "[:value]",
       :output_types ":any",
       :expandable? true,
       :full_map
       "{:description \"Write you own Clojure function! Godspeed!\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}"},
      :name "drag-from-",
      :w 5,
      :source-panel :flow-fn-list*,
      :h 6,
      :connection-id nil,
      :view-output? true,
      :queries
      {:name-drag-25
       {:select
        [:name
         :full_map
         :description
         :inputs
         :icon
         :input_types
         :output_types
         :category],
        :from [[:query/flow-fn-sys :ii11]],
        :where [:= :name ":open-fn"]}},
      :drag-meta
      {:data-type "string",
       :source-query :flow-fn-sys,
       :param-full ":open-fn",
       :param-field :name,
       :source-panel-key :flow-fn-list*,
       :type :open-fn,
       :param-table :flow-fn-sys,
       :source-table :query/flow-fn-sys,
       :connection-id nil,
       :target :name,
       :row-num 5}}},
    :open-input-1
    {:w 200,
     :h 90,
     :data
     {:drag-meta {:type :open-block},
      :flow-item {:expandable? true},
      :user-input "feed me, seymour!"},
     :z 0,
     :ports {:in {}, :out {:out :string}},
     :x 1124.5232986037795,
     :y 1378.0461201435812},
    :open-fn-6
    {:y 904.9966583251953,
     :fn (fn [x] x),
     :w 200,
     :raw-fn (fn [x] x),
     :right-click? true,
     :icon "zmdi-functions",
     :z 0,
     :ports {:in {:value :any}, :out {:out :any}},
     :h 100,
     :x 1422.5591960906982,
     :data
     {:flow-item
      {:description "Write you own Clojure function! Godspeed!",
       :category ":rabbit-base",
       :fn (fn [x] x),
       :name ":open-fn",
       :raw-fn (fn [x] x),
       :type :open-fn,
       :icon "zmdi-functions",
       :types {:value :any, :out :any},
       :input_types "[:any]",
       :inputs "[:value]",
       :output_types ":any",
       :expandable? true,
       :full_map
       "{:description \"Write you own Clojure function! Godspeed!\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}"},
      :name "drag-from-",
      :w 5,
      :source-panel :flow-fn-list*,
      :h 6,
      :connection-id nil,
      :view-output? true,
      :queries
      {:name-drag-25
       {:select
        [:name
         :full_map
         :description
         :inputs
         :icon
         :input_types
         :output_types
         :category],
        :from [[:query/flow-fn-sys :ii11]],
        :where [:= :name ":open-fn"]}},
      :drag-meta
      {:data-type "string",
       :source-query :flow-fn-sys,
       :param-full ":open-fn",
       :param-field :name,
       :source-panel-key :flow-fn-list*,
       :type :open-fn,
       :param-table :flow-fn-sys,
       :source-table :query/flow-fn-sys,
       :connection-id nil,
       :target :name,
       :row-num 5}}},
    :http-call-1req-map
    {:ports
     {:out
      {:url :string,
       :query-params :map,
       :*
       {:url "https://owen-wilson-wow-api.onrender.com/wows/random",
        :query-params {:movie "Wedding Crashers", :results 40}}}}},
    :open-input
    {:w 200,
     :h 60,
     :data
     {:drag-meta {:type :open-block},
      :flow-item {:expandable? true, :inputs []},
      :user-input
      {:url "https://owen-wilson-wow-api.onrender.com/wows/random"},
      :view-output? false,
      :width 350},
     :z 0,
     :ports {:out {:url :string, :* :map}, :in {}},
     :x 836.3762876768371,
     :y 1178.1792440878378},
    :http-call-1-idx0
    {:ports
     {:out
      {:video :map,
       :total_wows_in_movie :integer,
       :* :map,
       :release_date :string,
       :director :string,
       :full_line :string,
       :movie :string,
       :year :integer,
       :poster :string,
       :audio :string,
       :current_wow_in_movie :integer,
       :timestamp :string,
       :movie_duration :string,
       :character :string}}},
    :open-fn-3
    {:y 1336.9387648809522,
     :fn (fn [x] x),
     :w 200,
     :raw-fn (fn [x] x),
     :right-click? true,
     :icon "zmdi-functions",
     :z 0,
     :ports {:in {:value :any}, :out {:out :any}},
     :h 100,
     :x 2130.5671232677646,
     :data
     {:flow-item
      {:description "Write you own Clojure function! Godspeed!",
       :category ":rabbit-base",
       :fn (fn [x] x),
       :name ":open-fn",
       :raw-fn (fn [x] x),
       :type :open-fn,
       :icon "zmdi-functions",
       :types {:value :any, :out :any},
       :input_types "[:any]",
       :inputs "[:value]",
       :output_types ":any",
       :expandable? true,
       :full_map
       "{:description \"Write you own Clojure function! Godspeed!\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}"},
      :name "drag-from-",
      :w 5,
      :source-panel :flow-fn-list*,
      :h 6,
      :connection-id nil,
      :queries
      {:name-drag-25
       {:select
        [:name
         :full_map
         :description
         :inputs
         :icon
         :input_types
         :output_types
         :category],
        :from [[:query/flow-fn-sys :ii11]],
        :where [:= :name ":open-fn"]}},
      :drag-meta
      {:data-type "string",
       :source-query :flow-fn-sys,
       :param-full ":open-fn",
       :param-field :name,
       :source-panel-key :flow-fn-list*,
       :type :open-fn,
       :param-table :flow-fn-sys,
       :source-table :query/flow-fn-sys,
       :connection-id nil,
       :target :name,
       :row-num 5}}},
    :open-fn-4
    {:y 1021.6155537373309,
     :fn (fn [x] x),
     :w 200,
     :raw-fn (fn [x] x),
     :right-click? true,
     :icon "zmdi-functions",
     :z 0,
     :ports {:in {:value :any}, :out {:out :any}},
     :h 100,
     :x 2178.019701158679,
     :data
     {:flow-item
      {:description "Write you own Clojure function! Godspeed!",
       :category ":rabbit-base",
       :fn (fn [x] x),
       :name ":open-fn",
       :raw-fn (fn [x] x),
       :type :open-fn,
       :icon "zmdi-functions",
       :types {:value :any, :out :any},
       :input_types "[:any]",
       :inputs "[:value]",
       :output_types ":any",
       :expandable? true,
       :full_map
       "{:description \"Write you own Clojure function! Godspeed!\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}"},
      :name "drag-from-",
      :w 5,
      :source-panel :flow-fn-list*,
      :h 6,
      :connection-id nil,
      :queries
      {:name-drag-25
       {:select
        [:name
         :full_map
         :description
         :inputs
         :icon
         :input_types
         :output_types
         :category],
        :from [[:query/flow-fn-sys :ii11]],
        :where [:= :name ":open-fn"]}},
      :drag-meta
      {:data-type "string",
       :source-query :flow-fn-sys,
       :param-full ":open-fn",
       :param-field :name,
       :source-panel-key :flow-fn-list*,
       :type :open-fn,
       :param-table :flow-fn-sys,
       :source-table :query/flow-fn-sys,
       :connection-id nil,
       :target :name,
       :row-num 5}}},
    :open-fn-5
    {:y 964.3716583251953,
     :fn (fn [x] x),
     :w 200,
     :raw-fn (fn [x] (* 4 8444)),
     :right-click? true,
     :icon "zmdi-functions",
     :z 0,
     :ports {:in {:value :any}, :out {:out :any}},
     :h 100,
     :x 883.4576717376708,
     :data
     {:flow-item
      {:description "Write you own Clojure function! Godspeed!",
       :category ":rabbit-base",
       :fn (fn [x] x),
       :name ":open-fn",
       :raw-fn (fn [x] x),
       :type :open-fn,
       :icon "zmdi-functions",
       :types {:value :any, :out :any},
       :input_types "[:any]",
       :inputs "[:value]",
       :output_types ":any",
       :expandable? true,
       :full_map
       "{:description \"Write you own Clojure function! Godspeed!\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}"},
      :name "drag-from-",
      :w 5,
      :source-panel :flow-fn-list*,
      :h 6,
      :connection-id nil,
      :view-output? false,
      :queries
      {:name-drag-25
       {:select
        [:name
         :full_map
         :description
         :inputs
         :icon
         :input_types
         :output_types
         :category],
        :from [[:query/flow-fn-sys :ii11]],
        :where [:= :name ":open-fn"]}},
      :drag-meta
      {:data-type "string",
       :source-query :flow-fn-sys,
       :param-full ":open-fn",
       :param-field :name,
       :source-panel-key :flow-fn-list*,
       :type :open-fn,
       :param-table :flow-fn-sys,
       :source-table :query/flow-fn-sys,
       :connection-id nil,
       :target :name,
       :row-num 5}}},
    :http-call-1
    {:w 200,
     :h 100,
     :x 1207.6814791051354,
     :y 1168.586924780869,
     :z 0,
     :data
     {:flow-item
      {:description "Basic HTTP call primitive",
       :category ":rabbit-base",
       :fn (fn [req-map] (rvbbit-backend.websockets/http-call req-map)),
       :name ":http-call",
       :icon "zmdi-http",
       :defaults
       {:req-map
        {:url "https://owen-wilson-wow-api.onrender.com/wows/random",
         :query-params {:movie "Wedding Crashers", :results 40}}},
       :types {:req-map :map, :out :any},
       :input_types "[:map]",
       :style {:color "#7BB696"},
       :selected-style {:color "#7BB696"},
       :inputs "[:req-map]",
       :output_types ":any",
       :expandable? true,
       :full_map
       "{:description \"Basic HTTP call primitive\", :fn (fn [req-map] (rvbbit-backend.websockets/http-call req-map)), :icon \"zmdi-http\", :defaults {:req-map {:url \"https://owen-wilson-wow-api.onrender.com/wows/random\", :query-params {:movie \"Wedding Crashers\", :results 40}}}, :types {:req-map :map, :out :any}, :style {:color \"#7BB696\"}, :selected-style {:color \"#7BB696\"}, :inputs [:req-map], :expandable? true, :required [:req-map]}",
       :required [:req-map]},
      :name "drag-from-",
      :w 5,
      :source-panel :flow-fn-list*,
      :root [395 185],
      :h 6,
      :connection-id nil,
      :view-output? true,
      :queries
      {:name-drag-26
       {:select
        [:name
         :full_map
         :description
         :inputs
         :icon
         :input_types
         :output_types
         :category],
        :from [[:query/flow-fn-sys :nn42]],
        :where [:= :name ":http-call"]}},
      :drag-meta
      {:data-type "string",
       :source-query :flow-fn-sys,
       :param-full ":http-call",
       :param-field :name,
       :source-panel-key :flow-fn-list*,
       :type :where,
       :param-table :flow-fn-sys,
       :source-table :query/flow-fn-sys,
       :connection-id nil,
       :target :name,
       :row-num 6}},
     :icon "zmdi-http",
     :ports {:in {:req-map :map}, :out {:idx0 :map, :* :vector}}}},
   :connections
   [[:http-call-1/idx0 :open-fn-1/value]
    [:open-fn-1/full_line :open-fn-2/value]
    [:open-fn-2 :done]
    [:open-input/* :http-call-1/req-map]
    [:open-fn-1/character :open-fn-3/value]
    [:open-fn-1/movie :open-fn-4/value]
    [:open-fn-5 :open-fn-6/value]
    [:open-fn-4 :kick-1/content-6]]}},
 :openai-api-key "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",
 :window {:w 2175, :h 1629},
 :post-meta
 {:kits-drag-28
  {:* {:rowcount 9},
   :item_idx {:distinct 1},
   :item_options {:distinct 1},
   :updated {:distinct 5},
   :item_hash {:distinct 5},
   :item_type {:distinct 3},
   :item_name {:distinct 2},
   :flow_id {:distinct 1},
   :client_name {:distinct 2},
   :item_data {:distinct 5},
   :item_key {:distinct 1},
   :kit_name {:distinct 1}}},
 :status
 {:heartbeat {:kick [:flow/a-random-wow>open-fn-2]},
  "kick-test!" {:kick :kits-drag-28},
  "owen" {:kick ":base"},
  "a-random-wow" {:kick ":base"},
  "I Spy" {:kick ":base"}},
 :screen-name "luck-of-the-irish",
 :recos-page2 0,
 :selected-tab "Persian blue gerbil",
 :col-names nil,
 :snapshots nil,
 :openai-org-id "org-YLngjih2M4oju0tnnZtKCAYg",
 :recos-page 0,
 :re-pollsive.core/polling
 {:rules
  [{:interval 10,
    :event [:viz-yard.bricks/dispatch-auto-queries],
    :poll-when [:viz-yard.bricks/auto-run-and-connected?],
    :dispatch-event-on-start? false}
   {:interval 5,
    :event [:viz-yard.bricks/update-metadata],
    :dispatch-event-on-start? false,
    :started-at 0,
    :stopped-time-since-last-poll nil,
    :started-before? true}
   {:interval 120,
    :event [:viz-yard.bricks/clean-up-reco-previews],
    :dispatch-event-on-start? false,
    :started-at 0,
    :stopped-time-since-last-poll nil,
    :started-before? true}
   {:interval 1,
    :event [:viz-yard.bricks/sub-to-flows],
    :poll-when [:viz-yard.bricks/new-flow-subs?],
    :dispatch-event-on-start? false,
    :started-at nil,
    :stopped-time-since-last-poll -1,
    :started-before? true}
   {:interval 1000,
    :event [:viz-yard.bricks/update-metadata-tabs],
    :dispatch-event-on-start? false,
    :started-at 0,
    :stopped-time-since-last-poll nil,
    :started-before? true}
   {:interval 1,
    :event [:viz-yard.bricks/update-conditionals],
    :dispatch-event-on-start? false,
    :started-at 0,
    :stopped-time-since-last-poll nil,
    :started-before? true}
   {:interval 4,
    :event [:viz-yard.bricks/refresh-status],
    :poll-when [:viz-yard.bricks/bg-status?],
    :dispatch-event-on-start? false}],
  :counter 66845},
 :base-sniff-queries {:kits 1883252379},
 :panels-hash 663497816,
 :elevenlabs-api-key "f74e20dec69741c2d51663cbd8cd4cf6",
 :websocket-fx.core/sockets
 {:default
  {:status :connected,
   :options
   {:url "ws://localhost:3030/ws",
    :format :edn,
    :on-disconnect
    [:websocket-fx.core/unsubscribe :default :server-push2],
    :on-connect
    [:websocket-fx.core/subscribe
     :default
     :server-push2
     {:message
      {:kind :server-push2,
       :client-name :upright-coral-rat-of-drumlin,
       :ui-keypath [:server],
       :extras {:hello? true}},
      :on-message [:viz-yard.http/simple-response]}]},
   :subscriptions
   {:server-push2
    {:message
     {:kind :server-push2,
      :client-name :upright-coral-rat-of-drumlin,
      :ui-keypath [:server],
      :extras {:hello? true}},
     :on-message [:viz-yard.http/simple-response]}},
   :requests {}}},
 :grid-recos? true,
 :panels
 {:block-1304
  {:h 3,
   :w 31,
   :tab "find all the snakes - for ireland!",
   :root [1 1],
   :name "block-1304",
   :views
   {:param-val
    [:box
     :align
     :center
     :justify
     :center
     :padding
     "13px"
     :style
     {:font-size "45px"}
     :child
     [:string :flow/a-random-wow>open-fn-2]]},
   :queries {}},
  :block-1579
  {:h 7,
   :w 25,
   :connection-id "system-db",
   :name "select-all-kits",
   :queries
   {:kits-drag-28
    {:select
     [:client_name
      :flow_id
      :item_data
      :item_hash
      :item_idx
      :item_key
      :item_name
      :item_options
      :item_type
      :kit_name
      :updated],
     :from [[:kits :xx394]]}},
   :root [1 2],
   :tab "Persian blue gerbil"}},
 :selected-block "none!",
 :click-param
 {nil {nil nil},
  :flow-fn-sys
  {:name ":kick",
   :full_map
   "{:description \"Push items to the client UI.\", :fn (fn [destination ref item-key thread-id thread-desc message-name & args] (rvbbit-backend.websockets/kick destination ref item-key thread-id thread-desc message-name args)), :type :kick, :icon \"images/pink-rabbit-head.png\", :defaults {:destination :client-name, :item-key \":base\", :thread-id :flow-id, :message-name \"Unnamed Message\", :thread-desc :flow-id, :ref :flow-id}, :types {:destination [:keyword :vector :list :set], :ref :string, :item-key :keyword, :thread-id :string, :message-name :string, :thread-desc :string, :out :any}, :pill-name \"content\", :style {:color \"#fc0fc0\"}, :selected-style {:color \"#fc0fc0\"}, :inputs [:destination :ref :item-key :thread-id :message-name :thread-desc], :expandable? true, :required [:destination :ref :item-key :thread-id :message-name :thread-desc]}",
   :description "Push items to the client UI.",
   :inputs
   "[:destination :ref :item-key :thread-id :message-name :thread-desc]",
   :icon "images/pink-rabbit-head.png",
   :input_types
   "[[:keyword :vector :list :set] :string :keyword :string :string :string]",
   :output_types ":any",
   :category ":rabbit-base"},
  :blocks-sys
  {:block_key ":*theme*",
   :block_name "(meta: this screen's theme)",
   :queries 0,
   :views 27,
   :block_data
   "{:codemirror-theme \"the-matrix\", :editor-param-background-color \"#000000\", :base-block-style {:backdrop-filter \"blur(2px) brightness(70%) \"}, :vega-defaults {:view {:stroke \"transparent\"}, :axis {:domainColor \"#ffffff22\", :grid true, :font \"Lato\", :labelColor \"#ffffff88\", :titleFont \"Lato\", :titleColor \"#ffffff99\", :labelFont \"Lato\", :domain false, :gridColor \"#ffffff22\", :tickColor \"#ffffff22\", :axisFont \"Lato\"}, :legend {:labelFont \"Lato\", :legendFont \"Lato\", :labelColor \"#ffffff99\", :titleColor \"#ffffff99\", :stroke \"#ffffff99\", :titleFont \"Lato\"}, :header {:labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}, :mark {:font \"Lato\"}, :title {:font \"Lato\", :subtitleFont \"Lato\", :labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}}, :grid-selected-column-css {:background-color \"#00000088\", :filter \"brightness(200%)\"}, :base-block-color-selected \"#091536\", :block-title-font-color \"#ffffff\", :base-block-color \"#0b0f2180\", :editor-rim-color \"#2b4270\", :base-block-filter-selected \"drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)\", :vega-default-color-scheme {:scheme \"pastel2\"}, :data-colors {\"float\" \"#2c728e\", \"boolean\" \"#f386bf\", \"map\" \"#00FFFF\", \"list\" \"#c32148\", \"string\" \"#7de883\", \"vector\" \"#008080\", \"keyword\" \"#add8e6\", \"rabbit-code\" \"#FC0FC0\", \"datetime\" \"#472d7b\", \"integer\" \"#d6e367\", \"unknown\" \"#c7005d\", \"date\" \"#3b528b\", \"nil\" \"#ff2147\"}, :editor-grid-selected-font-color \"#000000\", :monospaced-font \"JetBrains Mono\", :editor-grid-selected-background-color \"#8879bc\", :nivo-defaults {:font-family :theme/base-font, :labels {:text {:fill \"#ffffff\", :font-size \"16px\", :font-family :theme/base-font, :font-weight 700}}, :tooltip {:container {:background \"#000\", :color \"#ffffff\", :text {:fill \"#eeeeee\"}, :fontSize \"18px\", :borderRadius \"4px\", :boxShadow \"0 1px 2px rgba(0, 0, 0, 0.55)\", :padding \"5px 9px\"}, :basic {:whiteSpace \"pre\", :display \"flex\", :alignItems \"center\"}, :tableCell {:padding \"3px 5px\"}}, :axis {:legend {:text {:fill \"#ffffff\", :font-size \"14px\", :font-family :theme/base-font, :font-weight 700}}, :ticks {:line {:stroke \"#ffffff60\"}, :text {:fill \"#ffffff60\", :font-weight 700}}}, :grid {:line {:stroke \"#ffffff\", :strokeWidth 0, :strokeDasharray \"0 0\"}}}, :editor-outer-rim-color \"#40d6ff\", :grid-selected-font-color \"#000000\", :block-title-selected-font-color \"#ffffff\", :grid-selected-background-color \"#a3d3ff\", :grid-font-color \"#ffffff\", :canvas-background-css {:background-image \"url(images/morg1-localup.png)\", :transition \"all 0.6s ease-in-out\", :background-size \"cover\", :background-color \"#424f57\"}, :editor-font-color \"#ffffff\", :base-font \"Nova Square\", :block-tab-selected-font-color \"#c9d1ff\", :editor-background-color \"#000006\", :editor-grid-font-color \"#ffffff\"}",
   :view_names
   ":codemirror-theme :editor-param-background-color :base-block-style :vega-defaults :grid-selected-column-css :base-block-color-selected :block-title-font-color :base-block-color :editor-rim-color :base-block-filter-selected :vega-default-color-scheme :data-colors :editor-grid-selected-font-color :monospaced-font :editor-grid-selected-background-color :nivo-defaults :editor-outer-rim-color :grid-selected-font-color :block-title-selected-font-color :grid-selected-background-color :grid-font-color :canvas-background-css :editor-font-color :base-font :block-tab-selected-font-color :editor-background-color :editor-grid-font-color",
   :query_names ""},
  :tables-sys
  {:db_schema "none",
   :db_catalog nil,
   :connection_id "system-db",
   :schema_cat nil,
   :table_name "kits",
   :fields 12},
  :user-sys nil,
  :flow
  {:a-random-wow>open-fn-2
   "Wow, I've never seen so many turkeys in one place actually doing things. I'm just shocked."},
  :flows-sys
  {:flow_id "python-test-1",
   :file_path "./flows/python-test-1.edn",
   :last_modified "2024-01-03 01:46:15"},
  :files-sys
  {:file_path "./screens/winter-theme47.edn",
   :screen_name "winter-theme47",
   :blocks 8,
   :queries 5,
   :ts "2024-01-03 06:38:12"},
  :theme
  {:codemirror-theme "the-matrix",
   :editor-param-background-color "#000000",
   :base-block-style {:backdrop-filter "blur(2px) brightness(70%) "},
   :vega-defaults
   {:view {:stroke "transparent"},
    :axis
    {:domainColor "#ffffff22",
     :grid true,
     :font "Lato",
     :labelColor "#ffffff88",
     :titleFont "Lato",
     :titleColor "#ffffff99",
     :labelFont "Lato",
     :domain false,
     :gridColor "#ffffff22",
     :tickColor "#ffffff22",
     :axisFont "Lato"},
    :legend
    {:labelFont "Lato",
     :legendFont "Lato",
     :labelColor "#ffffff99",
     :titleColor "#ffffff99",
     :stroke "#ffffff99",
     :titleFont "Lato"},
    :header
    {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"},
    :mark {:font "Lato"},
    :title
    {:font "Lato",
     :subtitleFont "Lato",
     :labelFont "Lato",
     :titleFont "Lato",
     :titleColor "#ffffff99"}},
   :grid-selected-column-css
   {:background-color "#00000088", :filter "brightness(200%)"},
   :base-block-color-selected "#00030a",
   :block-title-font-color "#ffffff",
   :base-block-color "#0b0f2180",
   :editor-rim-color "#3f522b",
   :base-block-filter-selected
   "drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)",
   :vega-default-color-scheme {:scheme "pastel2"},
   :data-colors
   {"float" "#2c728e",
    "boolean" "#f386bf",
    "map" "#00FFFF",
    "list" "#c32148",
    "string" "#7de883",
    "vector" "#008080",
    "keyword" "#add8e6",
    "rabbit-code" "#FC0FC0",
    "datetime" "#472d7b",
    "integer" "#d6e367",
    "unknown" "#c7005d",
    "date" "#3b528b",
    "nil" "#ff2147"},
   :editor-grid-selected-font-color "#000000",
   :monospaced-font "JetBrains Mono",
   :editor-grid-selected-background-color "#6de069",
   :nivo-defaults
   {:font-family :theme/base-font,
    :labels
    {:text
     {:fill "#ffffff",
      :font-size "16px",
      :font-family :theme/base-font,
      :font-weight 700}},
    :tooltip
    {:container
     {:background "#000",
      :color "#ffffff",
      :text {:fill "#eeeeee"},
      :fontSize "18px",
      :borderRadius "4px",
      :boxShadow "0 1px 2px rgba(0, 0, 0, 0.55)",
      :padding "5px 9px"},
     :basic {:whiteSpace "pre", :display "flex", :alignItems "center"},
     :tableCell {:padding "3px 5px"}},
    :axis
    {:legend
     {:text
      {:fill "#ffffff",
       :font-size "14px",
       :font-family :theme/base-font,
       :font-weight 700}},
     :ticks
     {:line {:stroke "#ffffff60"},
      :text {:fill "#ffffff60", :font-weight 700}}},
    :grid
    {:line
     {:stroke "#ffffff", :strokeWidth 0, :strokeDasharray "0 0"}}},
   :editor-outer-rim-color "#87f5c2",
   :grid-selected-font-color "#000000",
   :block-title-selected-font-color "#ffffff",
   :grid-selected-background-color "#a3d3ff",
   :grid-font-color "#ffffff",
   :canvas-background-css
   {:background-image "url(images/shannon45.png)",
    :transition "all 0.6s ease-in-out",
    :background-size "cover",
    :background-color "#424f57"},
   :editor-font-color "#ffffff",
   :base-font "Nova Square",
   :block-tab-selected-font-color "#c9d1ff",
   :editor-background-color "#000006",
   :editor-grid-font-color "#ffffff"},
  :flow-fn-categories-sys {:category ":rabbit-base"},
  :connections-sys
  {:database_name "*cache-db*", :connection_id "system-db"},
  :kits-sys {:enabled [[:query-basics-1 :outliers]]}},
 :selected-flow "a-random-wow"}