{:orders
 {:panel-history-drag-31
  [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
  :fields-sys [:field_name :field_type :data_type],
  :tmp--679760891-hist-sys
  [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
  :panel-history-drag-client-name-40
  [:kp :client_name :data :pre_data :diff :diff_kp :panel_key :key :type :updated],
  :tmp-404636901-hist-sys
  [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
  :tmp-1525288419-hist-sys
  [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
  :setlists-drag-2 [:show_id :song_name :song_order :ts],
  :tables-sys
  [:db_schema :db_catalog :connection_id :schema_cat :table_name :fields],
  :panel_history
  [:kp :client_name :data :pre_data :diff :diff_kp :panel_key :key :type :updated],
  :panel_materialized_history (:query_error),
  :panel-history-drag-client-name-43 [:client_name :rowcnt],
  :flows-sys [:flow_id :file_path :last_modified],
  :tmp--1473185323-hist-sys
  [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
  :tmp-1215231624-hist-sys
  [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
  :large-bgss (:query_error),
  :tmp-453648805-hist-sys
  [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
  :tmp--1284598422-hist-sys
  [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
  :tmp--1760665799-hist-sys
  [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
  :shows (:query_error),
  :tmp-2109860946-hist-sys
  [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
  :panel_resolved_history (:query_error),
  :tour-name-drag-11 [:tour_name :rowcnt],
  :shows-drag-22 [:location :show_date :show_id :show_name :title :tour_name :ts],
  :gen-viz-342 [:rows :song_order],
  :connections-sys [:database_name :connection_id :styler_highlight_8717ss],
  :tmp--943541296-hist-sys
  [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
  :tmp-338024901-hist-sys
  [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
  :tmp--1637744073-hist-sys
  [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
  :tmp--1489849301-hist-sys
  [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
  :tmp-446910141-hist-sys
  [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
  :setlists (:query_error),
  :kit-results-sys
  [:id
   :item_hash
   :item_name
   :kit_name
   :item_type
   :item_key
   :item_idx
   :item_options
   :item_data
   :client_name
   :flow_id
   :updated]},
 :reco-preview "-1489866873",
 :sql-source
 {:panel-history-drag-31
  {:select
   [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
   :order-by [1],
   :from [[:panel_history :yy623]],
   :_last-run "03:45:49"},
  :panel-history-drag-client-name-40
  {:select [:*],
   :connection-id "history-db",
   :from [[:panel_history :nn722]],
   :_last-run "21:46:54"},
  :setlists-drag-2
  {:select [:show_id :song_name :song_order :ts],
   :from [[:setlists :hh333]],
   :_last-run "05:53:09"},
  :panel_history
  {:select [:*], :connection-id "system-db", :from [:panel_history], :limit 111},
  :panel_materialized_history
  {:select [:*],
   :connection-id "system-db",
   :from [:panel_materialized_history],
   :limit 111},
  :panel-history-drag-client-name-43
  {:select [:client_name [[:count 1] :rowcnt]],
   :from [[:panel_history :oo960]],
   :group-by [:client_name],
   :order-by [[:rowcnt :desc]],
   :_last-run "04:03:09d"},
  :large-bgss
  {:select [:*],
   :connection-id :*client-name*,
   :from
   [{:data
     (let [dir " /home/ryanr/rvbbit/frontend/resources/public/images/large"
           rel-dir "./images/large/"
           files (->>
                   (file-seq (clojure.java.io/file dir))
                   (filter (fn [x] (.isFile x)))
                   (filter
                     (fn [x]
                       (not (clojure.string/includes? (str (.getName x)) "8k"))))
                   (map (fn [x] (.getName x))))]
       (println (count files))
       (vec (for [f files] {:ffilename (str f)})))}],
   :page 3,
   :_last-run "21:01:32"},
  :shows {:select [:*], :connection-id "system-db", :from [:shows], :limit 111},
  :panel_resolved_history
  {:select [:*],
   :connection-id "system-db",
   :from [:panel_resolved_history],
   :limit 111},
  :tour-name-drag-11
  {:select [:tour_name [[:count 1] :rowcnt]],
   :from
   [[{:select [:location :show_date :show_id :show_name :title :tour_name :ts],
      :from [[:shows :pp193]]}
     :kk455]],
   :group-by [:tour_name],
   :order-by [[:rowcnt :desc]]},
  :shows-drag-22
  {:select [:location :show_date :show_id :show_name :title :tour_name :ts],
   :from [[:shows :pp193]],
   :_last-run "05:52:51"},
  :gen-viz-342
  {:select [[[[:count 1]] :rows] :song_order],
   :from
   [{:select [:show_id :song_name :song_order :ts], :from [[:setlists :hh333]]}],
   :group-by [:song_order]},
  :setlists
  {:select [:*], :connection-id "system-db", :from [:setlists], :limit 111}},
 :audio-playing? false,
 :meta
 {nil
  {:fields
   {:vec-val
    {:data-type "string",
     :distinct 11,
     :group-by? true,
     :commons {},
     :cardinality 100}},
   :rowcount 11},
  :panel-history-drag-31
  {:fields
   {:kp
    {:data-type "string",
     :distinct 121,
     :group-by? true,
     :commons
     {"[:block-3848 :queries :panel-history-drag-31]" 2,
      "[:block-5318 :base]" 2,
      "[:block-12330 :base]" 2},
     :cardinality 95},
    :key
    {:data-type "string",
     :distinct 34,
     :group-by? true,
     :commons {"" 64, ":hi" 9, ":stack" 6},
     :cardinality 26},
    :updated
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"2024-07-26 03:44:33" 121, "2024-07-26 03:46:27" 5, "2024-07-26 03:46:58" 1},
     :cardinality 2},
    :type
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {":base" 64, ":views" 41, ":queries" 22},
     :cardinality 2},
    :panel_key
    {:data-type "string",
     :distinct 60,
     :group-by? true,
     :commons {":block-204" 4, ":block-3848" 4, ":block-12330" 4},
     :cardinality 47},
    :diff_kp
    {:data-type "string",
     :distinct 85,
     :group-by? true,
     :commons
     {"([1] [0])" 13,
      "([:order-by 0 1] [:order-by 0 0] [:order-by 0] [:order-by] [:group-by 0] [:group-by] [:from 0 1] [:from 0 0] [:from 0] [:from] [:select 1 1] [:select 1 0 1] [:select 1 0 0] [:select 1 0] [:select 1] [:select 0] [:select])"
      6,
      "([1 :panels :hello-there :root 1] [1 :panels :hello-there :root 0] [1 :panels :hello-there :root] [1 :panels :hello-there :w] [1 :panels :hello-there :h] [1 :panels :hello-there] [1 :panels] [1] [0])"
      6},
     :cardinality 66},
    :client_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":beneficial-fat-badger-0" 127},
     :cardinality 0},
    :pre_data
    {:data-type "string",
     :distinct 7,
     :group-by? true,
     :commons
     {"nil" 121,
      "{:h 3, :w 6, :root [15 17], :tab \"azure oyster\", :selected-view :fabric-hop-5, :opts {:fabric-hop-5 {:model \"gpt-3.5-turbo\", :pattern \"tweet\"}}, :name \"block-5318\", :fabric {:fabric-hop-5 [\" adventures in moscow!\"]}}"
      1,
      "[:markdown \"DAMN SON! \\n ## TJPSE TOTOTES!dd!!! \\n #test \\n ###TEST\"]"
      1},
     :cardinality 5},
    :diff
    {:data-type "string",
     :distinct 119,
     :group-by? true,
     :commons
     {"[:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]" 6,
      "[:data-viewer :param/image-data]" 2,
      "[:data-viewer :param/generated-colors]" 2},
     :cardinality 93},
    :data
    {:data-type "string",
     :distinct 119,
     :group-by? true,
     :commons
     {"[:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]" 6,
      "[:data-viewer :param/image-data]" 2,
      "[:data-viewer :param/generated-colors]" 2},
     :cardinality 93}},
   :rowcount 127},
  :fields-sys
  {:fields
   {:field_name
    {:data-type "string",
     :distinct 10,
     :group-by? true,
     :commons {"data" 1, "updated" 1, "kp" 1},
     :cardinality 100},
    :field_type
    {:data-type "string",
     :distinct 2,
     :group-by? true,
     :commons {"TEXT" 9, "TIMESTAMP" 1},
     :cardinality 20},
    :data_type
    {:data-type "string",
     :distinct 2,
     :group-by? true,
     :commons {"string" 9, "datetime" 1},
     :cardinality 20}},
   :rowcount 10},
  :tmp--679760891-hist-sys
  {:fields
   {:kp
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"[:block-6161 :fabric :fabric-hop-10]" 5},
     :cardinality 20},
    :key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":fabric-hop-10" 5},
     :cardinality 20},
    :updated
    {:data-type "string",
     :distinct 5,
     :group-by? true,
     :commons
     {"2024-07-28 00:50:05" 1, "2024-07-28 01:06:08" 1, "2024-07-28 01:10:00" 1},
     :cardinality 100},
    :type
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":fabric" 5},
     :cardinality 20},
    :panel_key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":block-6161" 5},
     :cardinality 20},
    :diff_kp
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons
     {"([0 1 :new] [0 1 :new] [0 1 :old] [0 1 :old] [0 1] [0 0] [0 0] [0])" 5},
     :cardinality 20},
    :client_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":beneficial-fat-badger-0" 5},
     :cardinality 20},
    :pre_data
    {:data-type "string",
     :distinct 5,
     :group-by? true,
     :commons
     {"[\" tell a quick story about vampire rabbits\"]" 1,
      "[\" tell a quick story about vampire rabbits in a sleepy town\"]" 1,
      "[\" tell a quick story about vampire rabbits in a sleepy town..\"]" 1},
     :cardinality 100},
    :diff
    {:data-type "string",
     :distinct 5,
     :group-by? true,
     :commons
     {"[[0 {:old \" tell a quick story about vampire rabbits\", :new \" tell a quick story about vampire rabbits in a sleepy town\"}]]"
      1,
      "[[0 {:old \" tell a quick story about vampire rabbits in a sleepy town\", :new \" tell a quick story about vampire rabbits in a sleepy town..\"}]]"
      1,
      "[[0 {:old \" tell a quick story about vampire rabbits in a sleepy town..\", :new \" tell a quick story about vampire rabbits in a sleepy town.. (with no emojis and use markdown)\"}]]"
      1},
     :cardinality 100},
    :data
    {:data-type "string",
     :distinct 5,
     :group-by? true,
     :commons
     {"[\" tell a quick story about vampire rabbits in a sleepy town\"]" 1,
      "[\" tell a quick story about vampire rabbits in a sleepy town..\"]" 1,
      "[\" tell a quick story about vampire rabbits in a sleepy town.. (with no emojis and use markdown)\"]"
      1},
     :cardinality 100}},
   :rowcount 5},
  :panel-history-drag-client-name-40
  {:fields
   {:kp
    {:data-type "string",
     :distinct 307,
     :group-by? true,
     :commons
     {"[:new :block-11395 :w]" 2,
      "[:new :block-1219 :tab]" 2,
      "[:new :block-4654 :selected-view]" 2},
     :cardinality 61},
    :key
    {:data-type "string",
     :distinct 19,
     :group-by? true,
     :commons {":tab" 78, ":h" 77, ":name" 76},
     :cardinality 3},
    :updated
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"2024-07-26 21:43:40" 500},
     :cardinality 0},
    :type
    {:data-type "string",
     :distinct 39,
     :group-by? true,
     :commons {":block-4654" 18, ":block-1071" 16, ":block-3887" 15},
     :cardinality 7},
    :panel_key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":new" 500},
     :cardinality 0},
    :diff_kp
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"([:new] [:new] [:old] [:old])" 500},
     :cardinality 0},
    :client_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":sparkling-gold-butterfly-26" 500},
     :cardinality 0},
    :pre_data
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"nil" 500},
     :cardinality 0},
    :diff
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"{:old nil, :new nil}" 500},
     :cardinality 0},
    :data
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"nil" 500},
     :cardinality 0}},
   :rowcount 500},
  :tmp-404636901-hist-sys
  {:fields
   {:kp
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"[:block-7535 :views :hare-vw-3]" 1},
     :cardinality 100},
    :key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":hare-vw-3" 1},
     :cardinality 100},
    :updated
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"2024-07-28 01:05:21" 1},
     :cardinality 100},
    :type
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":views" 1},
     :cardinality 100},
    :panel_key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":block-7535" 1},
     :cardinality 100},
    :diff_kp
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons
     {"([0 1 :font-size :new] [0 1 :font-size :new] [0 1 :font-size :old] [0 1 :font-size :old] [0 1 :font-size] [0 1] [0 0] [0 0] [0])"
      1},
     :cardinality 100},
    :client_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":beneficial-fat-badger-0" 1},
     :cardinality 100},
    :pre_data
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons
     {"[:box :align :center :justify :center :style {:font-size \"33px\", :font-weight 700, :padding-top \"6px\", :padding-left \"14px\", :margin-top \"-8px\", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child \"I don't think... then you shouldn't talk, said the Hatter.\"]"
      1},
     :cardinality 100},
    :diff
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"[[6 {:font-size {:old \"33px\", :new \"44px\"}}]]" 1},
     :cardinality 100},
    :data
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons
     {"[:box :align :center :justify :center :style {:font-size \"44px\", :font-weight 700, :padding-top \"6px\", :padding-left \"14px\", :margin-top \"-8px\", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child \"I don't think... then you shouldn't talk, said the Hatter.\"]"
      1},
     :cardinality 100}},
   :rowcount 1},
  :new-clojure-10
  {:fields
   {:vec-val
    {:data-type "keyword",
     :distinct 3,
     :group-by? true,
     :commons {},
     :cardinality 100}},
   :rowcount 3},
  :tmp-1525288419-hist-sys
  {:fields
   {:kp
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"[:block-5662 :clojure :new-clojure-10]" 6},
     :cardinality 16},
    :key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":new-clojure-10" 6},
     :cardinality 16},
    :updated
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons
     {"2024-07-27 23:29:29" 1, "2024-07-27 23:39:06" 1, "2024-07-27 23:40:45" 1},
     :cardinality 100},
    :type
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":clojure" 6},
     :cardinality 16},
    :panel_key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":block-5662" 6},
     :cardinality 16},
    :diff_kp
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons
     {"([:list-diff 1 :list-diff 2 :list-diff 3 :new] [:list-diff 1 :list-diff 2 :list-diff 3 :new] [:list-diff 1 :list-diff 2 :list-diff 3 :old] [:list-diff 1 :list-diff 2 :list-diff 3 :old] [:list-diff 1 :list-diff 2 :list-diff 3] [:list-diff 1 :list-diff 2 :list-diff 1 :new] [:list-diff 1 :list-diff 2 :list-diff 1 :new] [:list-diff 1 :list-diff 2 :list-diff 1 :old] [:list-diff 1 :list-diff 2 :list-diff 1 :old] [:list-diff 1 :list-diff 2 :list-diff 1] [:list-diff 1 :list-diff 2 :list-diff] [:list-diff 1 :list-diff 2] [:list-diff 1 :list-diff] [:list-diff 1] [:list-diff])"
      1,
      "([:list-diff 1 :list-diff 2 :list-diff 1 :new] [:list-diff 1 :list-diff 2 :list-diff 1 :new] [:list-diff 1 :list-diff 2 :list-diff 1 :old] [:list-diff 1 :list-diff 2 :list-diff 1 :old] [:list-diff 1 :list-diff 2 :list-diff 1] [:list-diff 1 :list-diff 2 :list-diff] [:list-diff 1 :list-diff 2] [:list-diff 1 :list-diff] [:list-diff 1] [:list-diff])"
      1,
      "([:list-diff 1 :list-diff 2 :list-diff 7 :new] [:list-diff 1 :list-diff 2 :list-diff 7 :new] [:list-diff 1 :list-diff 2 :list-diff 7 :old] [:list-diff 1 :list-diff 2 :list-diff 7 :old] [:list-diff 1 :list-diff 2 :list-diff 7] [:list-diff 1 :list-diff 2 :list-diff 6 :new] [:list-diff 1 :list-diff 2 :list-diff 6 :new] [:list-diff 1 :list-diff 2 :list-diff 6 :old] [:list-diff 1 :list-diff 2 :list-diff 6 :old] [:list-diff 1 :list-diff 2 :list-diff 6] [:list-diff 1 :list-diff 2 :list-diff 5 :new 3] [:list-diff 1 :list-diff 2 :list-diff 5 :new 3] [:list-diff 1 :list-diff 2 :list-diff 5 :new 2] [:list-diff 1 :list-diff 2 :list-diff 5 :new 2] [:list-diff 1 :list-diff 2 :list-diff 5 :new 1] [:list-diff 1 :list-diff 2 :list-diff 5 :new 1] [:list-diff 1 :list-diff 2 :list-diff 5 :new 0] [:list-diff 1 :list-diff 2 :list-diff 5 :new 0] [:list-diff 1 :list-diff 2 :list-diff 5 :new] [:list-diff 1 :list-diff 2 :list-diff 5 :old] [:list-diff 1 :list-diff 2 :list-diff 5 :old] [:list-diff 1 :list-diff 2 :list-diff 5] [:list-diff 1 :list-diff 2 :list-diff] [:list-diff 1 :list-diff 2] [:list-diff 1 :list-diff] [:list-diff 1] [:list-diff])"
      1},
     :cardinality 100},
    :client_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":beneficial-fat-badger-0" 6},
     :cardinality 16},
    :pre_data
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons
     {"(do (let [clojure-version (clojure-version) jvm-version (System/getProperty \"java.version\")] (str \"🐇🥕 Sup!fff! Internaddldd6666d RVBBIT nREPL. Clojure \" clojure-version \" ondd \" jvm-version \" JVM techDfsfsdfDDfa\" \" 🥕🐇\")))"
      1,
      "(do (let [clojure-version (clojure-version) jvm-version (System/getProperty \"java.version\")] (str \"🐇🥕 Sup!fff! Internad  RVBBIT nREPL. Clojure \" clojure-version \" on  \" jvm-version \" JVM techDfsfsdfDDfa\" \" 🥕🐇\")))"
      1,
      "(do (let [clojure-version (clojure-version) jvm-version (System/getProperty \"java.version\")] (str \"🐇🥕 Sup!fff! Internad  RVBBIT!! nREPL. Clojure \" clojure-version \" on  \" jvm-version \" JVM techDfsfsdfDDfa\" \" 🥕🐇\")))"
      1},
     :cardinality 100},
    :diff
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons
     {"{:list-diff {1 {:list-diff {2 {:list-diff {1 {:old \"🐇🥕 Sup!fff! Internaddldd6666d RVBBIT nREPL. Clojure \", :new \"🐇🥕 Sup!fff! Internad  RVBBIT nREPL. Clojure \"}, 3 {:old \" ondd \", :new \" on  \"}}}}}}}"
      1,
      "{:list-diff {1 {:list-diff {2 {:list-diff {1 {:old \"🐇🥕 Sup!fff! Internad  RVBBIT nREPL. Clojure \", :new \"🐇🥕 Sup!fff! Internad  RVBBIT!! nREPL. Clojure \"}}}}}}}"
      1,
      "{:list-diff {1 {:list-diff {2 {:list-diff {5 {:old \" JVM techDfsfsdfDDfa\", :new (+ 9 8 7)}, 6 {:old \" 🥕🐇\", :new \" JVM techDfsfsdfDDfa\"}, 7 {:old nil, :new \" 🥕🐇\"}}}}}}}"
      1},
     :cardinality 100},
    :data
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons
     {"(do (let [clojure-version (clojure-version) jvm-version (System/getProperty \"java.version\")] (str \"🐇🥕 Sup!fff! Internad  RVBBIT nREPL. Clojure \" clojure-version \" on  \" jvm-version \" JVM techDfsfsdfDDfa\" \" 🥕🐇\")))"
      1,
      "(do (let [clojure-version (clojure-version) jvm-version (System/getProperty \"java.version\")] (str \"🐇🥕 Sup!fff! Internad  RVBBIT!! nREPL. Clojure \" clojure-version \" on  \" jvm-version \" JVM techDfsfsdfDDfa\" \" 🥕🐇\")))"
      1,
      "(do (let [clojure-version (clojure-version) jvm-version (System/getProperty \"java.version\")] (str \"🐇🥕 Sup!fff! Internad  RVBBIT!! nREPL. Clojure \" clojure-version \" on  \" jvm-version (+ 9 8 7) \" JVM techDfsfsdfDDfa\" \" 🥕🐇\")))"
      1},
     :cardinality 100}},
   :rowcount 6},
  :setlists-drag-2
  {:fields
   {:show_id
    {:data-type "string",
     :distinct 29,
     :group-by? true,
     :commons
     {"https://www.metallica.com/tour/2012-06-01-nuremberg-germany.html" 20,
      "https://www.metallica.com/tour/1993-03-31-sydney-australia.html" 20,
      "https://www.metallica.com/tour/1991-10-30-madison-wisconsin.html" 20},
     :cardinality 5},
    :song_name
    {:data-type "string",
     :distinct 78,
     :group-by? true,
     :commons {"Master of Puppets" 27, "One" 27, "Creeping Death" 26},
     :cardinality 15},
    :song_order
    {:data-type "integer",
     :distinct 20,
     :group-by? true,
     :commons {2 29, 3 29, 1 29},
     :cardinality 3},
    :ts
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"2023-09-24 19:19:12" 500},
     :cardinality 0}},
   :rowcount 500},
  :tables-sys
  {:fields
   {:db_schema
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"none" 3},
     :cardinality 33},
    :db_catalog
    {:data-type "unknown",
     :distinct 1,
     :group-by? true,
     :commons {nil 3},
     :cardinality 33},
    :connection_id
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"history-db" 3},
     :cardinality 33},
    :schema_cat
    {:data-type "unknown",
     :distinct 1,
     :group-by? false,
     :commons {nil 3},
     :cardinality 33},
    :table_name
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"panel_resolved_history" 1,
      "panel_materialized_history" 1,
      "panel_history" 1},
     :cardinality 100},
    :fields
    {:data-type "integer",
     :distinct 1,
     :group-by? false,
     :commons {11 3},
     :cardinality 33}},
   :rowcount 3},
  :gen-viz-797
  {:fields
   {:rows
    {:data-type "integer",
     :distinct 230,
     :group-by? false,
     :commons {76 5, 146 4, 116 4},
     :cardinality 72},
    :date_posted
    {:data-type "string",
     :distinct 317,
     :group-by? true,
     :commons {"2000-12-09" 1, "2010-08-30" 1, "2003-11-08" 1},
     :cardinality 100}},
   :rowcount 317},
  :panel_history {:fields {}, :rowcount 0},
  :panel_materialized_history
  {:fields
   {:query_error
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons
     {nil 1,
      "{:datasource #object[com.zaxxer.hikari.HikariDataS" 1,
      "(from database connection)" 1},
     :cardinality 100}},
   :rowcount 4},
  :panel-history-drag-client-name-43
  {:fields
   {:client_name
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons
     {":sparkling-gold-butterfly-26" 1,
      ":stellar-ivory-toad-28" 1,
      ":vibrant-rhomboidal-dog-38" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 4,
     :group-by? false,
     :commons {870 1, 955 1, 1498 1},
     :cardinality 100}},
   :rowcount 4},
  :flows-sys
  {:fields
   {:flow_id
    {:data-type "string",
     :distinct 96,
     :group-by? true,
     :commons
     {"clam-flow-851" 3, "openai-image-gen-ladder" 2, "python3-runner-v1" 1},
     :cardinality 96},
    :file_path
    {:data-type "string",
     :distinct 99,
     :group-by? true,
     :commons
     {"./flows/generated-flow-map.edn" 1,
      "./flows/stitches-math.edn" 1,
      "./flows/openai-image-gen-ladder3.edn" 1},
     :cardinality 100},
    :last_modified
    {:data-type "string",
     :distinct 34,
     :group-by? true,
     :commons
     {"2024-03-12 02:37:43" 66, "2024-06-22 18:16:16" 1, "2024-03-14 07:50:09" 1},
     :cardinality 34}},
   :rowcount 99},
  :gen-viz-94
  {:fields
   {:diff
    {:data-type "unknown",
     :distinct 1,
     :group-by? false,
     :commons {nil 1},
     :cardinality 100}},
   :rowcount 1},
  :DISTRICT-drag-37
  {:fields
   {:DISTRICT
    {:data-type "string",
     :distinct 13,
     :group-by? true,
     :commons {"E5" 1, "B2" 1, "C6" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 13,
     :group-by? false,
     :commons {35717 1, 1765 1, 23460 1},
     :cardinality 100}},
   :rowcount 13},
  :tmp--1473185323-hist-sys {:fields {}, :rowcount 0},
  :tmp-1215231624-hist-sys {:fields {}, :rowcount 0},
  :large-bgss
  {:fields
   {:query_error
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons
     {nil 1,
      "{:datasource #object[com.zaxxer.hikari.HikariDataS" 1,
      "(from database connection)" 1},
     :cardinality 100}},
   :rowcount 4},
  :tmp-453648805-hist-sys {:fields {}, :rowcount 0},
  :tmp--1284598422-hist-sys {:fields {}, :rowcount 0},
  :new-clojure-9
  {:fields
   {:vec-val
    {:data-type "string",
     :distinct 1041,
     :group-by? true,
     :commons {},
     :cardinality 100}},
   :rowcount 1041},
  :tmp--1760665799-hist-sys
  {:fields
   {:kp
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"[:block-12330 :views :hare-vw]" 2},
     :cardinality 50},
    :key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":hare-vw" 2},
     :cardinality 50},
    :updated
    {:data-type "string",
     :distinct 2,
     :group-by? true,
     :commons {"2024-07-26 03:44:33" 1, "2024-07-26 03:46:27" 1},
     :cardinality 100},
    :type
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":views" 2},
     :cardinality 50},
    :panel_key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":block-12330" 2},
     :cardinality 50},
    :diff_kp
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"([1] [0])" 2},
     :cardinality 50},
    :client_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":beneficial-fat-badger-0" 2},
     :cardinality 50},
    :pre_data
    {:data-type "string",
     :distinct 2,
     :group-by? true,
     :commons
     {"nil" 1,
      "[:markdown \"DAMN SON! \\n ## TJPSE TOTOTES!dd!!! \\n #test \\n ###TEST\"]"
      1},
     :cardinality 100},
    :diff
    {:data-type "string",
     :distinct 2,
     :group-by? true,
     :commons
     {"[:markdown \"DAMN SON! \\n ## TJPSE TOTOTES!dd!!! \\n #test \\n ###TEST\"]"
      1,
      "[nil \"DAMN SON! \\n ## TJPSE TOTOTES!dd!!! \\n #test \\n ###TEdddST\"]" 1},
     :cardinality 100},
    :data
    {:data-type "string",
     :distinct 2,
     :group-by? true,
     :commons
     {"[:markdown \"DAMN SON! \\n ## TJPSE TOTOTES!dd!!! \\n #test \\n ###TEST\"]"
      1,
      "[:markdown \"DAMN SON! \\n ## TJPSE TOTOTES!dd!!! \\n #test \\n ###TEdddST\"]"
      1},
     :cardinality 100}},
   :rowcount 2},
  :shows
  {:fields
   {:query_error
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons
     {nil 1,
      "{:datasource #object[com.zaxxer.hikari.HikariDataS" 1,
      "(from database connection)" 1},
     :cardinality 100}},
   :rowcount 4},
  :offenses-drag-24
  {:fields
   {:SHOOTING
    {:data-type "unknown",
     :distinct 1,
     :group-by? true,
     :commons {nil 500},
     :cardinality 0},
    :DISTRICT
    {:data-type "string",
     :distinct 13,
     :group-by? true,
     :commons {"C11" 82, "B2" 75, "B3" 49},
     :cardinality 2},
    :INCIDENT_NUMBER
    {:data-type "string",
     :distinct 454,
     :group-by? true,
     :commons {"I182070397" 5, "I182070779" 4, "I182070889" 3},
     :cardinality 90},
    :OFFENSE_DESCRIPTION
    {:data-type "string",
     :distinct 89,
     :group-by? true,
     :commons
     {"SICK/INJURED/MEDICAL - PERSON" 43,
      "VERBAL DISPUTE" 34,
      "INVESTIGATE PERSON" 33},
     :cardinality 17},
    :DAY_OF_WEEK
    {:data-type "string",
     :distinct 7,
     :group-by? true,
     :commons {"0001-01-07" 228, "0001-01-08" 178, "0001-01-06" 75},
     :cardinality 1},
    :MONTH
    {:data-type "integer",
     :distinct 4,
     :group-by? true,
     :commons {9 477, 8 21, 7 1},
     :cardinality 0},
    :YEAR
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {2018 500},
     :cardinality 0},
    :HOUR
    {:data-type "integer",
     :distinct 24,
     :group-by? true,
     :commons {18 45, 14 33, 20 32},
     :cardinality 4},
    :STREET
    {:data-type "string",
     :distinct 275,
     :group-by? true,
     :commons {nil 41, "WASHINGTON ST" 20, "HUNTINGTON AVE" 12},
     :cardinality 55},
    :OFFENSE_CODE_GROUP
    {:data-type "string",
     :distinct 41,
     :group-by? true,
     :commons
     {"Motor Vehicle Accident Response" 69, "Medical Assistance" 50, "Larceny" 41},
     :cardinality 8},
    :UCR_PART
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons {"Part Three" 265, "Part Two" 140, "Part One" 93},
     :cardinality 0},
    :Long
    {:data-type "float",
     :distinct 413,
     :group-by? true,
     :commons {-1 6, -71.1136693 5, nil 5},
     :cardinality 82},
    :REPORTING_AREA
    {:data-type "integer",
     :distinct 282,
     :group-by? true,
     :commons {nil 42, 519 6, 177 5},
     :cardinality 56},
    :Location
    {:data-type "string",
     :distinct 413,
     :group-by? true,
     :commons
     {"(-1.00000000, -1.00000000)" 6,
      "(0.00000000, 0.00000000)" 5,
      "(42.24635332, -71.11366930)" 5},
     :cardinality 82},
    :OFFENSE_CODE
    {:data-type "integer",
     :distinct 89,
     :group-by? true,
     :commons {3006 43, 3301 34, 3115 33},
     :cardinality 17},
    :Lat
    {:data-type "float",
     :distinct 413,
     :group-by? true,
     :commons {-1 6, 42.24635332 5, nil 5},
     :cardinality 82},
    :OCCURRED_ON_DATE
    {:data-type "string",
     :distinct 404,
     :group-by? true,
     :commons
     {"2018-09-02 00:00:00.000000" 5,
      "2018-09-03 10:00:00.000000" 5,
      "2018-09-01 17:03:00.000000" 5},
     :cardinality 80}},
   :rowcount 500},
  :fabric-hop-10
  {:fields
   {:vec-val
    {:data-type "string",
     :distinct 7,
     :group-by? true,
     :commons {},
     :cardinality 100}},
   :rowcount 7},
  :fabric-hop-11
  {:fields
   {:vec-val
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {},
     :cardinality 100}},
   :rowcount 3},
  :virtual-view
  {:fields
   {:vec-val
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {},
     :cardinality 100}},
   :rowcount 1},
  :tmp-2109860946-hist-sys
  {:fields
   {:kp
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"[:block-2524 :fabric :fabric-hop-8]" 5},
     :cardinality 20},
    :key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":fabric-hop-8" 5},
     :cardinality 20},
    :updated
    {:data-type "string",
     :distinct 5,
     :group-by? true,
     :commons
     {"2024-07-28 00:26:59" 1, "2024-07-28 00:28:42" 1, "2024-07-28 00:32:26" 1},
     :cardinality 100},
    :type
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":fabric" 5},
     :cardinality 20},
    :panel_key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":block-2524" 5},
     :cardinality 20},
    :diff_kp
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons
     {"([0 1 :new] [0 1 :new] [0 1 :old] [0 1 :old] [0 1] [0 0] [0 0] [0])" 5},
     :cardinality 20},
    :client_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":beneficial-fat-badger-0" 5},
     :cardinality 20},
    :pre_data
    {:data-type "string",
     :distinct 5,
     :group-by? true,
     :commons
     {"[\"tell another edgy cyberpunk joke without emojis please...\"]" 1,
      "[\"tell another edgy cyberpunk joke without emojis please and make it spicy!\"]"
      1,
      "[\"tell another edgy cyberpunk joke without emojis please and make it spicy!!\"]"
      1},
     :cardinality 100},
    :diff
    {:data-type "string",
     :distinct 5,
     :group-by? true,
     :commons
     {"[[0 {:old \"tell another edgy cyberpunk joke without emojis please...\", :new \"tell another edgy cyberpunk joke without emojis please and make it spicy!\"}]]"
      1,
      "[[0 {:old \"tell another edgy cyberpunk joke without emojis please and make it spicy!\", :new \"tell another edgy cyberpunk joke without emojis please and make it spicy!!\"}]]"
      1,
      "[[0 {:old \"tell another edgy cyberpunk joke without emojis please and make it spicy!!\", :new \"tell another edgy cyberpunk joke without emojis please and make it spicy plaese!!\"}]]"
      1},
     :cardinality 100},
    :data
    {:data-type "string",
     :distinct 5,
     :group-by? true,
     :commons
     {"[\"tell another edgy cyberpunk joke without emojis please and make it spicy!\"]"
      1,
      "[\"tell another edgy cyberpunk joke without emojis please and make it spicy!!\"]"
      1,
      "[\"tell another edgy cyberpunk joke without emojis please and make it spicy plaese!!\"]"
      1},
     :cardinality 100}},
   :rowcount 5},
  :rowcnt-drag-2
  {:fields
   {:rowcnt_sum
    {:data-type "integer",
     :distinct 1,
     :group-by? false,
     :commons {80332 1},
     :cardinality 100}},
   :rowcount 1},
  :panel_resolved_history
  {:fields
   {:query_error
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons
     {nil 1,
      "{:datasource #object[com.zaxxer.hikari.HikariDataS" 1,
      "(from database connection)" 1},
     :cardinality 100}},
   :rowcount 4},
  :tour-name-drag-11
  {:fields
   {:tour_name
    {:data-type "string",
     :distinct 32,
     :group-by? true,
     :commons
     {"Kill 'Em All for One" 1,
      "Guns N’ Roses/Metallica Stadium Tour" 1,
      "Nowhere Else to Roam" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 27,
     :group-by? false,
     :commons {20 4, 26 2, 12 2},
     :cardinality 84}},
   :rowcount 32},
  :offenses-drag-26
  {:fields
   {:SHOOTING
    {:data-type "unknown",
     :distinct 1,
     :group-by? true,
     :commons {nil 500},
     :cardinality 0},
    :DISTRICT
    {:data-type "string",
     :distinct 13,
     :group-by? true,
     :commons {"C11" 82, "B2" 75, "B3" 49},
     :cardinality 2},
    :INCIDENT_NUMBER
    {:data-type "string",
     :distinct 454,
     :group-by? true,
     :commons {"I182070397" 5, "I182070779" 4, "I182070889" 3},
     :cardinality 90},
    :OFFENSE_DESCRIPTION
    {:data-type "string",
     :distinct 89,
     :group-by? true,
     :commons
     {"SICK/INJURED/MEDICAL - PERSON" 43,
      "VERBAL DISPUTE" 34,
      "INVESTIGATE PERSON" 33},
     :cardinality 17},
    :DAY_OF_WEEK
    {:data-type "string",
     :distinct 7,
     :group-by? true,
     :commons {"0001-01-07" 228, "0001-01-08" 178, "0001-01-06" 75},
     :cardinality 1},
    :MONTH
    {:data-type "integer",
     :distinct 4,
     :group-by? true,
     :commons {9 477, 8 21, 7 1},
     :cardinality 0},
    :YEAR
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {2018 500},
     :cardinality 0},
    :HOUR
    {:data-type "integer",
     :distinct 24,
     :group-by? true,
     :commons {18 45, 14 33, 20 32},
     :cardinality 4},
    :STREET
    {:data-type "string",
     :distinct 275,
     :group-by? true,
     :commons {nil 41, "WASHINGTON ST" 20, "HUNTINGTON AVE" 12},
     :cardinality 55},
    :OFFENSE_CODE_GROUP
    {:data-type "string",
     :distinct 41,
     :group-by? true,
     :commons
     {"Motor Vehicle Accident Response" 69, "Medical Assistance" 50, "Larceny" 41},
     :cardinality 8},
    :UCR_PART
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons {"Part Three" 265, "Part Two" 140, "Part One" 93},
     :cardinality 0},
    :Long
    {:data-type "float",
     :distinct 413,
     :group-by? true,
     :commons {-1 6, -71.1136693 5, nil 5},
     :cardinality 82},
    :REPORTING_AREA
    {:data-type "integer",
     :distinct 282,
     :group-by? true,
     :commons {nil 42, 519 6, 177 5},
     :cardinality 56},
    :Location
    {:data-type "string",
     :distinct 413,
     :group-by? true,
     :commons
     {"(-1.00000000, -1.00000000)" 6,
      "(0.00000000, 0.00000000)" 5,
      "(42.24635332, -71.11366930)" 5},
     :cardinality 82},
    :OFFENSE_CODE
    {:data-type "integer",
     :distinct 89,
     :group-by? true,
     :commons {3006 43, 3301 34, 3115 33},
     :cardinality 17},
    :Lat
    {:data-type "float",
     :distinct 413,
     :group-by? true,
     :commons {-1 6, 42.24635332 5, nil 5},
     :cardinality 82},
    :OCCURRED_ON_DATE
    {:data-type "string",
     :distinct 404,
     :group-by? true,
     :commons
     {"2018-09-02 00:00:00.000000" 5,
      "2018-09-03 10:00:00.000000" 5,
      "2018-09-01 17:03:00.000000" 5},
     :cardinality 80}},
   :rowcount 500},
  :gen-viz-828
  {:fields
   {:agg
    {:data-type "integer",
     :distinct 230,
     :group-by? false,
     :commons {76 5, 146 4, 116 4},
     :cardinality 72},
    :date_posted
    {:data-type "string",
     :distinct 317,
     :group-by? true,
     :commons {"2000-12-09" 1, "2010-08-30" 1, "2003-11-08" 1},
     :cardinality 100}},
   :rowcount 317},
  :shows-drag-22
  {:fields
   {:location
    {:data-type "string",
     :distinct 274,
     :group-by? true,
     :commons {"San Francisco, CA" 15, "Seattle, WA" 7, "Dallas, TX" 7},
     :cardinality 54},
    :show_date
    {:data-type "string",
     :distinct 500,
     :group-by? true,
     :commons {"1983-08-24" 1, "1998-04-07" 1, "1992-06-25" 1},
     :cardinality 100},
    :show_id
    {:data-type "string",
     :distinct 500,
     :group-by? true,
     :commons
     {"https://www.metallica.com/tour/1983-08-24-austin-texas.html" 1,
      "https://www.metallica.com/tour/1989-06-18-grand-forks-north-dakota.html" 1,
      "https://www.metallica.com/tour/2022-07-03-bilbao-spain.html" 1},
     :cardinality 100},
    :show_name
    {:data-type "string",
     :distinct 406,
     :group-by? true,
     :commons {"Sonisphere" 7, "Lollapalooza" 6, "Monsters of Rock" 6},
     :cardinality 81},
    :title
    {:data-type "string",
     :distinct 500,
     :group-by? true,
     :commons
     {"2010-09-22 Christchurch, New Zealand" 1,
      "1991-10-30 Madison, WI" 1,
      "2012-06-09 Castle Donington, England" 1},
     :cardinality 100},
    :tour_name
    {:data-type "string",
     :distinct 31,
     :group-by? true,
     :commons {nil 103, "Damaged Justice" 55, "Wherever We May Roam" 54},
     :cardinality 6},
    :ts
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"2023-09-24 19:19:11" 500},
     :cardinality 0}},
   :rowcount 500},
  :fabric-hop-9
  {:fields
   {:vec-val
    {:data-type "string",
     :distinct 9,
     :group-by? true,
     :commons {},
     :cardinality 100}},
   :rowcount 9},
  :gen-viz-84
  {:fields
   {:rows
    {:data-type "integer",
     :distinct 6,
     :group-by? false,
     :commons {65114 1, 1905 1, 105 1},
     :cardinality 100},
    :country
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons {"us" 1, "gb" 1, "de" 1},
     :cardinality 100}},
   :rowcount 6},
  :gen-viz-342
  {:fields
   {:rows
    {:data-type "integer",
     :distinct 25,
     :group-by? false,
     :commons {1938 1, 1479 1, 469 1},
     :cardinality 100},
    :song_order
    {:data-type "integer",
     :distinct 25,
     :group-by? true,
     :commons {8 1, 18 1, 10 1},
     :cardinality 100}},
   :rowcount 25},
  :connections-sys
  {:fields
   {:database_name
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {"*cache-db*" 5, "SQLite" 3, "*csv-import-db*" 1},
     :cardinality 33},
    :connection_id
    {:data-type "string",
     :distinct 9,
     :group-by? true,
     :commons {"history-db" 1, "imported" 1, "bigfoot-ufos" 1},
     :cardinality 100},
    :styler_highlight_8717ss
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {1 9},
     :cardinality 11}},
   :rowcount 9},
  :ufo-sightings-drag-9
  {:fields
   {:duration_seconds_int
    {:data-type "integer",
     :distinct 54,
     :group-by? true,
     :commons {120 53, 180 45, 300 45},
     :cardinality 10},
    :city
    {:data-type "string",
     :distinct 157,
     :group-by? true,
     :commons {"akron" 41, "abilene" 32, "aberdeen" 19},
     :cardinality 31},
    :date_posted
    {:data-type "string",
     :distinct 194,
     :group-by? true,
     :commons {"2001-08-05" 20, "2008-10-31" 12, "2009-12-12" 11},
     :cardinality 38},
    :longitude
    {:data-type "float",
     :distinct 178,
     :group-by? true,
     :commons {-81.5191667 41, 138.598633 37, -99.7327778 30},
     :cardinality 35},
    :state
    {:data-type "string",
     :distinct 45,
     :group-by? true,
     :commons {nil 120, "oh" 48, "tx" 39},
     :cardinality 9},
    :duration_seconds
    {:data-type "string",
     :distinct 54,
     :group-by? true,
     :commons {"120" 53, "300" 45, "180" 45},
     :cardinality 10},
    :duration_hours
    {:data-type "string",
     :distinct 225,
     :group-by? true,
     :commons {"2 minutes" 21, "3 minutes" 18, "1 minute" 18},
     :cardinality 44},
    :shape
    {:data-type "string",
     :distinct 22,
     :group-by? true,
     :commons {"light" 103, "triangle" 62, "fireball" 49},
     :cardinality 4},
    :datetime
    {:data-type "string",
     :distinct 492,
     :group-by? true,
     :commons
     {"1989-06-04 22:30:00.000000" 3,
      "2010-05-29 21:50:00.000000" 2,
      "2006-11-30 12:17:00.000000" 2},
     :cardinality 98},
    :latitude
    {:data-type "string",
     :distinct 178,
     :group-by? true,
     :commons {"41.0813889" 41, "-34.928661" 37, "32.4486111" 30},
     :cardinality 35},
    :country
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons {"us" 288, nil 113, "au" 37},
     :cardinality 1}},
   :rowcount 500},
  :tmp--943541296-hist-sys {:fields {}, :rowcount 0},
  :tmp-338024901-hist-sys
  {:fields
   {:kp
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"[:block-3848 :queries :panel-history-drag-31]" 3},
     :cardinality 33},
    :key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":panel-history-drag-31" 3},
     :cardinality 33},
    :updated
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"2024-07-26 03:44:33" 1, "2024-07-26 03:46:27" 1, "2024-07-26 03:49:42" 1},
     :cardinality 100},
    :type
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":queries" 3},
     :cardinality 33},
    :panel_key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":block-3848" 3},
     :cardinality 33},
    :diff_kp
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"([:_last-run] [:from 0 1] [:from 0 0] [:from 0] [:from] [:select 9] [:select 8] [:select 7] [:select 6] [:select 5] [:select 4] [:select 3] [:select 2] [:select 1] [:select 0] [:select])"
      1,
      "([:_last-run])" 1,
      "([:order-by 0] [:order-by])" 1},
     :cardinality 100},
    :client_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":beneficial-fat-badger-0" 3},
     :cardinality 33},
    :pre_data
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"nil" 1,
      "{:select [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated], :from [[:panel_history :yy623]], :_last-run \"03:dd:27\"}"
      1,
      "{:select [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated], :from [[:panel_history :yy623]], :_last-run \"03:45:49\"}"
      1},
     :cardinality 100},
    :diff
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"{:select [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated], :from [[:panel_history :yy623]], :_last-run \"03:dd:27\"}"
      1,
      "{:_last-run \"03:45:49\"}" 1,
      "{:order-by [1]}" 1},
     :cardinality 100},
    :data
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"{:select [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated], :from [[:panel_history :yy623]], :_last-run \"03:dd:27\"}"
      1,
      "{:select [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated], :from [[:panel_history :yy623]], :_last-run \"03:45:49\"}"
      1,
      "{:select [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated], :order-by [1], :from [[:panel_history :yy623]], :_last-run \"03:45:49\"}"
      1},
     :cardinality 100}},
   :rowcount 3},
  :duration-hours-drag-43
  {:fields
   {:duration_hours
    {:data-type "string",
     :distinct 500,
     :group-by? true,
     :commons {"30 min." 1, "3 days" 1, "5-7 min" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 162,
     :group-by? false,
     :commons {12 29, 13 23, 14 22},
     :cardinality 32}},
   :rowcount 500},
  :city-drag-26
  {:fields
   {:city
    {:data-type "string",
     :distinct 500,
     :group-by? true,
     :commons {"ottawa (canada)" 1, "burlington (canada)" 1, "cary" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 118,
     :group-by? false,
     :commons {27 35, 26 24, 29 23},
     :cardinality 23}},
   :rowcount 500},
  :tmp--1637744073-hist-sys {:fields {}, :rowcount 0},
  :reco-counts {:fields {}, :rowcount 0},
  :tmp--1489849301-hist-sys
  {:fields
   {:kp
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"[:block-10011 :fabric :fabric-hop-12]" 6},
     :cardinality 16},
    :key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":fabric-hop-12" 6},
     :cardinality 16},
    :updated
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons
     {"2024-07-28 01:26:22" 1, "2024-07-28 01:27:04" 1, "2024-07-28 01:29:21" 1},
     :cardinality 100},
    :type
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":fabric" 6},
     :cardinality 16},
    :panel_key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":block-10011" 6},
     :cardinality 16},
    :diff_kp
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons
     {"([0 1 :new] [0 1 :new] [0 1 :old] [0 1 :old] [0 1] [0 0] [0 0] [0])" 6},
     :cardinality 16},
    :client_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":beneficial-fat-badger-0" 6},
     :cardinality 16},
    :pre_data
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons
     {"[\" tell a horror story about a dishwasher (no emojits)...\"]" 1,
      "[\" tell a horror story about a dishwasher (no emojits).....\"]" 1,
      "[\" tell a horror story about a dishwasher (no emojits)!.\"]" 1},
     :cardinality 100},
    :diff
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons
     {"[[0 {:old \" tell a horror story about a dishwasher (no emojits)...\", :new \" tell a horror story about a dishwasher (no emojits).....\"}]]"
      1,
      "[[0 {:old \" tell a horror story about a dishwasher (no emojits).....\", :new \" tell a horror story about a dishwasher (no emojits)!.\"}]]"
      1,
      "[[0 {:old \" tell a horror story about a dishwasher (no emojits)!.\", :new \" tell a short horror story about a dishwasher (no emojits)!.\"}]]"
      1},
     :cardinality 100},
    :data
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons
     {"[\" tell a horror story about a dishwasher (no emojits).....\"]" 1,
      "[\" tell a horror story about a dishwasher (no emojits)!.\"]" 1,
      "[\" tell a short horror story about a dishwasher (no emojits)!.\"]" 1},
     :cardinality 100}},
   :rowcount 6},
  :tmp-446910141-hist-sys
  {:fields
   {:kp
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"[:block-646 :fabric :fabric-hop-11]" 3},
     :cardinality 33},
    :key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":fabric-hop-11" 3},
     :cardinality 33},
    :updated
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"2024-07-28 00:57:22" 1, "2024-07-28 00:59:23" 1, "2024-07-28 01:02:27" 1},
     :cardinality 100},
    :type
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":fabric" 3},
     :cardinality 33},
    :panel_key
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":block-646" 3},
     :cardinality 33},
    :diff_kp
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons
     {"([0 1 :new] [0 1 :new] [0 1 :old] [0 1 :old] [0 1] [0 0] [0 0] [0])" 3},
     :cardinality 33},
    :client_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":beneficial-fat-badger-0" 3},
     :cardinality 33},
    :pre_data
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"[\"  tell a quick story about vampire rabbits in a sleepy little town\"]" 1,
      "[\"  tell a quick story about vampire rabbits in a sleepy little town.,..\"]"
      1,
      "[\"  tell a quick story about vampire rabbits in a sleepy little town in autumn.,..\"]"
      1},
     :cardinality 100},
    :diff
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"[[0 {:old \"  tell a quick story about vampire rabbits in a sleepy little town\", :new \"  tell a quick story about vampire rabbits in a sleepy little town.,..\"}]]"
      1,
      "[[0 {:old \"  tell a quick story about vampire rabbits in a sleepy little town.,..\", :new \"  tell a quick story about vampire rabbits in a sleepy little town in autumn.,..\"}]]"
      1,
      "[[0 {:old \"  tell a quick story about vampire rabbits in a sleepy little town in autumn.,..\", :new \"  tell a quick story about vampire rabbits in a sleepy little town in autumn in new england\"}]]"
      1},
     :cardinality 100},
    :data
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"[\"  tell a quick story about vampire rabbits in a sleepy little town.,..\"]"
      1,
      "[\"  tell a quick story about vampire rabbits in a sleepy little town in autumn.,..\"]"
      1,
      "[\"  tell a quick story about vampire rabbits in a sleepy little town in autumn in new england\"]"
      1},
     :cardinality 100}},
   :rowcount 3},
  :fabric-hop-8
  {:fields
   {:vec-val
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {},
     :cardinality 100}},
   :rowcount 3},
  :state-drag-3
  {:fields
   {:state
    {:data-type "string",
     :distinct 68,
     :group-by? true,
     :commons {"nd" 1, "az" 1, "in" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 68,
     :group-by? false,
     :commons {183 1, 968 1, 633 1},
     :cardinality 100}},
   :rowcount 68},
  :shape-drag-7
  {:fields
   {:shape
    {:data-type "string",
     :distinct 30,
     :group-by? true,
     :commons {"formation" 1, "cone" 1, "rectangle" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 25,
     :group-by? false,
     :commons {1 5, 2 2, 1283 1},
     :cardinality 83}},
   :rowcount 30},
  :setlists
  {:fields
   {:query_error
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons
     {nil 1,
      "{:datasource #object[com.zaxxer.hikari.HikariDataS" 1,
      "(from database connection)" 1},
     :cardinality 100}},
   :rowcount 4},
  :fabric-hop-12
  {:fields
   {:vec-val
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {},
     :cardinality 100}},
   :rowcount 1},
  :kit-results-sys {:fields {}, :rowcount 0}},
 :default-col-widths
 {:virtual-panel
  {:kick-886683213 ##Inf, :kick-1209586950 ##Inf, :kick-102013411 ##Inf},
  :block-198 {:setlists-drag-2 102},
  :block-760
  {:panel-history-drag-client-name-43-hist-25220258741 ##Inf,
   :panel-history-drag-client-name-43-hist-116-1164804289 230,
   :panel-history-drag-client-name-43-hist-58-710381691 205,
   :panel-history-drag-client-name-43-hist-95220258741 230,
   :panel-history-drag-client-name-43-hist-55316142108 230,
   :panel-history-drag-client-name-43-hist-5316142108 230,
   :panel-history-drag-client-name-43-hist-35-1164804289 230,
   :panel-history-drag-client-name-43 230,
   :panel-history-drag-client-name-43-hist-69316142108 ##Inf,
   :panel-history-drag-client-name-43-hist-591767058264 ##Inf,
   :panel-history-drag-client-name-43-hist-68220258741 230,
   :panel-history-drag-client-name-43-hist-95-710381691 205,
   :panel-history-drag-client-name-43-hist-76-1164804289 ##Inf,
   :panel-history-drag-client-name-43-hist-119-1164804289 ##Inf,
   :panel-history-drag-client-name-43-hist-74-1164804289 ##Inf,
   :panel-history-drag-client-name-43-hist-39-1164804289 230,
   :panel-history-drag-client-name-43-hist-11-1164804289 230,
   :panel-history-drag-client-name-43-hist-24316142108 230,
   :panel-history-drag-client-name-43-hist-58316142108 ##Inf,
   :panel-history-drag-client-name-43-hist-48220258741 230,
   :panel-history-drag-client-name-43-hist-110-1164804289 230,
   :panel-history-drag-client-name-43-hist-11316142108 230,
   :panel-history-drag-client-name-43-hist-29316142108 230,
   :panel-history-drag-client-name-43-hist-641767058264 205,
   :panel-history-drag-client-name-43-hist-621767058264 230,
   :panel-history-drag-client-name-43-hist-80-1164804289 230,
   :panel-history-drag-client-name-43-hist-102-710381691 ##Inf,
   :panel-history-drag-client-name-43-hist-6-710381691 230,
   :panel-history-drag-client-name-43-hist-121220258741 ##Inf,
   :panel-history-drag-client-name-43-hist-116316142108 ##Inf,
   :panel-history-drag-client-name-43-hist-23316142108 ##Inf,
   :panel-history-drag-client-name-43-hist-84316142108 230,
   :panel-history-drag-client-name-43-hist-60-1164804289 ##Inf},
  :block-3848
  {:panel-history-drag-31 100,
   :panel-history-drag-31-hist-64940932387 106,
   :panel-history-drag-31-hist-120940932387 106,
   :panel-history-drag-31-hist-105940932387 106,
   :panel-history-drag-31-hist-77924154399 106,
   :panel-history-drag-31-hist-1091206207988 106},
  :block-2964 {:panel-history-drag-11 ##Inf},
  :block-8963 {:shows-drag-22 108},
  :block-10950 {:panel-materialized-history-drag-client-name-29 ##Inf},
  :system-connections-list* {:connections-sys 176},
  :block-6308 {:tour-name-drag-11 180},
  :block-9929
  {:panel-history-drag-client-name-40-hist-97-822696584 100,
   :panel-history-drag-client-name-40 100,
   :panel-history-drag-client-name-40-hist-122-581671041 100,
   :panel-history-drag-client-name-40-hist-30-581671041 ##Inf,
   :panel-history-drag-client-name-40-hist-84-581671041 100,
   :panel-history-drag-client-name-40-hist-85-581671041 100,
   :panel-history-drag-client-name-40-hist-120-581671041 ##Inf,
   :panel-history-drag-client-name-40-hist-62-581671041 100,
   :panel-history-drag-client-name-40-hist-21-581671041 100,
   :panel-history-drag-client-name-40-hist-12-581671041 100,
   :panel-history-drag-client-name-40-hist-0-822696584 ##Inf,
   :panel-history-drag-client-name-40-hist-20-822696584 ##Inf},
  :system-fields-list* {:fields-sys 226},
  :block-10069 {:panel-resolved-history-drag-client-name-18 ##Inf},
  :block-2361 {:large-bgss 311, :new-clojure-9 311},
  :system-tables-list* {:tables-sys 178}},
 :runstream-drops nil,
 :tabs
 ["through the rabbit hole and out the other side"
  "sapphire ape"
  "fat zebra"
  "star-shaped wallaby"
  "globular koala"
  "azure oyster"
  "fat hawk"
  "baby-blue duck"
  "octohedral snake"],
 :selected-cols nil,
 :server
 {:settings
  {:harvest-on-boot? true,
   :default "./screens/looking-glass-redux.edn",
   :new-block-rand
   ["Why, sometimes I've believed as many as six impossible things before breakfast."
    "Imagination is the only weapon in the war against reality."
    "It's no use going back to yesterday, because I was a different person then."
    "Who in the world am I? Ah, that's the great puzzle."
    "Curiouser and curiouser!"
    "If you don't know where you are going any road can take you there."
    "We're all mad here."
    "I can't go back to yesterday because I was a different person then."
    "It's always tea-time."
    "Begin at the beginning and go on till you come to the end; then stop."
    "I knew who I was this morning, but I've changed a few times since then."
    "How long is forever? Sometimes, just one second."
    "If everybody minded their own business, the world would go around a great deal faster than it does."
    "I don't think... then you shouldn't talk, said the Hatter."
    "Oh, how I wish I could shut up like a telescope! I think I could, if I only knew how to begin."
    "You're entirely bonkers. But I'll tell you a secret... all the best people are."
    "It was much pleasanter at home, when one wasn't always growing larger and smaller."
    "I wonder if I've been changed in the night. Let me think. Was I the same when I got up this morning?"
    "Have I gone mad? I'm afraid so, but let me tell you something, the best people usually are."
    "Well, I never heard it before, but it sounds uncommon nonsense."
    "Why, sometimes I've believed as many as six impossible things before breakfast."
    "Imagination is the only weapon in the war against reality."
    "Who in the world am I? Ah, that's the great puzzle."
    "We're all mad here."
    "How long is forever? Sometimes, just one second."
    "The world is full of obvious things which nobody by any chance ever observes."
    "Reality is that which, when you stop believing in it, doesn't go away."
    "The sky above the port was the color of television, tuned to a dead channel."
    "Information wants to be free."
    "The future is already here – it's just not evenly distributed."
    "He had a chip in his head, an interface jack that allowed him to plug his brain directly into the console."
    "The 'Net is a waste of time, and that's exactly what's right about it."
    "Cyberspace. A consensual hallucination experienced daily by billions of legitimate operators, in every nation."
    "The street finds its own uses for things."
    "Accelerated world. Accelerated nervous system to go with it."
    "The future has arrived — it's just not evenly distributed yet."
    "It's not enough to be able to pick up a sword. You have to know which end to poke into the enemy."
    "When you want to know how things really work, study them when they're coming apart."
    "The human sensory system is a lot more complex and weird than most people realize."
    "Time moves in one direction, memory in another."
    "The only thing that keeps you sane is to think that it's all a bad dream."
    "We're an information economy. They teach you that in school. What they don't tell you is that it's impossible to move, to live, to operate at any level without leaving traces, bits, seemingly meaningless fragments of personal information."
    "We monitor many frequencies. We listen always. Came a voice, out of the babel of tongues, speaking to us. It played us a mighty dub."
    "Secrets are not the same as surprises."
    "Neuromancer. The lane to the land of the dead."],
   :eleven-labs-api-key nil,
   :modes
   {:terminal [:terminal :*data],
    :markdown [:markdown :*data],
    :rowset [:honeycomb {:select [:*], :from {:data :*data}} 11 9],
    :pre
    [:pre
     {:style
      {:color :theme/editor-outer-rim-color,
       :background-color "#00000000",
       :border "none",
       :text-shadow "4px 4px 4px #00000088",
       :font-size "17px",
       :font-family :theme/monospaced-font}}
     [:string3 :*data]],
    :edn [:edn :*data],
    :clover [:box :child :*data],
    :pretty [:pretty-box :*data],
    :text [:console :*data],
    :data [:data-viewer :*data]},
   :kits {},
   :clover-templates
   {:color-theft
    {:args [:*input],
     :body
     [:data-viewer [:run-solver [:get-my-colors {:input-image-path :*input}]]]},
    :pretty-box
    {:args [:*input],
     :body
     [:box
      :size
      "auto"
      :align
      :center
      :justify
      :center
      :style
      {:color :theme/editor-outer-rim-color,
       :font-size [:auto-size-px [:string3 :*input]]}
      :child
      [:string3 :*input]]},
    :clj
    {:args [:code],
     :body
     [:run-solver
      {:signal false, :cache? false, :type :clojure, :input-map {}, :data :code}]},
    :clj2
    {:args [:code],
     :body
     [:run-solver
      {:signal false, :cache? false, :type :clojure2, :input-map {}, :data :code}]},
    :cheese-burger
    {:args [:x],
     :body
     [:box
      :style
      {:color "yellow", :font-size "23px"}
      :child
      [:string3 :x "CHEESEBURGER!"]]}},
   :eleven-labs-default-voice-name "Not OG Buffy",
   :debug-level 1,
   :screens
   ["GGGeat-ochre-mole-exiled-from-abyssal-plain"
    "SSSSSSuccessful-oval-sea-urchin-of-mountain-range"
    "SSuccessful-oval-sea-urchin-of-mountain-range"
    "aaa-run-amok"
    "aaaaah-esday-the-day"
    "aaaaah-wednesday-the-day"
    "aaaah-wednesday-the-day"
    "alarm-clock-tv"
    "alarm-clock1"
    "alarm-clock2"
    "alarm-clock22"
    "alarm-clock23"
    "alice-puzzle-1"
    "asdasdasdasd"
    "autumn-theme"
    "battle-mage"
    "bigfoot-snapshots"
    "bigfoot-snapshots2"
    "bigfoot-snapshots3"
    "blackberries"
    "blackberries2"
    "blackberries3"
    "blackberries3-narrow"
    "blackberries3-narrow2"
    "blank-blue"
    "blank-sizzle"
    "blank-sizzle2"
    "blue-pines"
    "boston-test-10-3-23"
    "broken-jacket"
    "bunch of bullshit"
    "bunch of bullshit2"
    "bunch of bullshit4"
    "caliope"
    "calliope"
    "canvas-scrubber-test1"
    "capecod-viking"
    "chaos simple"
    "chaos-views"
    "chompers"
    "claude-testing2"
    "clean-grey-defaults"
    "code-data-literal-stonks-test"
    "conifer-boughs"
    "counting-lord-of-the-woods"
    "crazy-alice"
    "dark-crested-jackelope"
    "data-literals-test-sunday"
    "data-literals-test-sundaydd"
    "demo-dark-pumpkin-bkgrd-sept23"
    "demo-light-bkgrd-sept23"
    "demo-lime-green-slime"
    "desktops-and-broomsticks"
    "duality-of-lepus"
    "duality-of-lepus33"
    "error-monitor"
    "error-monitor-vanessa"
    "error-monitor-vanessa2"
    "error-monitor-vanessa3"
    "error-monitor-vanessa4"
    "error-monitor-vanessa5"
    "evil-main-street"
    "fake-books-1"
    "fake-bricks"
    "fetching-pentagonal-termite-of-tghe-submarine-canyon"
    "final-fantasy-dorchester"
    "fox-hills"
    "game-of-life"
    "glass-fish-board-test"
    "green-storm-city"
    "hue-board-1"
    "late-winter-theme"
    "lavender-side-eye"
    "layout-test-1"
    "layout-test-12"
    "light-theme"
    "literal-data-test"
    "looking-glass-conway"
    "looking-glass-redux"
    "looking-glass-redux-conway2"
    "looking-glass-redux-mix5"
    "looking-glass-redux-test"
    "looking-glass-redux-viking"
    "looking-glass-redux-viking2"
    "looking-glass-redux2"
    "looking-glass-redux23a"
    "looking-glass-redux23abb"
    "looking-glass-redux23b"
    "looking-glass-redux2a"
    "looking-glass-redux2aa"
    "looking-glass-redux45"
    "looking-glass-redux79"
    "looking-glass-sine-wave"
    "luck-of-the-irish"
    "mapbox-test"
    "may-20"
    "my-goodness"
    "my-goodness-the-sequel"
    "neverwinter-amy"
    "night-city-never-sleeps"
    "nightcity-cape-cod"
    "nivo-getting-better!"
    "nivo-hacking-2023"
    "nivo-hacking-2023333"
    "nivo-hacking-october-2nd"
    "nostromo-console"
    "old-defaults"
    "old-fashioned-christmas"
    "old-town-snow-stars"
    "pensive-look"
    "pensive-look2"
    "pine-wood-dawn"
    "pink-and-green-elk"
    "pink-dusk-falls"
    "pinup-rabbit-fields"
    "pomp-girl1"
    "pomp-girl2"
    "poor-touring-me"
    "pres-sql-test-1"
    "purple-dusk-old-town"
    "purple-nightshades"
    "purple-techno-sunset"
    "recharts-test-blocks"
    "refresh-test"
    "repl-demo-july23"
    "repl-tests-3"
    "retro-machines"
    "riffle-test"
    "server-stats"
    "server-stats2"
    "server-stats2a"
    "sick-of-your-shit"
    "sizzle-board-1"
    "sneaky-swamp-creatures1"
    "solver-test"
    "stop-drawing-dead-dashboards"
    "swamp-nightgown"
    "swamp-reacher"
    "system-monitor"
    "system-monitor2"
    "tallica-param-test2"
    "tangerine-dreams"
    "technicolor-shanny"
    "test-blog-screen"
    "the-future-soon"
    "the-generated-lass"
    "the-generated-lass-glow"
    "the-generated-lass-ne"
    "the-generated-lass-sgt"
    "the-generated-lassff"
    "the-memo"
    "the-memo2"
    "the-outer-blues"
    "trad-hybrid"
    "tweet-bigfoot-is-blurry"
    "tweet-demo-thing-bigfoot-is-blurry"
    "unnamed-screen!"
    "viking-pastels"
    "weave-test"
    "weave-test1"
    "weave-test122"
    "who ya gonna call?"
    "who ya gonna call? again"
    "winter-theme"
    "winter-theme-choom"
    "winter-theme2"
    "winter-theme33"
    "winter-theme45"
    "winter-theme47"
    "winter-twin-peaks"
    "witchy425"
    "wonderland-horror-interface"
    "wow-board"]}},
 :runstreams {},
 :editor? true,
 :buffy? true,
 :memory [1998087099 1867217423 4294705152],
 :client-name :beneficial-fat-badger-0,
 :flow-editor? true,
 :openai-api-key "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",
 :window {:w 2964, :h 1574},
 :quake-console? false,
 :implicit-rowsets
 {:solver
  [nil
   :new-clojure-9
   :new-clojure-10
   :fabric-hop-11
   :fabric-hop-8
   :fabric-hop-10
   :fabric-hop-9
   :virtual-view
   :fabric-hop-12]},
 :post-meta
 {:panel-history-drag-31 {:* {:rowcount 127}},
  :fields-sys {:* {:rowcount 10}},
  :tmp--679760891-hist-sys {:* {:rowcount 5}},
  :panel-history-drag-client-name-40 {:* {:rowcount 3298}},
  :tmp-404636901-hist-sys {:* {:rowcount 1}},
  :tmp-1525288419-hist-sys {:* {:rowcount 6}},
  :tables-sys {:* {:rowcount 26}},
  :panel_history {:* {:rowcount 0}},
  :panel_materialized_history {},
  :panel-history-drag-client-name-43 {:* {:rowcount 4}},
  :flows-sys {:* {:rowcount 99}},
  :tmp--1473185323-hist-sys {:* {:rowcount 0}},
  :tmp-1215231624-hist-sys {:* {:rowcount 0}},
  :large-bgss {},
  :tmp-453648805-hist-sys {:* {:rowcount 5}},
  :tmp--1284598422-hist-sys {:* {:rowcount 0}},
  :tmp--1760665799-hist-sys {:* {:rowcount 2}},
  :tmp-2109860946-hist-sys {:* {:rowcount 5}},
  :shows-drag-22 {:* {:rowcount 2214}},
  :connections-sys {:* {:rowcount 9}},
  :tmp--943541296-hist-sys {:* {:rowcount 2}},
  :tmp-338024901-hist-sys {:* {:rowcount 3}},
  :tmp--1637744073-hist-sys {:* {:rowcount 0}},
  :tmp--1489849301-hist-sys {:* {:rowcount 6}},
  :tmp-446910141-hist-sys {:* {:rowcount 3}},
  :kit-results-sys {:* {:rowcount 0}}},
 :flow-estimates
 {"get-my-colors1968011927-solver-flow-"
  {:times 1, :run-id "77b96ac7-5e35-49b4-9175-f0f0b31970a4"},
  "get-my-colors159609670-solver-flow-"
  {:times 1, :run-id "1fedfc5d-1cca-4fcc-a814-e640b757a9c3"}},
 :status
 {:alert1 {:alerts :alert2},
  :heartbeat
  {:kick
   [:solver-status/beneficial-fat-badger-0>raw-custom-override1126093666>running?
    :solver/raw-custom-override-717243467
    :solver/raw-custom-override1578545480
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1373946244>running?
    :solver/raw-custom-override-1641877810
    :solver-status/beneficial-fat-badger-0>raw-custom-override-402804876>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override1457984358>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-2131993281>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1751528235>running?
    :solver/raw-custom-override414057382
    :solver/raw-custom-override644528140
    :solver/raw-custom-override-925629838
    :solver/raw-custom-override-428217321
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1265892278>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-862484216>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1259853651>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override128332843>running?
    :solver/raw-custom-override-685753357
    :solver-status/beneficial-fat-badger-0>raw-custom-override314395174>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override661376815>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-492032394>running?
    :solver/raw-custom-override-1053165171
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1194221241>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-496567410>running?
    :solver/raw-custom-override-310746823
    :solver/raw-custom-override-536177701
    :solver-status/beneficial-fat-badger-0>raw-custom-override-659661721>running?
    :solver/raw-custom-override-416767533
    :solver-status/beneficial-fat-badger-0>raw-custom-override644528140>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-45910559>running?
    :solver/raw-custom-override-859632434
    :solver/raw-custom-override1884960837
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1646341433>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override1884960837>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-103240780>running?
    :solver/raw-custom-override968287259
    :solver/raw-custom-override128332843
    :solver/get-my-colors1968011927
    :solver/raw-custom-override-126007335
    :solver-status/beneficial-fat-badger-0>raw-custom-override82488447>running?
    :solver/raw-custom-override-1387088273
    :solver/raw-custom-override44724218
    :solver/raw-custom-override-1646341433
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1541134551>running?
    :solver/raw-custom-override-1913891514
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1340267968>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1057281877>running?
    :solver/raw-custom-override-1554075845
    :solver/raw-custom-override82488447
    :solver/raw-custom-override-1340267968
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1554075845>running?
    :solver/raw-custom-override-862484216
    :solver-status/beneficial-fat-badger-0>raw-custom-override-159153112
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1122959336>running?
    :solver/raw-custom-override-402804876
    :solver/raw-custom-override-659661721
    :solver/raw-custom-override1678539502
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1199937812>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1004985780>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1141615093>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override164075625>running?
    :solver/raw-custom-override937355221
    :solver/raw-custom-override-1259853651
    :solver/raw-custom-override1840627691
    :solver/raw-custom-override-1004985780
    :solver/raw-custom-override-2131993281
    :solver-status/beneficial-fat-badger-0>raw-custom-override-171568823>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override579248065>running?
    :solver/get-my-colors159609670
    :solver-status/beneficial-fat-badger-0>raw-custom-override919987435>running?
    :solver/raw-custom-override-496567410
    :solver-status/beneficial-fat-badger-0>raw-custom-override-159153112>running?
    :solver/raw-custom-override1987368925
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1565067380>running?
    :solver/raw-custom-override-1265892278
    :solver/raw-custom-override249928743
    :solver/raw-custom-override2127591858
    :solver-status/beneficial-fat-badger-0>raw-custom-override-536177701>running?
    :solver/raw-custom-override-1199937812
    :solver-status/beneficial-fat-badger-0>raw-custom-override-81508988>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override1871699188>running?
    :solver-status/beneficial-fat-badger-0>get-my-colors159609670>running?
    :solver/raw-custom-override2115418060
    :solver-status/beneficial-fat-badger-0>raw-custom-override631642833>running?
    :solver/raw-custom-override-1565067380
    :solver-status/beneficial-fat-badger-0>raw-custom-override1987368925>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1694571796>running?
    :solver/raw-custom-override-542425777
    :solver/raw-custom-override586633470
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1427542912>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-24586914>running?
    :solver/raw-custom-override-803597781
    :solver/raw-custom-override-1194221241
    :solver/raw-custom-override1400903254
    :solver/raw-custom-override-45910559
    :solver-status/beneficial-fat-badger-0>raw-custom-override-803597781>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-507884058>running?
    :solver/raw-custom-override689614207
    :solver/raw-custom-override963336279
    :solver-meta/raw-custom-override-159153112
    :solver-status/beneficial-fat-badger-0>raw-custom-override689614207>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override249928743>running?
    :solver/raw-custom-override-125833411
    :solver-status/beneficial-fat-badger-0>raw-custom-override-416767533>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-125833411>running?
    :solver/raw-custom-override-589783320
    :solver/raw-custom-override-1872986154
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1053165171>running?
    :solver/raw-custom-override-492032394
    :solver-status/beneficial-fat-badger-0>raw-custom-override-242543175>running?
    :solver/raw-custom-override-1536567117
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1405754820>running?
    :solver/raw-custom-override-1185663166
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1641877810>running?
    :solver/raw-custom-override1102049158
    :solver/raw-custom-override-81508988
    :solver-status/beneficial-fat-badger-0>raw-custom-override-2049347547>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-542425777>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override1840627691>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override2127591858>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override2068373320>running?
    :solver/raw-custom-override-1550914123
    :solver-status/beneficial-fat-badger-0>raw-custom-override218058812>running?
    :solver/raw-custom-override1457984358
    :solver-status/beneficial-fat-badger-0>raw-custom-override688430984>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override1678539502>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1550914123>running?
    :solver/raw-custom-override-1122959336
    :solver-status/beneficial-fat-badger-0>raw-custom-override414057382>running?
    :solver/raw-custom-override117296286
    :solver/raw-custom-override-24586914
    :solver-meta/raw-custom-override-159153112>output>evald-result>out
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1543719005>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-717243467>running?
    :solver/raw-custom-override631642833
    :solver/raw-custom-override-171568823
    :solver/raw-custom-override-1427542912
    :solver-status/beneficial-fat-badger-0>raw-custom-override1102049158>running?
    :solver/raw-custom-override-1057281877
    :solver/raw-custom-override1234331395
    :solver/raw-custom-override-507884058
    :solver/raw-custom-override937406175
    :solver/raw-custom-override-2049347547
    :solver/raw-custom-override-23861408
    :solver-status/beneficial-fat-badger-0>raw-custom-override1578545480>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1256344063>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override937355221>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-589783320>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override2115418060>running?
    :solver/raw-custom-override1871699188
    :solver/raw-custom-override-1792284980
    :solver-status/beneficial-fat-badger-0>raw-custom-override-501659433>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override1234331395>running?
    :solver/raw-custom-override-1976156606
    :solver/raw-custom-override-242543175
    :solver/raw-custom-override-739308746
    :solver-status/beneficial-fat-badger-0>raw-custom-override-23861408>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-10369474>running?
    :solver/raw-custom-override218058812
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1872986154>running?
    :solver/raw-custom-override-1201009121
    :flow-status/live-scratch-flow>*running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1895051898>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override1400903254>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1792284980>running?
    :solver/raw-custom-override-1373946244
    :solver/raw-custom-override-382769635
    :solver/raw-custom-override-2105513493
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1185663166>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-925629838>running?
    :solver-status/beneficial-fat-badger-0>get-my-colors1968011927>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-739308746>running?
    :solver/raw-custom-override-1541134551
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1913891514>running?
    :solver/raw-custom-override-1141615093
    :solver/raw-custom-override2068373320
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1387088273>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override1331998518>running?
    :solver/raw-custom-override-1895051898
    :solver-status/beneficial-fat-badger-0>raw-custom-override586633470>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override117296286>running?
    :solver/raw-custom-override919987435
    :solver/raw-custom-override-1256344063
    :solver-status/beneficial-fat-badger-0>raw-custom-override963336279>running?
    :solver/raw-custom-override-159153112
    :solver/raw-custom-override-1751528235
    :solver/raw-custom-override-501659433
    :solver/raw-custom-override1331998518
    :solver-status/beneficial-fat-badger-0>raw-custom-override-859632434>running?
    :solver/raw-custom-override314395174
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1536567117>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1201009121>running?
    :solver/raw-custom-override1126093666
    :solver/raw-custom-override-1405754820
    :solver/raw-custom-override661376815
    :solver/raw-custom-override164075625
    :solver/raw-custom-override-10369474
    :solver-status/beneficial-fat-badger-0>raw-custom-override-685753357>running?
    :solver/raw-custom-override-103240780
    :solver/raw-custom-override688430984
    :solver-status/beneficial-fat-badger-0>raw-custom-override-382769635>running?
    :solver/raw-custom-override-1694571796
    :solver-status/beneficial-fat-badger-0>raw-custom-override-310746823>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-1976156606>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override937406175>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override-126007335>running?
    :solver/raw-custom-override-1543719005
    :solver-status/beneficial-fat-badger-0>raw-custom-override-428217321>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override968287259>running?
    :solver-status/beneficial-fat-badger-0>raw-custom-override44724218>running?
    :solver/raw-custom-override579248065
    :solver-status/beneficial-fat-badger-0>raw-custom-override-2105513493>running?]}},
 :screen-name "duality-of-lepus",
 :recos-page2 0,
 :selected-tab "octohedral snake",
 :col-names nil,
 :snapshots nil,
 :openai-org-id "org-YLngjih2M4oju0tnnZtKCAYg",
 :alerts
 [[[:box
    :child
    "sent screen save request to server... Please wait."
    :style
    {:font-size "12px", :opacity 0.66}]
   11
   0.5
   242232
   -1247625457]],
 :recos-page 0,
 :rs-overrides-hashmap {},
 :base-sniff-queries
 {:setlists 1669794951,
  :shows 89957543,
  :panel_history 1380488842,
  :panel_materialized_history -156535464,
  :panel_resolved_history 1778616730},
 :panels-hash -607527434,
 :elevenlabs-api-key "f74e20dec69741c2d51663cbd8cd4cf6",
 :user-params-hash -1752246297,
 :grid-recos? true,
 :preview-keys2 [],
 :session-hash -1660956983,
 :resolved-queries
 {:panel-history-drag-31
  {:select
   [:client_name :data :diff :diff_kp :key :kp :panel_key :pre_data :type :updated],
   :order-by [1],
   :from [[:panel_history :yy623]],
   :_last-run "03:45:49"},
  :panel-history-drag-client-name-40
  {:select [:*],
   :connection-id "history-db",
   :from [[:panel_history :nn722]],
   :_last-run "21:46:54"},
  :setlists-drag-2
  {:select [:show_id :song_name :song_order :ts],
   :from [[:setlists :hh333]],
   :_last-run "05:53:09"},
  :gen-viz-797
  {:select [[[:count 1] :rows] :date_posted],
   :from
   [{:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}],
   :group-by [:date_posted]},
  :panel-history-drag-client-name-43
  {:select [:client_name [[:count 1] :rowcnt]],
   :from [[:panel_history :oo960]],
   :group-by [:client_name],
   :order-by [[:rowcnt :desc]],
   :_last-run "04:03:09d"},
  :gen-viz-94
  {:select
   [[[:max [:round [:raw ["(100 * ((" nil ".0 - " nil ".0) / " nil ".0))"]] 2]]
     :diff]],
   :from
   [{:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}]},
  :DISTRICT-drag-37
  {:select [:DISTRICT [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:DAY_OF_WEEK
       :DISTRICT
       :HOUR
       :INCIDENT_NUMBER
       :Lat
       :Location
       :Long
       :MONTH
       :OCCURRED_ON_DATE
       :OFFENSE_CODE
       :OFFENSE_CODE_GROUP
       :OFFENSE_DESCRIPTION
       :REPORTING_AREA
       :SHOOTING
       :STREET
       :UCR_PART
       :YEAR],
      :from [[:offenses :ff277]]}
     :cc125]],
   :group-by [:DISTRICT],
   :order-by [[:rowcnt :desc]]},
  :large-bgss
  {:select [:*],
   :connection-id :*client-name*,
   :from
   [{:data
     (let [dir " /home/ryanr/rvbbit/frontend/resources/public/images/large"
           rel-dir "./images/large/"
           files (->>
                   (file-seq (clojure.java.io/file dir))
                   (filter (fn [x] (.isFile x)))
                   (filter
                     (fn [x]
                       (not (clojure.string/includes? (str (.getName x)) "8k"))))
                   (map (fn [x] (.getName x))))]
       (println (count files))
       (vec (for [f files] {:ffilename (str f)})))}],
   :page 3,
   :_last-run "ds:32"},
  :offenses-drag-24
  {:select
   [:DAY_OF_WEEK
    :DISTRICT
    :HOUR
    :INCIDENT_NUMBER
    :Lat
    :Location
    :Long
    :MONTH
    :OCCURRED_ON_DATE
    :OFFENSE_CODE
    :OFFENSE_CODE_GROUP
    :OFFENSE_DESCRIPTION
    :REPORTING_AREA
    :SHOOTING
    :STREET
    :UCR_PART
    :YEAR],
   :from [[:offenses :dd484]]},
  :rowcnt-drag-2
  {:select [[[:sum :rowcnt] :rowcnt_sum]],
   :from
   [[{:select [:city [[:count 1] :rowcnt]],
      :from
      [[{:select
         [:city
          :country
          :date_posted
          :datetime
          :duration_hours
          :duration_seconds
          :duration_seconds_int
          :latitude
          :longitude
          :shape
          :state],
         :from [[:ufo_sightings :jj584]],
         :order-by [[:city :asc]]}
        :ff571]],
      :group-by [:city],
      :order-by [[:rowcnt :desc]]}
     :yy403]]},
  :tour-name-drag-11
  {:select [:tour_name [[:count 1] :rowcnt]],
   :from
   [[{:select [:location :show_date :show_id :show_name :title :tour_name :ts],
      :from [[:shows :pp193]]}
     :kk455]],
   :group-by [:tour_name],
   :order-by [[:rowcnt :desc]]},
  :offenses-drag-26
  {:select
   [:DAY_OF_WEEK
    :DISTRICT
    :HOUR
    :INCIDENT_NUMBER
    :Lat
    :Location
    :Long
    :MONTH
    :OCCURRED_ON_DATE
    :OFFENSE_CODE
    :OFFENSE_CODE_GROUP
    :OFFENSE_DESCRIPTION
    :REPORTING_AREA
    :SHOOTING
    :STREET
    :UCR_PART
    :YEAR],
   :from [[:offenses :ff277]]},
  :query-preview
  {:select [[[:count 1] :rows] :ts],
   :from
   [{:select [:show_id :song_name :song_order :ts], :from [[:setlists :hh333]]}],
   :group-by [:ts]},
  :gen-viz-828
  {:select [[[[:count 1]] :agg] :date_posted],
   :from
   [{:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}],
   :order-by [[:date_posted :desc]],
   :group-by [:date_posted]},
  :shows-drag-22
  {:select [:location :show_date :show_id :show_name :title :tour_name :ts],
   :from [[:shows :pp193]],
   :_last-run "05:52:51"},
  :gen-viz-84
  {:select [[[:count 1] :rows] :country],
   :from
   [{:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}],
   :group-by [:country]},
  :gen-viz-342
  {:select [[[[:count 1]] :rows] :song_order],
   :from
   [{:select [:show_id :song_name :song_order :ts], :from [[:setlists :hh333]]}],
   :group-by [:song_order]},
  :ufo-sightings-drag-9
  {:select
   [:city
    :country
    :date_posted
    :datetime
    :duration_hours
    :duration_seconds
    :duration_seconds_int
    :latitude
    :longitude
    :shape
    :state],
   :from [[:ufo_sightings :jj584]],
   :order-by [[:city :asc]]},
  :duration-hours-drag-43
  {:select [:duration_hours [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:city
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :jj584]],
      :order-by [[:city :asc]]}
     :cc350]],
   :group-by [:duration_hours],
   :order-by [[:rowcnt :desc]]},
  :city-drag-26
  {:select [:city [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:city
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :jj584]],
      :order-by [[:city :asc]]}
     :ff571]],
   :group-by [:city],
   :order-by [[:rowcnt :desc]]},
  :state-drag-3
  {:select [:state [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:city
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :jj584]],
      :order-by [[:city :asc]]}
     :uu58]],
   :group-by [:state],
   :order-by [[:rowcnt :desc]]},
  :viz-shapes0-sys->-shape
  {:select [:*], :from nil, :where [:*when {} [:*all= {} []]]},
  :shape-drag-7
  {:select [:shape [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:city
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :jj584]],
      :order-by [[:city :asc]]}
     :hh354]],
   :group-by [:shape],
   :order-by [[:rowcnt :desc]]}},
 :panels
 {:block-414
  {:mad-libs-combo-hash ["572062609" "ufo_sightings_drag_9"],
   :name "basic_timeseries - \"date_posted, rows\" - 769",
   :w 9,
   :root [5 13],
   :h 5,
   :connection-id "bigfoot-ufos",
   :queries
   {:gen-viz-797
    {:select [[[:count 1] :rows] :date_posted],
     :from [:query/ufo-sightings-drag-9],
     :group-by [:date_posted]}},
   :tab "sapphire ape",
   :conditionals nil,
   :views
   {:oz
    [:vega-lite
     {:layer
      [{:encoding
        {:x {:field :date_posted, :type "temporal", :sort "x"},
         :y {:aggregate "sum", :field :rows, :type "quantitative"},
         :row {:field nil, :legend nil},
         :size {:legend nil},
         :shape {:legend nil},
         :column {:field nil, :legend nil},
         :color
         {:scale :theme/vega-default-color-scheme,
          :legend nil,
          :field nil,
          :type "ordinal"}},
        :mark
        {:type "area",
         :interpolate "monotone",
         :point "transparent",
         :tooltip {:content "encoding"}}}],
      :data {:values :gen-viz-797},
      :config :theme/vega-defaults,
      :width "container",
      :height :panel-height,
      :padding 4,
      :background "transparent"}
     {:actions false}]}},
  :block-899
  {:h 2,
   :w 26,
   :tab "azure oyster",
   :root [11 1],
   :name "block-899",
   :views
   {:pulled-val
    [:box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "29px", :color :theme/universal-pop-color}
     :child
     [:string :solver/raw-custom-override-1610584445>howdy-str]]},
   :queries {}},
  :block-9296
  {:name "block-9296",
   :w 10,
   :selected-mode {:fabric-hop-3 :markdown},
   :selected-view :fabric-hop-3,
   :root [42 20],
   :h 6,
   :opts
   {:fabric-hop-3 {:model "claude-3-5-sonnet-20240620", :pattern "analyze_debate"}},
   :fabric {:fabric-hop-3 [" rabbit chef!"]},
   :tab "azure oyster"},
  :block-11251
  {:name "block-11251",
   :w 6,
   :selected-view :hi,
   :root [5 7],
   :h 2,
   :queries {},
   :tab "through the rabbit hole and out the other side",
   :minimized? true,
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-11251.:hi"}
     :style
     {:font-size "14px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:push ["flow-forever" ":open-input" 21555]]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}},
  :viz-shapes0-list*
  {:queries
   {:viz-shapes0-sys->-shape
    {:select [:*],
     :from nil,
     :where
     [:*when
      :viz-shapes0-sys->-shape/*.clicked
      [:*all= :viz-shapes0-sys->-shape/*.clicked []]]}},
   :selected-view :viz-shapes0-sys->-shape},
  :block-9485
  {:h 3,
   :w 6,
   :root [30 23],
   :tab "azure oyster",
   :selected-view :shell-hop,
   :opts {:shell-hop {}},
   :name "block-9485",
   :shell {:shell-hop [" whoami"]}},
  :block-5662
  {:clojure
   {:new-clojure-10
    (do
      (let [clojure-version (clojure-version)
            jvm-version (System/getProperty "java.version")]
        (str
          "🐇🥕 Sup!fff! Internad  RVBBIT!! nREPL. Clojure "
          clojure-version
          " on  "
          jvm-version
          (+ 9 8 7 12 1323 66666 1 3123)
          " JVM techDfsfsdfDDfa"
          " 🥕🐇")))},
   :name "block-5662",
   :w 11,
   :selected-mode {:new-clojure-10 :text},
   :selected-view :new-clojure-10,
   :root [15 17],
   :h 8,
   :queries {},
   :tab "octohedral snake",
   :views
   {:hare-vw-2
    [:box
     :align
     :center
     :justify
     :center
     :style
     {:font-size "55px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "Who in the world am I? Ah, that's the great puzzle."]}},
  :block-11609
  {:h 5,
   :w 8,
   :connection-id "bigfoot-ufos",
   :name "drag-from-select-all-ufo_sightings",
   :queries
   {:city-drag-26
    {:select [:city [[:count 1] :rowcnt]],
     :from [[:query/ufo-sightings-drag-9 :ff571]],
     :group-by [:city],
     :order-by [[:rowcnt :desc]]}},
   :root [1 8],
   :tab "sapphire ape"},
  :block-2769
  {:clojure
   {:new-clojure-2
    (do
      (let [clojure-version (clojure-version)
            jvm-version (System/getProperty "java.version")]
        (println "HUUGE33?! Yes. Giant.")
        (println "the hour is " :time/hour)
        (def message2 "far side")
        (defn test [] 123333)
        (defonce my-atom (atom {:test 123}))
        (doseq [e (range :time/minute)] (println (str "minute " (inc e) "!")))
        {:howdy-str
         (str
           "🐇🥕 Sup!"
           :time/hour
           ":"
           :time/minute
           " Internal RVBBIT nREPL. Clojure "
           clojure-version
           " on "
           jvm-version
           " JVM tech"
           " 🥕🐇"),
         :min :time/minute,
         :jvm-version jvm-version,
         :clojure-version clojure-version}))},
   :name "block-2769",
   :w 9,
   :selected-mode {:new-clojure-2 :data},
   :selected-view :new-clojure-2,
   :root [27 5],
   :h 7,
   :queries {},
   :tab "azure oyster",
   :clojure-intro {},
   :views {}},
  :block-7416
  {:h 5,
   :w 4,
   :connection-id "bigfoot-ufos",
   :name "drag-from-drag-from-select-all-ufo_sightings",
   :queries
   {:rowcnt-drag-2
    {:select [[[:sum :rowcnt] :rowcnt_sum]], :from [[:query/city-drag-26 :yy403]]}},
   :root [1 13],
   :tab "sapphire ape"},
  :block-11530
  {:h 2,
   :w 9,
   :views
   {:flow-play-runstreamed
    [:box
     :align
     :center
     :justify
     :center
     :style
     {:font-size "25px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:run-flow ["flow-forever" "run flow 'flow-forever'" :runstream-overrides]]]},
   :name "flow-play-from-runstreams",
   :root [5 18],
   :tab "through the rabbit hole and out the other side"},
  :block-6161
  {:name "block-6161",
   :w 6,
   :selected-mode {:fabric-hop-10 :text},
   :selected-view :fabric-hop-10,
   :root [24 14],
   :h 3,
   :opts
   {:fabric-hop-10
    {:model "claude-3-opus-20240229",
     :client-name :beneficial-fat-badger-0,
     :pattern "tweet"}},
   :fabric
   {:fabric-hop-10
    [" tell a quick story about vampire rabbits in a sleepy town please.. (with no emojis and use markdown)...."]},
   :tab "octohedral snake"},
  :block-198
  {:h 7,
   :w 9,
   :connection-id "met-on-tour",
   :name "select-all-setlists",
   :queries
   {:setlists-drag-2
    {:select [:show_id :song_name :song_order :ts],
     :from [[:setlists :hh333]],
     :_last-run "05:53:09"}},
   :root [5 6],
   :tab "azure oyster"},
  :block-7535
  {:clojure
   {:new-clojure-11
    (let [clojure-version (clojure-version)
          jvm-version (System/getProperty "java.version")]
      (str
        "🐇🥕 Sup! Internal RVBBIT nREPL. Clojure "
        clojure-version
        " on "
        jvm-version
        " JVM tech"
        " 🥕🐇"))},
   :name "block-7535",
   :w 8,
   :selected-view :hare-vw-3,
   :root [37 19],
   :h 7,
   :queries {},
   :tab "octohedral snake",
   :views
   {:hare-vw-3
    [:box
     :align
     :center
     :justify
     :center
     :style
     {:font-size "44px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "I don't think... then you shouldn't talk, said the Hatter."]}},
  :block-760
  {:h 8,
   :w 10,
   :connection-id "history-db",
   :name "select-client_name-panel_history",
   :queries
   {:panel-history-drag-client-name-43
    {:select [:client_name [[:count 1] :rowcnt]],
     :from [[:panel_history :oo960]],
     :group-by [:client_name],
     :order-by [[:rowcnt :desc]],
     :_last-run "04:03:09d"}},
   :root [26 18],
   :tab "octohedral snake"},
  :block-3848
  {:h 7,
   :w 22,
   :connection-id "system-db",
   :name "select-all-panel_history",
   :queries
   {:panel-history-drag-31
    {:select
     [:client_name
      :data
      :diff
      :diff_kp
      :key
      :kp
      :panel_key
      :pre_data
      :type
      :updated],
     :order-by [1],
     :from [[:panel_history :yy623]],
     :_last-run "03:45:49"}},
   :root [5 11],
   :tab "baby-blue duck"},
  :block-11761
  {:h 6,
   :w 7,
   :tab "azure oyster",
   :root [45 0],
   :name "block-11761",
   :views
   {:pulled-val [:data-viewer :solver-meta/raw-custom-override-1610584445>extra]},
   :queries {}},
  :block-7138
  {:h 5,
   :w 8,
   :connection-id "boston-crime",
   :name "drag-from-select-all-offenses",
   :queries
   {:DISTRICT-drag-37
    {:select [:DISTRICT [[:count 1] :rowcnt]],
     :from [[:query/offenses-drag-26 :cc125]],
     :group-by [:DISTRICT],
     :order-by [[:rowcnt :desc]]}},
   :root [1 18],
   :tab "star-shaped wallaby"},
  :block-8963
  {:h 7,
   :w 16,
   :connection-id "met-on-tour",
   :name "select-all-shows",
   :queries
   {:shows-drag-22
    {:select [:location :show_date :show_id :show_name :title :tour_name :ts],
     :from [[:shows :pp193]],
     :_last-run "05:52:51"}},
   :root [15 9],
   :tab "azure oyster"},
  :block-204
  {:mad-libs-combo-hash ["-1610972762" "ufo_sightings_drag_9"],
   :name "compound_trend_1 - \"date_posted, rows\" - 1141",
   :w 10,
   :root [23 13],
   :h 5,
   :connection-id "bigfoot-ufos",
   :queries
   {:gen-viz-828
    {:select [[[[:count 1]] :agg] :date_posted],
     :from [:query/ufo-sightings-drag-9],
     :order-by [[:date_posted :desc]],
     :group-by [:date_posted]},
    :gen-viz-94
    {:select
     [[[:max
        [:round
         [:raw
          ["(100 * (("
           :query-preview/agg.0
           ".0 - "
           :query-preview/agg.1
           ".0) / "
           :query-preview/agg.0
           ".0))"]]
         2]]
       :diff]],
     :from [:query/ufo-sightings-drag-9]}},
   :tab "sapphire ape",
   :conditionals {:c345-up-or-down? [:> :query-preview/agg.0 :query-preview/agg.1]},
   :views
   {:oz
    [:v-box
     :size
     "auto"
     :height
     :half-panel-height-px
     :style
     {:padding-left "8px", :padding-right "8px"}
     :children
     [[:h-box
       :justify
       :between
       :children
       [[:box
         :padding
         "16px"
         :child
         [:number :query-preview/agg.0]
         :style
         {:font-size "39px", :color "#ffffff"}]
        [:h-box
         :padding
         "13px"
         :size
         "auto"
         :children
         [[:icon
           :md-icon-name
           [:if :condi/c345-up-or-down? "zmdi-chevron-up" "zmdi-chevron-down"]
           :style
           {:font-size "55px",
            :color [:if :condi/c345-up-or-down? "#20f323" "#f36464"],
            :opacity 0.5,
            :margin-top "8px"}]
          [:box
           :child
           [:percent :query-preview-2/diff.0]
           :style
           {:font-size "25px", :padding "15px"}]]]]]
      [:box
       :style
       {:margin-top "-10px"}
       :size
       "auto"
       :child
       [:vega-lite
        {:layer
         [{:encoding
           {:x {:field :date_posted, :type "temporal", :title nil, :sort "x"},
            :y
            {:aggregate "sum",
             :field :agg,
             :title nil,
             :scale {:zero false},
             :type "quantitative"},
            :row {:field nil, :legend nil},
            :size {:legend nil},
            :shape {:legend nil},
            :column {:field nil, :legend nil},
            :color
            {:scale {:scheme "purples"}, :legend nil, :field 1, :type "ordinal"}},
           :mark
           {:type "line",
            :interpolate "monotone",
            :line true,
            :point true,
            :tooltip {:content "encoding"}}}],
         :data {:values :gen-viz-828},
         :config
         {:view {:stroke "transparent"},
          :line {:strokeWidth 3},
          :axis
          {:domainColor "#ffffff22",
           :grid true,
           :font "Lato",
           :labelColor "#afafaf",
           :titleFont "Lato",
           :titleColor "#282828",
           :labelFont "Lato",
           :domain false,
           :gridColor "#ffffff22",
           :tickColor "#ffffff22",
           :axisFont "Lato"},
          :legend
          {:labelFont "Lato",
           :legendFont "Lato",
           :labelColor "#ffffff99",
           :titleColor "#ffffff99",
           :stroke "#ffffff99",
           :titleFont "Lato"},
          :header {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"},
          :mark {:font "Lato"},
          :title
          {:font "Lato",
           :subtitleFont "Lato",
           :labelFont "Lato",
           :titleFont "Lato",
           :titleColor "#ffffff99"}},
         :width :panel-width,
         :height :half-panel-height,
         :padding 4,
         :background "transparent"}
        {:actions false}]]
      [:box
       :align
       :center
       :justify
       :center
       :style
       {:padding-top "133px", :font-size "20px"}
       :child
       [:string [:date_posted " vs " :rows]]]]]}},
  :block-487
  {:h 3,
   :w 6,
   :root [30 11],
   :tab "octohedral snake",
   :selected-view :fabric-hop-9,
   :opts {:fabric-hop-9 {:model "claude-3-opus-20240229", :pattern "tweet"}},
   :name "block-487",
   :fabric {:fabric-hop-9 [" tell a story abut dishwashers"]}},
  :block-9296-1
  {:h 3,
   :w 11,
   :root [30 26],
   :tab "azure oyster",
   :selected-view :fabric-hop-6,
   :opts {:fabric-hop-6 {:model "gpt-3.5-turbo", :pattern "tweet"}},
   :name "block-9296",
   :fabric {:fabric-hop-6 [" adventures in moscow, russia!"]}},
  :block-10751
  {:h 5,
   :w 9,
   :tab "star-shaped wallaby",
   :root [17 1],
   :name ":param/tetradss",
   :views {:param-val [:data-viewer :param/tetradss]},
   :queries {}},
  :block-2536
  {:h 2,
   :w 16,
   :root [0 1],
   :tab "through the rabbit hole and out the other side",
   :selected-view :hi,
   :name "block-2536",
   :views
   {:hi
    [:box
     :attr
     {:id ":block-6121.:hi"}
     :style
     {:font-size "15px",
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:speak-click
      "Did you ever need a flow to stop and present an operator with some choices? Static or dynamic we need help to continue processing. How about this ALSO happening headlessly & seamlessly with your data UI?"]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-8805
  {:h 5,
   :w 8,
   :connection-id "bigfoot-ufos",
   :name "drag-from-select-all-ufo_sightings",
   :queries
   {:duration-hours-drag-43
    {:select [:duration_hours [[:count 1] :rowcnt]],
     :from [[:query/ufo-sightings-drag-9 :cc350]],
     :group-by [:duration_hours],
     :order-by [[:rowcnt :desc]]}},
   :root [25 8],
   :tab "sapphire ape"},
  :block-10776
  {:name "block-10776",
   :w 10,
   :selected-mode {:fabric-hop-2 :markdown, :* :markdown},
   :selected-view :fabric-hop-2,
   :root [42 14],
   :h 4,
   :opts
   {:fabric-hop-2 {:model "claude-3-5-sonnet-20240620", :pattern "analyze_debate"}},
   :fabric {:fabric-hop-2 [" flooded kitchen suprise!"]},
   :tab "azure oyster"},
  :block-10011
  {:h 3,
   :w 6,
   :root [4 5],
   :tab "octohedral snake",
   :selected-view :fabric-hop-12,
   :opts
   {:fabric-hop-12
    {:model "gpt-3.5-turbo",
     :client-name :beneficial-fat-badger-0,
     :pattern "tweet"}},
   :name "block-10011",
   :fabric
   {:fabric-hop-12
    [" tell a very short horror story about a dishwasher (no emojits)."]}},
  :block-94
  {:mad-libs-combo-hash ["1561519308" "ufo_sightings_drag_9"],
   :name "basic_v_bar - \"country, rows\" - 559",
   :w 9,
   :root [14 13],
   :h 5,
   :connection-id "bigfoot-ufos",
   :queries
   {:gen-viz-84
    {:select [[[:count 1] :rows] :country],
     :from [:query/ufo-sightings-drag-9],
     :group-by [:country]}},
   :tab "sapphire ape",
   :conditionals nil,
   :views
   {:oz
    [:vega-lite
     {:layer
      [{:encoding
        {:y {:field :country, :type "ordinal"},
         :x {:aggregate "sum", :field :rows, :type "quantitative"},
         :row {:field nil, :legend nil},
         :size {:legend nil},
         :shape {:legend nil},
         :column {:field nil, :legend nil},
         :color
         {:scale :theme/vega-default-color-scheme,
          :legend nil,
          :field 1,
          :type "ordinal"}},
        :mark {:type "bar", :tooltip {:content "encoding"}}}],
      :data {:values :gen-viz-84},
      :config :theme/vega-defaults,
      :width "container",
      :height :panel-height,
      :padding 4,
      :background "transparent"}
     {:actions false}]}},
  :block-1913
  {:h 2,
   :w 16,
   :root [0 15],
   :tab "through the rabbit hole and out the other side",
   :selected-view :hi,
   :name "block-1913",
   :views
   {:hi
    [:box
     :attr
     {:id ":block-4121.:hi"}
     :style
     {:font-size "15px",
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:speak-click
      "Pretty cool, if you ask me. Regular Dashboards are, like, totally lame - reactive flow-powered data boards...  thats where its at."]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-11395
  {:w 16,
   :selected-view :vv,
   :name "through the rabbit hole and out the other side",
   :h 23,
   :ghosted? false,
   :views {:vv [:grid "through the rabbit hole and out the other side"]},
   :root [8 2],
   :tab "globular koala"},
  :block-5503
  {:name "block-5503",
   :w 7,
   :selected-view :hare-vw,
   :root [45 7],
   :h 4,
   :queries {},
   :tab "azure oyster",
   :clojure-intro
   {:new-clojure-intro
    (do
      (ns hoppy.chuck-norris
        (:require [clojure.data.json :as json] [clojure.java.io :as io]))
      (def url (java.net.URL. "https://api.chucknorris.io/jokes/random"))
      (defn fetch-chuck-norris-joke []
        (let [conn (.openConnection url)]
          (with-open [reader (io/reader (.getInputStream conn))]
            (json/read (java.io.PushbackReader. reader) :key-fn keyword))))
      (defn joke-to-hiccup [joke]
        [:v-box
         :size
         "auto"
         :align
         :center
         :justify
         :center
         :gap
         "4px"
         :style
         {:color :theme/editor-outer-rim-color}
         :children
         [[:h2 "Chuck's Wisdom of the Day"]
          [:p (:value joke)]
          [:img
           {:src "https://placekitten.com/200/200",
            :width "200px",
            :height "200px",
            :style {:border-radius "15px"},
            :alt "A cute bunny (actually a kitten)"}]]])
      (def joke (fetch-chuck-norris-joke))
      (def hiccup (joke-to-hiccup joke))
      (println "Console joke output:" (pr-str (get joke :value)))
      hiccup)},
   :views
   {:hare-vw
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-5503.:hi"}
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:speak-click
      "It's a perfect day for planting seeds and planning adventures!"]]}},
  :block-9369
  {:h 3,
   :w 16,
   :root [0 11],
   :tab "through the rabbit hole and out the other side",
   :selected-view :hi,
   :name "block-9369",
   :views
   {:hi
    [:box
     :attr
     {:id ":block-9363.:hi"}
     :style
     {:font-size "15px",
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:speak-click
      "Going back to the canvas, the dialog box and channel reactivity works the same way. The server flow waits for the client and reacts to the value. No need to render or load the flow like before, we are merely a 'subscription client' to this flow."]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-422
  {:h 4,
   :w 8,
   :root [16 4],
   :tab "azure oyster",
   :selected-view :hare-vw-1,
   :name "block-422",
   :views
   {:hare-vw-1
    [:box
     :align
     :center
     :justify
     :center
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "When you want to know how things really work, study them when they're coming apart."]},
   :queries {}},
  :block-971
  {:h 9,
   :w 9,
   :tab "star-shaped wallaby",
   :root [34 11],
   :name ":param/generated-colors",
   :views {:param-val [:data-viewer :param/generated-colors]},
   :queries {}},
  :block-6308
  {:h 5,
   :w 8,
   :connection-id "met-on-tour",
   :name "drag-from-select-all-shows",
   :queries
   {:tour-name-drag-11
    {:select [:tour_name [[:count 1] :rowcnt]],
     :from [[:query/shows-drag-22 :kk455]],
     :group-by [:tour_name],
     :order-by [[:rowcnt :desc]]}},
   :root [32 14],
   :tab "azure oyster"},
  :block-958
  {:mad-libs-combo-hash ["1800233700" "setlists_drag_2"],
   :clojure
   {:new-clojure-3
    (let [clojure-version (clojure-version)
          jvm-version (System/getProperty "java.version")]
      (str
        "🐇🥕 Sup! Internal RVBBIT nREPL. Clojure "
        clojure-version
        " on "
        jvm-version
        " JVM tech"
        " 🥕🐇")),
    :new-clojure-4
    (let [clojure-version (clojure-version)
          jvm-version (System/getProperty "java.version")]
      (str
        "🐇🥕 Sup! Internal RVBBIT nREPL. Clojure "
        clojure-version
        " on "
        jvm-version
        " JVM tech"
        " 🥕🐇")),
    :new-clojure-5
    (let [clojure-version (clojure-version)
          jvm-version (System/getProperty "java.version")]
      (str
        "🐇🥕 Sup! Internal RVBBIT nREPL. Clojure "
        clojure-version
        " on "
        jvm-version
        " JVM tech"
        " 🥕🐇"))},
   :name "recharts_h_bar - \"rows, song_order\" - 355",
   :w 17,
   :root [14 1],
   :h 10,
   :connection-id "met-on-tour",
   :queries
   {:gen-viz-342
    {:select [[[[:count 1]] :rows] :song_order],
     :from [:query/setlists-drag-2],
     :group-by [:song_order]}},
   :tab "azure oyster",
   :conditionals nil,
   :minimized? true,
   :views
   {:reech
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :BarChart
      {:data :gen-viz-342, :margin {:top 5, :bottom 5, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
      [:> :Tooltip]
      [:> :XAxis {:dataKey :song_order}]
      [:> :Bar {:dataKey :rows, :stroke "#8884d8", :fill "#8884d8"}]]]}},
  :block-9929
  {:h 8,
   :w 9,
   :connection-id "history-db",
   :name "select-client_name-panel_history",
   :queries
   {:panel-history-drag-client-name-40
    {:select [:*],
     :connection-id "history-db",
     :from [[:panel_history :nn722]],
     :_last-run "21:46:54"}},
   :root [6 17],
   :tab "octohedral snake"},
  :block-7319
  {:h 5,
   :w 8,
   :connection-id "bigfoot-ufos",
   :name "drag-from-select-all-ufo_sightings",
   :queries
   {:shape-drag-7
    {:select [:shape [[:count 1] :rowcnt]],
     :from [[:query/ufo-sightings-drag-9 :hh354]],
     :group-by [:shape],
     :order-by [[:rowcnt :desc]]}},
   :root [9 8],
   :tab "sapphire ape"},
  :block-4121
  {:h 3,
   :w 16,
   :root [0 7],
   :tab "through the rabbit hole and out the other side",
   :selected-view :hi,
   :name "block-4121",
   :views
   {:hi
    [:box
     :attr
     {:id ":block-4121.:hi"}
     :style
     {:font-size "15px",
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:speak-click
      "We can also debug by forcing various values into any step in the flow in order to observe different reactions... Notice the flow doesn't re-start from scratch, it is actually still running and will react to new values that hit any of it's channels."]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-2524
  {:h 4,
   :w 12,
   :root [30 14],
   :tab "octohedral snake",
   :selected-view :fabric-hop-8,
   :opts
   {:fabric-hop-8 {:model "gpt-4o", :client-name :*client-name*, :pattern "tweet"}},
   :name "block-2524",
   :fabric
   {:fabric-hop-8
    [" edgy cyberpunk joke without emojis please and make it spicy plaese!!!"]}},
  :block-7409
  {:clojure
   {:new-clojure-6
    (let [clojure-version (clojure-version)
          jvm-version (System/getProperty "java.version")]
      (str
        "🐇🥕 Sup! Internal RVBBIT nREPL. Clojure "
        clojure-version
        " on "
        jvm-version
        " JVM tech"
        " 🥕🐇")),
    :new-clojure-7
    (let [clojure-version (clojure-version)
          jvm-version (System/getProperty "java.version")]
      (str
        "🐇🥕 Sup! Internal RVBBIT nREPL. Clojure "
        clojure-version
        " on "
        jvm-version
        " JVM tech"
        " 🥕🐇")),
    :new-clojure-8
    (let [clojure-version (clojure-version)
          jvm-version (System/getProperty "java.version")]
      (str
        "🐇🥕 Sup! Internal RVBBIT nREPL. Clojure "
        clojure-version
        " on "
        jvm-version
        " JVM tech"
        " 🥕🐇"))},
   :name "block-7409",
   :w 9,
   :selected-view :hare-vw,
   :root [1 1],
   :h 4,
   :queries {},
   :tab "azure oyster",
   :views
   {:hare-vw
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-7409.:hi"}
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "It's a perfect day for planting seeds and planning adventures!"]}},
  :block-7215
  {:h 4,
   :w 9,
   :tab "through the rabbit hole and out the other side",
   :root [5 20],
   :name "block-7215",
   :views
   {:param-val
    [:box
     :align
     :center
     :justify
     :center
     :padding
     "13px"
     :style
     {:font-size "88px"}
     :child
     [:string :flow/flow-forever>:final-math]]},
   :queries {}},
  :block-3777
  {:h 5,
   :w 8,
   :connection-id "bigfoot-ufos",
   :name "drag-from-select-all-ufo_sightings",
   :queries
   {:state-drag-3
    {:select [:state [[:count 1] :rowcnt]],
     :from [[:query/ufo-sightings-drag-9 :uu58]],
     :group-by [:state],
     :order-by [[:rowcnt :desc]]}},
   :root [17 8],
   :tab "sapphire ape"},
  :block-5318
  {:h 3,
   :w 6,
   :root [15 17],
   :tab "azure oyster",
   :selected-view :fabric-hop-5,
   :opts {:fabric-hop-5 {:model "gpt-3.5-turbo", :pattern "tweet"}},
   :name "block-5318",
   :fabric
   {:fabric-hop-5 ["draft a tweet about vaction adventures in moscow please"]}},
  :block-6584
  {:h 17,
   :w 9,
   :tab "fat hawk",
   :root [32 1],
   :name ":param/generated-colors",
   :views {:param-val [:data-viewer :param/generated-colors]},
   :queries {}},
  :block-1768
  {:h 3,
   :w 6,
   :root [22 16],
   :tab "azure oyster",
   :selected-view :fabric-hop-1,
   :name "block-1768",
   :fabric {:fabric-hop-1 [" chicken noodle soup"]}},
  :block-1694
  {:h 7,
   :w 11,
   :views
   {:view-clone
    [:box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {}
     :child
     [:img {:src "./images/gen/b64-image3-55488-51622.png", :width "100%"}]]},
   :name "clone-pulled-val29",
   :root [15 6],
   :tab "azure oyster",
   :minimized? true},
  :block-3777-1
  {:h 7,
   :w 10,
   :tab "azure oyster",
   :root [15 22],
   :name "block-3777",
   :views
   {:pulled-val
    [:box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {}
     :child
     [:img {:src :solver/raw-custom-override136934373>10>0>2, :width "100%"}]]},
   :queries {}},
  :block-5700
  {:name "block-5700",
   :w 6,
   :selected-mode {:fabric-hop-7 :markdown},
   :selected-view :fabric-hop-7,
   :root [36 23],
   :h 3,
   :opts {:fabric-hop-7 {:model "gpt-4o", :pattern "tweet"}},
   :fabric {:fabric-hop-7 [" exploring moscow tweet, interesting!"]},
   :tab "azure oyster"},
  :block-35
  {:h 9,
   :w 9,
   :tab "globular koala",
   :root [1 15],
   :name ":param/image-data",
   :views {:param-val [:data-viewer :param/image-data]},
   :queries {}},
  :block-8532
  {:clojure {:new-clojure-1 (do (rvbbit-backend.websockets/draw-stats :cpu))},
   :name "block-8532",
   :w 17,
   :selected-mode {:new-create-image :clover},
   :bash
   {:new-bash
    (let [process (.exec (Runtime/getRuntime) :clover-body)
          reader (java.io.BufferedReader.
                   (java.io.InputStreamReader. (.getInputStream process)))
          output (StringBuilder.)]
      (loop [line (.readLine reader)]
        (when line
          (.append output line)
          (.append output "\n")
          (recur (.readLine reader))))
      (str output)),
    :new-bash-1 ["top ; uname -all " ""]},
   :selected-view :new-create-image,
   :root [29 0],
   :h 10,
   :queries {},
   :tab "star-shaped wallaby",
   :create-image
   {:new-create-image
    ["A highly detailed, exaggerated pinup style illustration, featuring a young, powerful, full-figured Scandinavian woman in her early 30s. She sports a full-face and long, flowing dark hair, buxom pinup build. The setting is in the picturesque wilderness of Cape Code America, under the teal and pink hues of a Cyberpunk-Vaporwave dusk. She stares confidently at the viewer, her allure intensified by dramatic lighting and dark makeup. A sly, playful smile dances on her lips, contributing to a mystical and alluring aura. Intricate and ornate tattoos adorn her shoulders, collarbone, and gracefully ascend to her neck, each one representing a unique story. She is seen with a rabbit pendant around her neck, and similar rabbit motifs are subtly integrated within her tattoos. The image beautifully juxtaposes the elements of wonder, mystery, and temptation in a radiant sunrise....  .   "]},
   :views {}},
  :block-11155
  {:h 3,
   :w 6,
   :root [26 19],
   :tab "azure oyster",
   :selected-view :fabric-hop-4,
   :opts
   {:fabric-hop-4 {:model "claude-3-5-sonnet-20240620", :pattern "analyze_debate"}},
   :name "block-11155",
   :fabric {:fabric-hop-4 [" adventures in peru"]}},
  :block-8262
  {:clojure
   {:new-clojure
    (do
      (let [clojure-version (clojure-version)
            jvm-version (System/getProperty "java.version")]
        [:box
         :style
         {:font-size "44px", :color "#ffffff"}
         :child
         (str
           "🐇🥕 Sup! Internal RVBBIT nREPL!!. Clojure "
           clojure-version
           " on "
           jvm-version
           " JVM tech!!!"
           " 🥕🐇")]))},
   :name "block-8262",
   :w 7,
   :selected-mode {:new-clojure :clover},
   :selected-view :new-clojure,
   :root [0 2],
   :h 9,
   :queries {},
   :tab "globular koala",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-8262.:hi"}
     :style
     {:font-size "130px",
      :font-weight 500,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-18px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]}},
  :block-12330
  {:h 4,
   :w 6,
   :root [33 19],
   :tab "azure oyster",
   :selected-view :hare-vw,
   :name "block-12330",
   :views
   {:hare-vw
    [:markdown "DAMN SON! \n ## TJPSE TOTOTES!dd!!! \n #test \n ###TEdddST"]},
   :queries {}},
  :block-11696
  {:h 4,
   :w 6,
   :tab "fat hawk",
   :root [17 2],
   :name "block-11696",
   :views
   {:pulled-val
    [:box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size [:auto-size-px :param/generated-colors>second-darkest]}
     :child
     [:string :param/generated-colors>second-darkest]]},
   :queries {}},
  :block-6121
  {:h 2,
   :w 16,
   :root [0 4],
   :tab "through the rabbit hole and out the other side",
   :selected-view :hi,
   :name "block-6121",
   :views
   {:hi
    [:box
     :attr
     {:id ":block-6121.:hi"}
     :style
     {:font-size "15px",
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:speak-click
      "Here you can see that while running the flow interactively, we get the dialog push, as well as the ability to manipulate the options on the flow directly."]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-2361
  {:clojure
   {:new-clojure-9
    (do
      (let [dir "/home/ryanr/rvbbit/frontend/resources/public/images/large"
            rel-dir "./images/large/"
            files (->>
                    (file-seq (clojure.java.io/file dir))
                    (filter (fn [x] (.isFile x)))
                    (filter
                      (fn [x]
                        (not (clojure.string/includes? (str (.getName x)) "8k"))))
                    (map (fn [x] (.getName x))))]
        (println (count files))
        (vec (for [f files] (pr-str (str rel-dir f))))))},
   :name "block-2361",
   :w 7,
   :selected-mode {:new-clojure-9 :rowset},
   :selected-view :new-clojure-9,
   :root [38 1],
   :h 12,
   :connection-id :*client-name*,
   :queries
   {:large-bgss
    {:select [:*],
     :connection-id :*client-name*,
     :from
     [{:data
       (let [dir " /home/ryanr/rvbbit/frontend/resources/public/images/large"
             rel-dir "./images/large/"
             files (->>
                     (file-seq (clojure.java.io/file dir))
                     (filter (fn [x] (.isFile x)))
                     (filter
                       (fn [x]
                         (not (clojure.string/includes? (str (.getName x)) "8k"))))
                     (map (fn [x] (.getName x))))]
         (println (count files))
         (vec (for [f files] {:ffilename (str f)})))}],
     :page 3,
     :_last-run "ds:32"}},
   :tab "azure oyster",
   :views {}},
  :block-1449
  {:h 7,
   :w 32,
   :connection-id "bigfoot-ufos",
   :name "select-all-ufo_sightings",
   :queries
   {:ufo-sightings-drag-9
    {:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}},
   :root [1 1],
   :tab "sapphire ape",
   :selected-view :ufo-sightings-drag-9},
  :block-3158
  {:h 19,
   :w 13,
   :root [46 1],
   :tab "star-shaped wallaby",
   :selected-view :hi,
   :name "block-3158",
   :views {:hi [:data-viewer :solver-status/*client-name*]},
   :queries {}},
  :block-9030
  {:name "block-9030",
   :w 9,
   :selected-mode {:new-create-image-1 :clover},
   :selected-view :new-create-image-1,
   :root [5 22],
   :h 6,
   :queries {},
   :tab "azure oyster",
   :create-image
   {:new-create-image-1
    ["A hyperrealistic image of a full-figured woman in her late twenties, of Irish-Scottish descent and fair complexion, standing in the midst of a New England   inspired dystopian small town amidst a misty autumn morning that combines the aesthetics of cyberpunk and vaporwave. The town sinks into a noir atmosphere reminiscent of the 20th century, with an enchanting midnight canopy overhead.   A forest looms at the edges. The scene is eerily lit by neon lights casting hues of rose pink, purple, & sky blue. Her cascading hair and intricate tattoos extend up to her neckline, marked by a recurring rabbit emblem also adorned on her necklace.                  Her full lips are slightly parted, enhancing her allure....   She wears a dress reminiscent of pin-up art that thrived from the late 1800s to the early 1900s.   The visual perspective is a camera close-up from mid-torso up....."]},
   :views
   {:hare-vw
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-9030.:hi"}
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "It's a perfect day for planting seeds and planning adventures!"]}},
  :block-6124
  {:h 9,
   :w 9,
   :tab "fat hawk",
   :root [32 18],
   :name ":param/tetradss",
   :views {:param-val [:data-viewer :param/tetradss]},
   :queries {}},
  :block-3392
  {:h 7,
   :w 30,
   :connection-id "boston-crime",
   :name "select-all-offenses",
   :queries
   {:offenses-drag-26
    {:select
     [:DAY_OF_WEEK
      :DISTRICT
      :HOUR
      :INCIDENT_NUMBER
      :Lat
      :Location
      :Long
      :MONTH
      :OCCURRED_ON_DATE
      :OFFENSE_CODE
      :OFFENSE_CODE_GROUP
      :OFFENSE_DESCRIPTION
      :REPORTING_AREA
      :SHOOTING
      :STREET
      :UCR_PART
      :YEAR],
     :from [[:offenses :ff277]]}},
   :root [1 10],
   :tab "star-shaped wallaby"},
  :block-6190
  {:h 31,
   :w 5,
   :views
   {"console-out"
    [:console :solver-meta/raw-custom-override-1610584445>output>evald-result>out]},
   :name "console :solver/raw-custom-override-1610584445",
   :root [53 1],
   :tab "azure oyster"},
  :block-646
  {:h 3,
   :w 6,
   :root [30 8],
   :tab "octohedral snake",
   :selected-view :fabric-hop-11,
   :opts
   {:fabric-hop-11
    {:model "gpt-4-turbo",
     :client-name :beneficial-fat-badger-0,
     :pattern "tweet"}},
   :name "block-646",
   :fabric
   {:fabric-hop-11
    ["  tell a quick story about vampire rabbits in a sleepy little town in autumn in new england"]}},
  :block-284
  {:w 32,
   :selected-view :vv,
   :name "sapphire ape",
   :h 17,
   :ghosted? false,
   :views {:vv [:grid "sapphire ape"]},
   :root [25 2],
   :tab "globular koala"},
  :block-6565
  {:name "block-6565",
   :w 10,
   :selected-view :hi,
   :root [2 2],
   :h 12,
   :queries {},
   :tab "star-shaped wallaby",
   :minimized? true,
   :views {:hi [:data-viewer :param/image-data]}},
  :block-4346
  {:h 7,
   :w 30,
   :connection-id "boston-crime",
   :name "select-all-offenses",
   :queries
   {:offenses-drag-24
    {:select
     [:DAY_OF_WEEK
      :DISTRICT
      :HOUR
      :INCIDENT_NUMBER
      :Lat
      :Location
      :Long
      :MONTH
      :OCCURRED_ON_DATE
      :OFFENSE_CODE
      :OFFENSE_CODE_GROUP
      :OFFENSE_DESCRIPTION
      :REPORTING_AREA
      :SHOOTING
      :STREET
      :UCR_PART
      :YEAR],
     :from [[:offenses :dd484]]}},
   :root [25 20],
   :tab "globular koala"},
  :block-9353
  {:h 4,
   :w 9,
   :root [5 14],
   :tab "azure oyster",
   :selected-view :fabric-hop,
   :name "block-9353",
   :fabric {:fabric-hop [" haunted houses"]}}},
 :selected-block :block-10011,
 :theme-colors-hashmap
 {"float" "#cac2c1",
  "boolean" "#a39cc7",
  "map" "#a4cd83",
  "list" "#6e0ca1",
  "string" "#ffffff",
  "any" "#4f7e89",
  "vector" "#bb678b",
  "keyword" "#ede8e9",
  "rabbit-code" "#48babd",
  "datetime" "#8e1351",
  "integer" "#bcb1ad",
  "unknown" "#7c0c00",
  "date" "#0a3c08"},
 :click-param
 {:recos-sys
  {:query_map
   "[{:select [[[[:sum :rows]] :rows] :ts], :from [\"query/setlists_drag_2\"], :group-by [:ts]}]",
   :shape_name "basic_v_bar",
   :w 17,
   :combo_edn "rows, ts",
   :selected_view nil,
   :combo_hash "-1489866873",
   :h 14,
   :condis "",
   :viz_map
   "[:vega-lite {:layer [{:encoding {:y {:field :ts, :type \"ordinal\"}, :x {:aggregate \"sum\", :field :rows, :type \"quantitative\"}, :row {:field nil, :legend nil}, :size {:legend nil}, :shape {:legend nil}, :column {:field nil, :legend nil}, :color {:scale :theme/vega-default-color-scheme, :legend nil, :field 1, :type \"ordinal\"}}, :mark {:type \"bar\", :tooltip {:content \"encoding\"}}}], :data {:values \"query/setlists_drag_2\"}} {:actions false}]"},
  :fields-sys {:field_name "client_name", :field_type "TEXT", :data_type "string"},
  :viz-shapes-sys {:combo_edn nil},
  :tables-sys
  {:db_schema "none",
   :db_catalog nil,
   :connection_id "history-db",
   :schema_cat nil,
   :table_name "panel_resolved_history",
   :fields 11},
  :flow
  {:crow-flow-201a>*running? false,
   :counting-loop>*running? false,
   :live-scratch-flow>*running? false,
   :flow-forever>*running? false,
   :flow-forever>final-math nil},
  :files-sys
  {:file_path "./screens/aaa-run-amok.edn",
   :screen_name "aaa-run-amok",
   :blocks 12,
   :queries 11,
   :ts "2024-07-03 09:31:06"},
  :time
  {:second 7, :now-seconds "Wednesday, April 24 1:43:57PM", :minute 21, :hour 20},
  :user-dropdown-sys {:req-field nil, :shape nil},
  :searches-types-sys {:item_type "saved-views"},
  :large-bgss {:ffilename "b64-image-51574-82843-4k.webp"},
  :searches-rows-sys
  {:item_sub_type "heya!",
   :item_type "saved-views",
   :item_key "aaaah-wednesday-the-day",
   :display_name ":hello-there-brother :views :heya!",
   :sample
   "[:box :align :center :justify :center :style {:font-size \"50px\", :font-weight 70",
   :value ":screen/aaaah-wednesday-the-day>panels>hello-there-brother>views>heya!",
   :is_live nil,
   :block_meta "{:h 3, :w 12, :name \"hello there!\", :natural-key :heya!}"},
  :new-clojure-9 {:vec-val "\"./images/large/b64-image3-67268-82724-4k.webp\""},
  :viz-tables-sys {:table_name "setlists_drag_2"},
  :param
  {:background-image-path [:string3 :param/path-dir :param/rel-image-path],
   :keper "b64-image3-30849-74975-4k.webp",
   :path-dir "/home/ryanr/rvbbit/frontend/resources/public/",
   :selected-view-data [" tell a horror story about a dishwasher (no emojits)"],
   :selected-view [:fabric :fabric-hop-12],
   :generated-colors
   [:run-solver [:get-my-colors {:input-image-path :param/background-image-path}]],
   :rel-image-path :new-clojure-9/vec-val,
   :tetradss [:tetrads :param/generated-colors>dominant],
   :selected-block :block-10011,
   :glass-fish-style
   {:background-color [:string3 :param/generated-colors>darkest 73],
    :border-radius "16px",
    :border [:string3 "3px solid " :param/generated-colors>darkest 99],
    :box-shadow "10px 5px 5px #00000034",
    :backdrop-filter "blur(4px) brightness(60%)",
    :filter nil}},
  :theme
  {:codemirror-theme "rvbbit-dynamic",
   :editor-param-background-color "#000000",
   :base-block-style :param/glass-fish-style,
   :vega-defaults
   {:view {:stroke "transparent"},
    :axis
    {:domainColor "#ffffff22",
     :grid true,
     :font "Lato",
     :labelColor "#ffffff88",
     :titleFont "Lato",
     :titleColor "#ffffff99",
     :labelFont "Lato",
     :domain false,
     :gridColor "#ffffff22",
     :tickColor "#ffffff22",
     :axisFont "Lato"},
    :legend
    {:labelFont "Lato",
     :legendFont "Lato",
     :labelColor "#ffffff99",
     :titleColor "#ffffff99",
     :stroke "#ffffff99",
     :titleFont "Lato"},
    :header {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"},
    :mark {:font "Lato"},
    :title
    {:font "Lato",
     :subtitleFont "Lato",
     :labelFont "Lato",
     :titleFont "Lato",
     :titleColor "#ffffff99"}},
   :grid-selected-column-css
   {:background-color "#00000088", :filter "brightness(200%)"},
   :base-block-color-selected :param/generated-colors>second-darkest,
   :block-title-font-color "#ffffff",
   :universal-pop-color :param/tetradss>0,
   :base-block-color "#04041e82",
   :editor-rim-color :param/generated-colors>colors>4,
   :base-block-filter-selected
   "drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)",
   :vega-default-color-scheme {:scheme "pastel2"},
   :data-colors :param/generated-colors>data-colors,
   :editor-grid-selected-font-color "#000000",
   :monospaced-font "Fira Code",
   :editor-grid-selected-background-color "#dc9cb0",
   :nivo-defaults
   {:font-family "Instagram Sans",
    :labels
    {:text
     {:fill "#ffffff",
      :font-size "16px",
      :font-family "Instagram Sans",
      :font-weight 700}},
    :tooltip
    {:container
     {:background "#000",
      :color "#ffffff",
      :text {:fill "#eeeeee"},
      :fontSize "18px",
      :borderRadius "4px",
      :boxShadow "0 1px 2px rgba(0, 0, 0, 0.55)",
      :padding "5px 9px"},
     :basic {:whiteSpace "pre", :display "flex", :alignItems "center"},
     :tableCell {:padding "3px 5px"}},
    :axis
    {:legend
     {:text
      {:fill "#ffffff",
       :font-size "14px",
       :font-family "Instagram Sans",
       :font-weight 700}},
     :ticks
     {:line {:stroke "#ffffff60"}, :text {:fill "#ffffff60", :font-weight 700}}},
    :grid {:line {:stroke "#ffffff", :strokeWidth 0, :strokeDasharray "0 0"}}},
   :editor-outer-rim-color :param/generated-colors>dominant,
   :grid-selected-font-color "#000000",
   :block-title-selected-font-color "#ffffff",
   :grid-selected-background-color "#a3d3ff",
   :grid-font-color "#ffffff",
   :canvas-background-css
   {:background-image [:string3 "url(" :param/rel-image-path ")"],
    :transition "all 1.8s ease-in-out",
    :background-size "cover",
    :background-color :param/generated-colors>dominant},
   :editor-font-color "#ffffff",
   :base-font "Oxygen Mono",
   :block-tab-selected-font-color "#c9d1ff",
   :editor-background-color "#000006",
   :editor-grid-font-color "#ffffff"},
  :shows-drag-22
  {:location "Warsaw, Poland",
   :show_date "2010-06-16",
   :show_id "https://www.metallica.com/tour/2010-06-16-warsaw-poland.html",
   :show_name "Sonisphere",
   :title "2010-06-16 Warsaw, Poland",
   :tour_name "World Magnetic",
   :ts "2023-09-24 19:19:11"},
  :connections-sys
  {:database_name "*cache-db*",
   :connection_id "history-db",
   :styler_highlight_8717ss 1},
  :sys {:selected-tab "octohedral snake", :selected-tab-idx 8},
  :searches-sub-types-sys
  {:item_key "aaaah-wednesday-the-day",
   :is_live nil,
   :items 1,
   :styler_highlight_4018a 0}},
 :selected-flow "live-scratch-flow"}