{:orders
 {:fields-sys [:field_name :field_type :data_type],
  :my_test_demo_cleaned_result_tbl (:query_error),
  :tables-sys
  [:db_schema :db_catalog :connection_id :schema_cat :table_name :fields],
  :new-query [:ffilename],
  :gen-viz-797 [:rows :date_posted],
  :gen-viz-94 [:diff],
  :my_test_demo_result_tblfff (:query_error),
  :time-freq-345d [:freq],
  :my_test_demo_cleaned_result2_tbl (:query_error),
  :stats-types-34 [:type],
  :offenses-drag-24
  [:DAY_OF_WEEK
   :DISTRICT
   :HOUR
   :INCIDENT_NUMBER
   :Lat
   :Location
   :Long
   :MONTH
   :OCCURRED_ON_DATE
   :OFFENSE_CODE
   :OFFENSE_CODE_GROUP
   :OFFENSE_DESCRIPTION
   :REPORTING_AREA
   :SHOOTING
   :STREET
   :UCR_PART
   :YEAR],
  :rowcnt-drag-2 [:rowcnt_sum],
  :gen-viz-828 [:agg :date_posted],
  :ufo_sightings (:query_error),
  :offenses (:query_error),
  :gen-viz-84 [:rows :country],
  :connections-sys [:database_name :connection_id :styler_highlight_8717ss],
  :ufo-sightings-drag-9
  [:city
   :country
   :date_posted
   :datetime
   :duration_hours
   :duration_seconds
   :duration_seconds_int
   :latitude
   :longitude
   :shape
   :state],
  :jgj (:query_error),
  :duration-hours-drag-43 [:duration_hours :rowcnt],
  :city-drag-26 [:city :rowcnt],
  :my_test_demo_cleaned_result2_tbl6
  [:soundcloud_streams
   :tiktok_posts
   :youtube_likes
   :release_date
   :spotify_playlist_count
   :explicit_track
   :pandora_track_stations
   :shazam_counts
   :album_name
   :deezer_playlist_reach
   :youtube_playlist_reach
   :artist
   :track_score
   :amazon_playlist_count
   :spotify_streams
   :all_time_rank
   :youtube_views
   :airplay_spins
   :tidal_popularity
   :deezer_playlist_count
   :siriusxm_spins
   :tiktok_views
   :pandora_streams
   :tiktok_likes
   :isrc
   :spotify_playlist_reach
   :spotify_popularity
   :apple_music_playlist_count
   :track],
  :state-drag-3 [:state :rowcnt],
  :my_test_demo_result_tbl (:query_error),
  :shape-drag-7 [:shape :rowcnt],
  :my-test-demo-result-tbl-drag-40 (:query_error)},
 :reco-preview nil,
 :sql-source
 {:my_test_demo_cleaned_result_tbl
  {:select [:*],
   :connection-id "system-db",
   :from [:my_test_demo_cleaned_result_tbl],
   :limit 111},
  :new-query
  {:select [:*],
   :connection-id :*client-name*,
   :from
   [{:data
     (let [dir "/home/ryanr/rvbbit/frontend/resources/public/images/large"
           rel-dir " ./images/large/"
           files (->>
                   (file-seq (clojure.java.io/file dir))
                   (filter (fn [x] (.isFile x)))
                   (filter
                     (fn [x]
                       (not (clojure.string/includes? (str (.getName x)) "8k"))))
                   (map (fn [x] (.getName x))))]
       (println (count files))
       (vec (for [f files] {:ffilename (str f)})))}],
   :page -1,
   :_last-run "11:02:42"},
  :gen-viz-797
  {:select [[[:count 1] :rows] :date_posted],
   :from
   [{:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}],
   :group-by [:date_posted]},
  :gen-viz-94
  {:select
   [[[:max [:round [:raw ["(100 * ((" nil ".0 - " nil ".0) / " nil ".0))"]] 2]]
     :diff]],
   :from
   [{:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}]},
  :my_test_demo_result_tblfff
  {:select [:*], :from [[:my_test_demo_result_tbl :jgj]], :_last-run "10:29:42"},
  :time-freq-345d
  {:select [:*],
   :connection-id :*client-name*,
   :order-by [[1 :asc]],
   :from [{:data (vec (for [e [1 5 15 30 45 60 90 120 240 600 3600]] {:freq e}))}],
   :_last-run "11:02:28"},
  :my_test_demo_cleaned_result2_tbl
  {:select [:*],
   :connection-id "system-db",
   :from [:my_test_demo_cleaned_result2_tbl],
   :limit 111},
  :stats-types-34
  {:select [:*],
   :connection-id :*client-name*,
   :order-by [1],
   :from
   [{:data
     (vec
       (for
         [t
          (mapv
            (fn [x] (cstr/replace (str x) ":" ""))
            (keys (rvbbit-backend.websockets/stats-keywords)))]
         {:type t}))}],
   :_last-run "11:02:36"},
  :offenses-drag-24
  {:select
   [:DAY_OF_WEEK
    :DISTRICT
    :HOUR
    :INCIDENT_NUMBER
    :Lat
    :Location
    :Long
    :MONTH
    :OCCURRED_ON_DATE
    :OFFENSE_CODE
    :OFFENSE_CODE_GROUP
    :OFFENSE_DESCRIPTION
    :REPORTING_AREA
    :SHOOTING
    :STREET
    :UCR_PART
    :YEAR],
   :from [[:offenses :dd484]]},
  :rowcnt-drag-2
  {:select [[[:sum :rowcnt] :rowcnt_sum]],
   :from
   [[{:select [:city [[:count 1] :rowcnt]],
      :from
      [[{:select
         [:city
          :country
          :date_posted
          :datetime
          :duration_hours
          :duration_seconds
          :duration_seconds_int
          :latitude
          :longitude
          :shape
          :state],
         :from [[:ufo_sightings :jj584]],
         :order-by [[:city :asc]]}
        :ff571]],
      :group-by [:city],
      :order-by [[:rowcnt :desc]]}
     :yy403]]},
  :gen-viz-828
  {:select [[[[:count 1]] :agg] :date_posted],
   :from
   [{:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}],
   :order-by [[:date_posted :desc]],
   :group-by [:date_posted]},
  :ufo_sightings
  {:select [:*], :connection-id "system-db", :from [:ufo_sightings], :limit 111},
  :offenses
  {:select [:*], :connection-id "system-db", :from [:offenses], :limit 111},
  :gen-viz-84
  {:select [[[:count 1] :rows] :country],
   :from
   [{:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}],
   :group-by [:country]},
  :ufo-sightings-drag-9
  {:select
   [:city
    :country
    :date_posted
    :datetime
    :duration_hours
    :duration_seconds
    :duration_seconds_int
    :latitude
    :longitude
    :shape
    :state],
   :from [[:ufo_sightings :jj584]],
   :order-by [[:city :asc]]},
  :jgj {:select [:*], :connection-id "system-db", :from [:jgj], :limit 111},
  :duration-hours-drag-43
  {:select [:duration_hours [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:city
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :jj584]],
      :order-by [[:city :asc]]}
     :cc350]],
   :group-by [:duration_hours],
   :order-by [[:rowcnt :desc]]},
  :city-drag-26
  {:select [:city [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:city
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :jj584]],
      :order-by [[:city :asc]]}
     :ff571]],
   :group-by [:city],
   :order-by [[:rowcnt :desc]]},
  :my_test_demo_cleaned_result2_tbl6
  {:select [:*],
   :connection-id :*client-name*,
   :from [:my_test_demo_cleaned_result2_tbl]},
  :state-drag-3
  {:select [:state [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:city
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :jj584]],
      :order-by [[:city :asc]]}
     :uu58]],
   :group-by [:state],
   :order-by [[:rowcnt :desc]]},
  :my_test_demo_result_tbl
  {:select [:*],
   :connection-id "system-db",
   :from [:my_test_demo_result_tbl],
   :limit 111},
  :shape-drag-7
  {:select [:shape [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:city
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :jj584]],
      :order-by [[:city :asc]]}
     :hh354]],
   :group-by [:shape],
   :order-by [[:rowcnt :desc]]},
  :my-test-demo-result-tbl-drag-40
  {:select
   [:date_of_birth :email :first_name :job_title :last_name :phone :sex :user_id],
   :order-by [3],
   :from [[:my_test_demo_result_tbl :mm74471]]}},
 :meta
 {:fields-sys
  {:fields
   {:field_name
    {:data-type "string",
     :distinct 8,
     :group-by? true,
     :commons {"user_id" 1, "sex" 1, "phone" 1},
     :cardinality 100},
    :field_type
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"VARCHAR" 8},
     :cardinality 12},
    :data_type
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"string" 8},
     :cardinality 12}},
   :rowcount 8},
  :my_test_demo_cleaned_result_tbl
  {:fields
   {:query_error
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"{:datasource #object[com.zaxxer.hikari.HikariDataS" 1,
      "(from database connection)" 1,
      "[SQLITE_ERROR] SQL error or missing database (no such table: my_test_demo_cleaned_result_tbl)"
      1},
     :cardinality 100}},
   :rowcount 3},
  :tables-sys
  {:fields
   {:db_schema
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"none" 3},
     :cardinality 33},
    :db_catalog
    {:data-type "unknown",
     :distinct 1,
     :group-by? true,
     :commons {nil 3},
     :cardinality 33},
    :connection_id
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"popular-coral-horse-21" 3},
     :cardinality 33},
    :schema_cat
    {:data-type "unknown",
     :distinct 1,
     :group-by? false,
     :commons {nil 3},
     :cardinality 33},
    :table_name
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {"time_freq_345d" 1, "stats_types_34" 1, "my_test_demo_result_tbl" 1},
     :cardinality 100},
    :fields
    {:data-type "integer",
     :distinct 2,
     :group-by? false,
     :commons {2 2, 9 1},
     :cardinality 66}},
   :rowcount 3},
  :new-query
  {:fields
   {:ffilename
    {:data-type "string",
     :distinct 1041,
     :group-by? true,
     :commons
     {"b64-image5-57853-95564-4k.webp" 1,
      "b64-image-31549-41819-4k.webp" 1,
      "b64-image3-65849-64925-4k.webp" 1},
     :cardinality 100}},
   :rowcount 1041},
  :gen-viz-797
  {:fields
   {:rows
    {:data-type "integer",
     :distinct 230,
     :group-by? false,
     :commons {76 5, 146 4, 116 4},
     :cardinality 72},
    :date_posted
    {:data-type "string",
     :distinct 317,
     :group-by? true,
     :commons {"2000-12-09" 1, "2010-08-30" 1, "2003-11-08" 1},
     :cardinality 100}},
   :rowcount 317},
  :gen-viz-94
  {:fields
   {:diff
    {:data-type "unknown",
     :distinct 1,
     :group-by? false,
     :commons {nil 1},
     :cardinality 100}},
   :rowcount 1},
  :my_test_demo_result_tblfff
  {:fields
   {:query_error
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"{:datasource #object[com.zaxxer.hikari.HikariDataS" 1,
      "(from database connection)" 1,
      "[SQLITE_ERROR] SQL error or missing database (no such table: my_test_demo_result_tbl)"
      1},
     :cardinality 100}},
   :rowcount 3},
  :time-freq-345d
  {:fields
   {:freq
    {:data-type "integer",
     :distinct 11,
     :group-by? true,
     :commons {30 1, 120 1, 45 1},
     :cardinality 100}},
   :rowcount 11},
  :my_test_demo_cleaned_result2_tbl
  {:fields
   {:query_error
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"{:datasource #object[com.zaxxer.hikari.HikariDataS" 1,
      "(from database connection)" 1,
      "[SQLITE_ERROR] SQL error or missing database (no such table: my_test_demo_cleaned_result2_tbl)"
      1},
     :cardinality 100}},
   :rowcount 3},
  :stats-types-34
  {:fields
   {:type
    {:data-type "string",
     :distinct 52,
     :group-by? true,
     :commons {"flows" 1, "workers" 1, "queue-tasks" 1},
     :cardinality 100}},
   :rowcount 52},
  :offenses-drag-24
  {:fields
   {:SHOOTING
    {:data-type "unknown",
     :distinct 1,
     :group-by? true,
     :commons {nil 500},
     :cardinality 0},
    :DISTRICT
    {:data-type "string",
     :distinct 13,
     :group-by? true,
     :commons {"C11" 82, "B2" 75, "B3" 49},
     :cardinality 2},
    :INCIDENT_NUMBER
    {:data-type "string",
     :distinct 454,
     :group-by? true,
     :commons {"I182070397" 5, "I182070779" 4, "I182070889" 3},
     :cardinality 90},
    :OFFENSE_DESCRIPTION
    {:data-type "string",
     :distinct 89,
     :group-by? true,
     :commons
     {"SICK/INJURED/MEDICAL - PERSON" 43,
      "VERBAL DISPUTE" 34,
      "INVESTIGATE PERSON" 33},
     :cardinality 17},
    :DAY_OF_WEEK
    {:data-type "string",
     :distinct 7,
     :group-by? true,
     :commons {"0001-01-07" 228, "0001-01-08" 178, "0001-01-06" 75},
     :cardinality 1},
    :MONTH
    {:data-type "integer",
     :distinct 4,
     :group-by? true,
     :commons {9 477, 8 21, 7 1},
     :cardinality 0},
    :YEAR
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {2018 500},
     :cardinality 0},
    :HOUR
    {:data-type "integer",
     :distinct 24,
     :group-by? true,
     :commons {18 45, 14 33, 20 32},
     :cardinality 4},
    :STREET
    {:data-type "string",
     :distinct 275,
     :group-by? true,
     :commons {nil 41, "WASHINGTON ST" 20, "HUNTINGTON AVE" 12},
     :cardinality 55},
    :OFFENSE_CODE_GROUP
    {:data-type "string",
     :distinct 41,
     :group-by? true,
     :commons
     {"Motor Vehicle Accident Response" 69, "Medical Assistance" 50, "Larceny" 41},
     :cardinality 8},
    :UCR_PART
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons {"Part Three" 265, "Part Two" 140, "Part One" 93},
     :cardinality 0},
    :Long
    {:data-type "float",
     :distinct 413,
     :group-by? true,
     :commons {-1 6, -71.1136693 5, nil 5},
     :cardinality 82},
    :REPORTING_AREA
    {:data-type "integer",
     :distinct 282,
     :group-by? true,
     :commons {nil 42, 519 6, 177 5},
     :cardinality 56},
    :Location
    {:data-type "string",
     :distinct 413,
     :group-by? true,
     :commons
     {"(-1.00000000, -1.00000000)" 6,
      "(0.00000000, 0.00000000)" 5,
      "(42.24635332, -71.11366930)" 5},
     :cardinality 82},
    :OFFENSE_CODE
    {:data-type "integer",
     :distinct 89,
     :group-by? true,
     :commons {3006 43, 3301 34, 3115 33},
     :cardinality 17},
    :Lat
    {:data-type "float",
     :distinct 413,
     :group-by? true,
     :commons {-1 6, 42.24635332 5, nil 5},
     :cardinality 82},
    :OCCURRED_ON_DATE
    {:data-type "string",
     :distinct 404,
     :group-by? true,
     :commons
     {"2018-09-02 00:00:00.000000" 5,
      "2018-09-03 10:00:00.000000" 5,
      "2018-09-01 17:03:00.000000" 5},
     :cardinality 80}},
   :rowcount 500},
  :rowcnt-drag-2
  {:fields
   {:rowcnt_sum
    {:data-type "integer",
     :distinct 1,
     :group-by? false,
     :commons {80332 1},
     :cardinality 100}},
   :rowcount 1},
  :gen-viz-828
  {:fields
   {:agg
    {:data-type "integer",
     :distinct 230,
     :group-by? false,
     :commons {76 5, 146 4, 116 4},
     :cardinality 72},
    :date_posted
    {:data-type "string",
     :distinct 317,
     :group-by? true,
     :commons {"2000-12-09" 1, "2010-08-30" 1, "2003-11-08" 1},
     :cardinality 100}},
   :rowcount 317},
  :ufo_sightings
  {:fields
   {:query_error
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"{:datasource #object[com.zaxxer.hikari.HikariDataS" 1,
      "(from database connection)" 1,
      "[SQLITE_ERROR] SQL error or missing database (no such table: ufo_sightings)"
      1},
     :cardinality 100}},
   :rowcount 3},
  :offenses
  {:fields
   {:query_error
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"{:datasource #object[com.zaxxer.hikari.HikariDataS" 1,
      "(from database connection)" 1,
      "[SQLITE_ERROR] SQL error or missing database (no such table: offenses)" 1},
     :cardinality 100}},
   :rowcount 3},
  :gen-viz-84
  {:fields
   {:rows
    {:data-type "integer",
     :distinct 6,
     :group-by? false,
     :commons {65114 1, 1905 1, 105 1},
     :cardinality 100},
    :country
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons {"us" 1, "gb" 1, "de" 1},
     :cardinality 100}},
   :rowcount 6},
  :connections-sys
  {:fields
   {:database_name
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {"*cache-db*" 6, "SQLite" 3, "*csv-import-db*" 1},
     :cardinality 30},
    :connection_id
    {:data-type "string",
     :distinct 10,
     :group-by? true,
     :commons {"imported" 1, "bigfoot-ufos" 1, "popular-coral-horse-21" 1},
     :cardinality 100},
    :styler_highlight_8717ss
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {1 10},
     :cardinality 10}},
   :rowcount 10},
  :ufo-sightings-drag-9
  {:fields
   {:duration_seconds_int
    {:data-type "integer",
     :distinct 54,
     :group-by? true,
     :commons {120 53, 180 45, 300 45},
     :cardinality 10},
    :city
    {:data-type "string",
     :distinct 157,
     :group-by? true,
     :commons {"akron" 41, "abilene" 32, "aberdeen" 19},
     :cardinality 31},
    :date_posted
    {:data-type "string",
     :distinct 194,
     :group-by? true,
     :commons {"2001-08-05" 20, "2008-10-31" 12, "2009-12-12" 11},
     :cardinality 38},
    :longitude
    {:data-type "float",
     :distinct 178,
     :group-by? true,
     :commons {-81.5191667 41, 138.598633 37, -99.7327778 30},
     :cardinality 35},
    :state
    {:data-type "string",
     :distinct 45,
     :group-by? true,
     :commons {nil 120, "oh" 48, "tx" 39},
     :cardinality 9},
    :duration_seconds
    {:data-type "string",
     :distinct 54,
     :group-by? true,
     :commons {"120" 53, "300" 45, "180" 45},
     :cardinality 10},
    :duration_hours
    {:data-type "string",
     :distinct 225,
     :group-by? true,
     :commons {"2 minutes" 21, "3 minutes" 18, "1 minute" 18},
     :cardinality 44},
    :shape
    {:data-type "string",
     :distinct 22,
     :group-by? true,
     :commons {"light" 103, "triangle" 62, "fireball" 49},
     :cardinality 4},
    :datetime
    {:data-type "string",
     :distinct 492,
     :group-by? true,
     :commons
     {"1989-06-04 22:30:00.000000" 3,
      "2010-05-29 21:50:00.000000" 2,
      "2006-11-30 12:17:00.000000" 2},
     :cardinality 98},
    :latitude
    {:data-type "string",
     :distinct 178,
     :group-by? true,
     :commons {"41.0813889" 41, "-34.928661" 37, "32.4486111" 30},
     :cardinality 35},
    :country
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons {"us" 288, nil 113, "au" 37},
     :cardinality 1}},
   :rowcount 500},
  :jgj
  {:fields
   {:query_error
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"{:datasource #object[com.zaxxer.hikari.HikariDataS" 1,
      "(from database connection)" 1,
      "[SQLITE_ERROR] SQL error or missing database (no such table: jgj)" 1},
     :cardinality 100}},
   :rowcount 3},
  :duration-hours-drag-43
  {:fields
   {:duration_hours
    {:data-type "string",
     :distinct 500,
     :group-by? true,
     :commons {"30 min." 1, "3 days" 1, "5-7 min" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 162,
     :group-by? false,
     :commons {12 29, 13 23, 14 22},
     :cardinality 32}},
   :rowcount 500},
  :city-drag-26
  {:fields
   {:city
    {:data-type "string",
     :distinct 500,
     :group-by? true,
     :commons {"ottawa (canada)" 1, "burlington (canada)" 1, "cary" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 118,
     :group-by? false,
     :commons {27 35, 26 24, 29 23},
     :cardinality 23}},
   :rowcount 500},
  :reco-counts
  {:fields
   {:table_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"offenses_drag_26" 1},
     :cardinality 100},
    :cnt
    {:data-type "integer",
     :distinct 1,
     :group-by? false,
     :commons {917 1},
     :cardinality 100}},
   :rowcount 1},
  :my_test_demo_cleaned_result2_tbl6
  {:fields
   {:deezer_playlist_reach
    {:data-type "integer",
     :distinct 428,
     :group-by? true,
     :commons {"" 72, 19628 2, 33088 1},
     :cardinality 85},
    :siriusxm_spins
    {:data-type "integer",
     :distinct 298,
     :group-by? true,
     :commons {"" 136, 2 6, 3 6},
     :cardinality 59},
    :spotify_playlist_count
    {:data-type "integer",
     :distinct 475,
     :group-by? true,
     :commons {"" 7, 2 6, 5 5},
     :cardinality 94},
    :youtube_views
    {:data-type "integer",
     :distinct 464,
     :group-by? true,
     :commons {"" 37, 98081493 1, 920878032 1},
     :cardinality 92},
    :release_date
    {:data-type "string",
     :distinct 356,
     :group-by? true,
     :commons {"3/22/2024" 11, "4/12/2024" 8, "5/17/2024" 7},
     :cardinality 71},
    :youtube_likes
    {:data-type "integer",
     :distinct 461,
     :group-by? true,
     :commons {"" 40, 4183405 1, 1504385 1},
     :cardinality 92},
    :spotify_popularity
    {:data-type "integer",
     :distinct 66,
     :group-by? true,
     :commons {"" 73, 78 32, 80 29},
     :cardinality 13},
    :airplay_spins
    {:data-type "integer",
     :distinct 436,
     :group-by? true,
     :commons {"" 50, 1 5, 2 3},
     :cardinality 87},
    :tiktok_posts
    {:data-type "integer",
     :distinct 392,
     :group-by? true,
     :commons {"" 107, 1800000 2, 1500000 2},
     :cardinality 78},
    :explicit_track
    {:data-type "integer",
     :distinct 2,
     :group-by? true,
     :commons {0 293, 1 207},
     :cardinality 0},
    :amazon_playlist_count
    {:data-type "integer",
     :distinct 143,
     :group-by? true,
     :commons {"" 71, 1 9, 38 8},
     :cardinality 28},
    :tidal_popularity
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"" 500},
     :cardinality 0},
    :artist
    {:data-type "string",
     :distinct 306,
     :group-by? true,
     :commons {"Bad Bunny" 10, "Billie Eilish" 10, "Drake" 10},
     :cardinality 61},
    :spotify_streams
    {:data-type "integer",
     :distinct 478,
     :group-by? true,
     :commons {"" 16, 1655575417 3, 250080413 2},
     :cardinality 95},
    :shazam_counts
    {:data-type "integer",
     :distinct 435,
     :group-by? true,
     :commons {"" 66, 775583 1, 5114752 1},
     :cardinality 87},
    :all_time_rank
    {:data-type "integer",
     :distinct 497,
     :group-by? true,
     :commons {482 2, 454 2, 355 2},
     :cardinality 99},
    :pandora_track_stations
    {:data-type "integer",
     :distinct 407,
     :group-by? true,
     :commons {"" 91, 1442 2, 100 2},
     :cardinality 81},
    :youtube_playlist_reach
    {:data-type "integer",
     :distinct 417,
     :group-by? true,
     :commons {"" 80, 1318392 3, 934654 2},
     :cardinality 83},
    :apple_music_playlist_count
    {:data-type "integer",
     :distinct 236,
     :group-by? true,
     :commons {"" 56, 1 15, 37 7},
     :cardinality 47},
    :tiktok_views
    {:data-type "integer",
     :distinct 413,
     :group-by? true,
     :commons {"" 88, 7945975878 1, 688302023 1},
     :cardinality 82},
    :track_score
    {:data-type "float",
     :distinct 392,
     :group-by? true,
     :commons {79.9 4, 101.4 4, 76.2 4},
     :cardinality 78},
    :deezer_playlist_count
    {:data-type "integer",
     :distinct 179,
     :group-by? true,
     :commons {"" 72, 7 13, 1 11},
     :cardinality 35},
    :album_name
    {:data-type "string",
     :distinct 458,
     :group-by? true,
     :commons
     {"HIT ME HARD AND SOFT" 7,
      "Un Verano Sin Ti" 5,
      "Amor Prohibido (Remasterizado 2024/30th Anniversary)" 4},
     :cardinality 91},
    :pandora_streams
    {:data-type "integer",
     :distinct 417,
     :group-by? true,
     :commons {"" 84, 63815 1, 1354692 1},
     :cardinality 83},
    :tiktok_likes
    {:data-type "integer",
     :distinct 413,
     :group-by? true,
     :commons {"" 88, 208270183 1, 55379491 1},
     :cardinality 82},
    :isrc
    {:data-type "string",
     :distinct 500,
     :group-by? true,
     :commons {"DEE862300564" 1, "QM7282306253" 1, "GBAHS1700024" 1},
     :cardinality 100},
    :soundcloud_streams
    {:data-type "string",
     :distinct 222,
     :group-by? true,
     :commons {"" 279, 22121803 1, 319835943 1},
     :cardinality 44},
    :spotify_playlist_reach
    {:data-type "integer",
     :distinct 493,
     :group-by? true,
     :commons {"" 7, 2190 2, 70485920 1},
     :cardinality 98},
    :track
    {:data-type "string",
     :distinct 487,
     :group-by? true,
     :commons {"Danza Kuduro - Cover" 6, "Moonlight" 2, "A Bar Song (Tipsy)" 2},
     :cardinality 97}},
   :rowcount 500},
  :state-drag-3
  {:fields
   {:state
    {:data-type "string",
     :distinct 68,
     :group-by? true,
     :commons {"nd" 1, "az" 1, "in" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 68,
     :group-by? false,
     :commons {183 1, 968 1, 633 1},
     :cardinality 100}},
   :rowcount 68},
  :my_test_demo_result_tbl
  {:fields
   {:query_error
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"{:datasource #object[com.zaxxer.hikari.HikariDataS" 1,
      "(from database connection)" 1,
      "[SQLITE_ERROR] SQL error or missing database (no such table: my_test_demo_result_tbl)"
      1},
     :cardinality 100}},
   :rowcount 3},
  :shape-drag-7
  {:fields
   {:shape
    {:data-type "string",
     :distinct 30,
     :group-by? true,
     :commons {"formation" 1, "cone" 1, "rectangle" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 25,
     :group-by? false,
     :commons {1 5, 2 2, 1283 1},
     :cardinality 83}},
   :rowcount 30},
  :my-test-demo-result-tbl-drag-40
  {:fields
   {:query_error
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"{:datasource #object[com.zaxxer.hikari.HikariDataS" 1,
      "(from database connection)" 1,
      "[SQLITE_ERROR] SQL error or missing database (no such table: my_test_demo_result_tbl)"
      1},
     :cardinality 100}},
   :rowcount 3}},
 :default-col-widths
 {:virtual-panel
  {:kick--853651793 511,
   :kick--92024836 ##Inf,
   :kick--1188849102 511,
   :kick-1656479094 511,
   :kick--1630071692 511},
  :block-135 {:stats-types-34 111},
  :block-11609 {:city-drag-26 ##Inf},
  :block-7416 {:rowcnt-drag-2 ##Inf},
  :block-8908 {:my_test_demo_result_tbl6 100},
  :block-10810 {:time-freq-345d 111},
  :block-1794 {:my_test_demo_cleaned_result2_tbl6 100},
  :block-10456 {:my_test_demo_cleaned_result_tbl13 100},
  :block-8805 {:duration-hours-drag-43 ##Inf},
  :block-10266 {:my_test_demo_result_tbl8 311},
  :block-2031 {:sex-drag-17 361},
  :block-5729 {:new-clojure-5 100},
  :block-12072 {:my-test-demo-result-tbl-drag-40 511},
  :system-connections-list* {:connections-sys 161},
  :system-fields-list* {:fields-sys 210},
  :block-7319 {:shape-drag-7 ##Inf},
  :block-3777 {:state-drag-3 ##Inf},
  :block-229 {:my_test_demo_result_tblfff 361},
  :block-7523 {:new-query 561},
  :block-1449 {:ufo-sightings-drag-9 ##Inf},
  :system-tables-list* {:tables-sys 165},
  :block-4346 {:offenses-drag-24 ##Inf}},
 :runstream-drops nil,
 :tabs
 ["through the rabbit hole and out the other side"
  "sapphire ape"
  "fat zebra"
  "star-shaped wallaby"
  "globular koala"
  "salmon lion"
  "thin spider"
  "upbeat camel"],
 :selected-cols nil,
 :server
 {:settings
  {:harvest-on-boot? true,
   :default "./screens/looking-glass-redux.edn",
   :eleven-labs-api-key nil,
   :modes
   {:pre
    [:pre
     {:style
      {:color :theme/editor-outer-rim-color,
       :background-color "#00000000",
       :border "none",
       :text-shadow "4px 4px 4px #00000088",
       :font-size "17px",
       :font-family :theme/monospaced-font}}
     [:string3 :*data]],
    :edn [:edn :*data],
    :text [:console :*data],
    :terminal [:terminal :*data],
    :data [:data-viewer :*data],
    :pretty [:pretty-box :*data],
    :rowset [:honeycomb {:select [:*], :from {:data :*data}} 11 9],
    :clover [:box :child :*data]},
   :kits {},
   :clover-templates
   {:color-theft
    {:args [:*input],
     :body
     [:data-viewer [:run-solver [:get-my-colors {:input-image-path :*input}]]]},
    :pretty-box
    {:args [:*input],
     :body
     [:box
      :size
      "auto"
      :align
      :center
      :justify
      :center
      :style
      {:color :theme/editor-outer-rim-color,
       :font-size [:auto-size-px [:string3 :*input]]}
      :child
      [:string3 :*input]]},
    :clj
    {:args [:code],
     :body
     [:run-solver
      {:signal false, :cache? false, :type :clojure, :input-map {}, :data :code}]},
    :clj2
    {:args [:code],
     :body
     [:run-solver
      {:signal false, :cache? false, :type :clojure2, :input-map {}, :data :code}]},
    :cheese-burger
    {:args [:x],
     :body
     [:box
      :style
      {:color "yellow", :font-size "23px"}
      :child
      [:string3 :x "CHEESEBURGER!"]]}},
   :eleven-labs-default-voice-name "Not OG Buffy",
   :debug-level 1,
   :screens
   ["GGGeat-ochre-mole-exiled-from-abyssal-plain"
    "SSSSSSuccessful-oval-sea-urchin-of-mountain-range"
    "SSuccessful-oval-sea-urchin-of-mountain-range"
    "aaa-run-amok"
    "aaaaah-esday-the-day"
    "aaaaah-wednesday-the-day"
    "aaaah-wednesday-the-day"
    "alarm-clock-tv"
    "alarm-clock1"
    "alarm-clock2"
    "alarm-clock22"
    "alarm-clock23"
    "alice-puzzle-1"
    "asdasdasdasd"
    "autumn-theme"
    "battle-mage"
    "bigfoot-snapshots"
    "bigfoot-snapshots2"
    "bigfoot-snapshots3"
    "blackberries"
    "blackberries2"
    "blackberries3"
    "blackberries3-narrow"
    "blackberries3-narrow2"
    "blank-blue"
    "blank-sizzle"
    "blank-sizzle2"
    "blue-pines"
    "boston-test-10-3-23"
    "broken-jacket"
    "bunch of bullshit"
    "bunch of bullshit2"
    "bunch of bullshit4"
    "caliope"
    "calliope"
    "canvas-scrubber-test1"
    "capecod-viking"
    "chaos simple"
    "chaos-views"
    "chompers"
    "claude-testing2"
    "clean-grey-defaults"
    "code-data-literal-stonks-test"
    "conifer-boughs"
    "counting-lord-of-the-woods"
    "crazy-alice"
    "dark-crested-jackelope"
    "data-literals-test-sunday"
    "data-literals-test-sundaydd"
    "demo-dark-pumpkin-bkgrd-sept23"
    "demo-light-bkgrd-sept23"
    "demo-lime-green-slime"
    "desktops-and-broomsticks"
    "duality-of-lepus"
    "error-monitor"
    "error-monitor-vanessa"
    "error-monitor-vanessa2"
    "error-monitor-vanessa3"
    "error-monitor-vanessa4"
    "error-monitor-vanessa5"
    "evil-main-street"
    "fake-books-1"
    "fake-bricks"
    "fetching-pentagonal-termite-of-tghe-submarine-canyon"
    "final-fantasy-dorchester"
    "fox-hills"
    "game-of-life"
    "glass-fish-board-test"
    "green-storm-city"
    "hue-board-1"
    "late-winter-theme"
    "lavender-side-eye"
    "layout-test-1"
    "layout-test-12"
    "light-theme"
    "literal-data-test"
    "looking-glass-conway"
    "looking-glass-redux"
    "looking-glass-redux-conway2"
    "looking-glass-redux-mix5"
    "looking-glass-redux-test"
    "looking-glass-redux-viking"
    "looking-glass-redux-viking2"
    "looking-glass-redux2"
    "looking-glass-redux23a"
    "looking-glass-redux23abb"
    "looking-glass-redux23b"
    "looking-glass-redux2a"
    "looking-glass-redux2aa"
    "looking-glass-redux45"
    "looking-glass-redux79"
    "looking-glass-sine-wave"
    "luck-of-the-irish"
    "mapbox-test"
    "may-20"
    "my-goodness"
    "my-goodness-the-sequel"
    "neverwinter-amy"
    "night-city-never-sleeps"
    "nightcity-cape-cod"
    "nivo-getting-better!"
    "nivo-hacking-2023"
    "nivo-hacking-2023333"
    "nivo-hacking-october-2nd"
    "nostromo-console"
    "old-defaults"
    "old-fashioned-christmas"
    "old-town-snow-stars"
    "pensive-look"
    "pensive-look2"
    "pine-wood-dawn"
    "pink-and-green-elk"
    "pink-dusk-falls"
    "pinup-rabbit-fields"
    "pomp-girl1"
    "pomp-girl2"
    "poor-touring-me"
    "pres-sql-test-1"
    "purple-dusk-old-town"
    "purple-nightshades"
    "purple-techno-sunset"
    "recharts-test-blocks"
    "refresh-test"
    "retro-machines"
    "riffle-test"
    "server-stats"
    "server-stats2"
    "sick-of-your-shit"
    "sizzle-board-1"
    "sneaky-swamp-creatures1"
    "solver-test"
    "stop-drawing-dead-dashboards"
    "swamp-nightgown"
    "swamp-reacher"
    "system-monitor"
    "system-monitor2"
    "tallica-param-test2"
    "tangerine-dreams"
    "technicolor-shanny"
    "the-future-soon"
    "the-generated-lass"
    "the-generated-lass-glow"
    "the-generated-lass-ne"
    "the-generated-lass-sgt"
    "the-generated-lassff"
    "the-memo"
    "the-memo2"
    "the-outer-blues"
    "trad-hybrid"
    "tweet-bigfoot-is-blurry"
    "tweet-demo-thing-bigfoot-is-blurry"
    "unnamed-screen!"
    "viking-pastels"
    "weave-test"
    "weave-test1"
    "weave-test122"
    "who ya gonna call?"
    "who ya gonna call? again"
    "winter-theme"
    "winter-theme-choom"
    "winter-theme2"
    "winter-theme33"
    "winter-theme45"
    "winter-theme47"
    "winter-twin-peaks"
    "witchy425"
    "wonderland-horror-interface"
    "wow-board"]}},
 :runstreams {"flow-forever" {:open? false, :open-outputs? true}},
 :editor? true,
 :buffy? false,
 :memory [570600963 529034567 4294705152],
 :client-name :stirring-pink-mule-21,
 :alt-key-held? false,
 :flow-editor? true,
 :openai-api-key "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",
 :window {:w 2478, :h 1429},
 :post-meta
 {:new-query {:* {:rowcount 1041}},
  :gen-viz-797 {:* {:rowcount 317}},
  :time-freq-345d {:* {:rowcount 11}},
  :stats-types-34 {:* {:rowcount 52}},
  :ufo_sightings {},
  :gen-viz-84 {:* {:rowcount 6}},
  :connections-sys {:* {:rowcount 10}},
  :my_test_demo_cleaned_result2_tbl6 {:* {:rowcount 4600}},
  :state-drag-3 {:* {:rowcount 68}},
  :shape-drag-7 {:* {:rowcount 30}},
  :my-test-demo-result-tbl-drag-40 {}},
 :status
 {:heartbeat
  {:kick
   [:solver-status/stirring-pink-mule-21>raw-custom-override-626613056>running?
    :solver-meta/raw-custom-override-626613056
    :solver-status/stirring-pink-mule-21>get-my-colors896119880>running?
    :solver-status/stirring-pink-mule-21>raw-custom-override-780310743>running?
    :flow-status/flow-forever>*running?
    :solver/raw-custom-override1399464165
    :solver-status/*client-name*>raw-custom-override-626613056
    :solver-status/stirring-pink-mule-21>raw-custom-override1399464165>running?
    :time/now
    :solver/get-my-colors896119880
    :solver/raw-custom-override-626613056
    :time/minute
    :solver/get-my-colors-1838551575
    :solver/raw-custom-override872144414
    :solver/raw-custom-override-780310743
    :solver-status/stirring-pink-mule-21>raw-custom-override872144414>running?
    :repl-ns/*client-name*
    :solver-meta/raw-custom-override-626613056>output>evald-result>out
    :flow-status/live-scratch-flow>*running?
    :solver-status/stirring-pink-mule-21>get-my-colors-1838551575>running?]},
  :file-change {:file-changed :done},
  :alert1 {:alerts :alert2}},
 :screen-name "nostromo-console",
 :recos-page2 0,
 :selected-tab "thin spider",
 :col-names nil,
 :snapshots nil,
 :openai-org-id "org-YLngjih2M4oju0tnnZtKCAYg",
 :alerts
 [[[:box
    :child
    "sent screen save request to server... Please wait."
    :style
    {:font-size "12px", :opacity 0.66}]
   11
   0.5
   5457
   1100038046]],
 :recos-page 0,
 :rs-overrides-hashmap {"flow-forever" nil},
 :base-sniff-queries
 {:my_test_demo_result_tbl -769592865,
  :jgj -1887403909,
  :my_test_demo_cleaned_result_tbl 600799380,
  :my_test_demo_cleaned_result2_tbl -1667698909,
  :ufo_sightings 484893751,
  :offenses -505802446},
 :elevenlabs-api-key "f74e20dec69741c2d51663cbd8cd4cf6",
 :user-params-hash -1335232540,
 :grid-recos? true,
 :preview-keys2 [],
 :session-hash -2047825762,
 :resolved-queries
 {:new-query
  {:select [:*],
   :connection-id :*client-name*,
   :from
   [{:data
     (let [dir "/home/ryanr/rvbbit/frontend/resources/public/images/large"
           rel-dir " ./images/large/"
           files (->>
                   (file-seq (clojure.java.io/file dir))
                   (filter (fn [x] (.isFile x)))
                   (filter
                     (fn [x]
                       (not (clojure.string/includes? (str (.getName x)) "8k"))))
                   (map (fn [x] (.getName x))))]
       (println (count files))
       (vec (for [f files] {:ffilename (str f)})))}],
   :page -1,
   :_last-run "11:02:42"},
  :gen-viz-797
  {:select [[[:count 1] :rows] :date_posted],
   :from
   [{:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}],
   :group-by [:date_posted]},
  :gen-viz-94
  {:select
   [[[:max [:round [:raw ["(100 * ((" nil ".0 - " nil ".0) / " nil ".0))"]] 2]]
     :diff]],
   :from
   [{:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}]},
  :my_test_demo_result_tblfff
  {:select [:*], :from [[:my_test_demo_result_tbl :jgj]], :_last-run "10:29:42"},
  :time-freq-345d
  {:select [:*],
   :connection-id :*client-name*,
   :order-by [[1 :asc]],
   :from [{:data (vec (for [e [1 5 15 30 45 60 90 120 240 600 3600]] {:freq e}))}],
   :_last-run "11:02:28"},
  :stats-types-34
  {:select [:*],
   :connection-id :*client-name*,
   :order-by [1],
   :from
   [{:data
     (vec
       (for
         [t
          (mapv
            (fn [x] (cstr/replace (str x) ":" ""))
            (keys (rvbbit-backend.websockets/stats-keywords)))]
         {:type t}))}],
   :_last-run "11:02:36"},
  :offenses-drag-24
  {:select
   [:DAY_OF_WEEK
    :DISTRICT
    :HOUR
    :INCIDENT_NUMBER
    :Lat
    :Location
    :Long
    :MONTH
    :OCCURRED_ON_DATE
    :OFFENSE_CODE
    :OFFENSE_CODE_GROUP
    :OFFENSE_DESCRIPTION
    :REPORTING_AREA
    :SHOOTING
    :STREET
    :UCR_PART
    :YEAR],
   :from [[:offenses :dd484]]},
  :rowcnt-drag-2
  {:select [[[:sum :rowcnt] :rowcnt_sum]],
   :from
   [[{:select [:city [[:count 1] :rowcnt]],
      :from
      [[{:select
         [:city
          :country
          :date_posted
          :datetime
          :duration_hours
          :duration_seconds
          :duration_seconds_int
          :latitude
          :longitude
          :shape
          :state],
         :from [[:ufo_sightings :jj584]],
         :order-by [[:city :asc]]}
        :ff571]],
      :group-by [:city],
      :order-by [[:rowcnt :desc]]}
     :yy403]]},
  :gen-viz-828
  {:select [[[[:count 1]] :agg] :date_posted],
   :from
   [{:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}],
   :order-by [[:date_posted :desc]],
   :group-by [:date_posted]},
  :gen-viz-84
  {:select [[[:count 1] :rows] :country],
   :from
   [{:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}],
   :group-by [:country]},
  :ufo-sightings-drag-9
  {:select
   [:city
    :country
    :date_posted
    :datetime
    :duration_hours
    :duration_seconds
    :duration_seconds_int
    :latitude
    :longitude
    :shape
    :state],
   :from [[:ufo_sightings :jj584]],
   :order-by [[:city :asc]]},
  :duration-hours-drag-43
  {:select [:duration_hours [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:city
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :jj584]],
      :order-by [[:city :asc]]}
     :cc350]],
   :group-by [:duration_hours],
   :order-by [[:rowcnt :desc]]},
  :city-drag-26
  {:select [:city [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:city
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :jj584]],
      :order-by [[:city :asc]]}
     :ff571]],
   :group-by [:city],
   :order-by [[:rowcnt :desc]]},
  :my_test_demo_cleaned_result2_tbl6
  {:select [:*],
   :connection-id :*client-name*,
   :from [:my_test_demo_cleaned_result2_tbl]},
  :state-drag-3
  {:select [:state [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:city
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :jj584]],
      :order-by [[:city :asc]]}
     :uu58]],
   :group-by [:state],
   :order-by [[:rowcnt :desc]]},
  :shape-drag-7
  {:select [:shape [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:city
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :jj584]],
      :order-by [[:city :asc]]}
     :hh354]],
   :group-by [:shape],
   :order-by [[:rowcnt :desc]]},
  :my-test-demo-result-tbl-drag-40
  {:select
   [:date_of_birth :email :first_name :job_title :last_name :phone :sex :user_id],
   :order-by [3],
   :from [[:my_test_demo_result_tbl :mm74471]]}},
 :panels
 {:block-9496
  {:clojure
   {:filtered-rows-count16
    "(do  (ns my-test-demo)  (let [last-run :repl-ns/my-test-demo>introspected] (println last-run) filtered-rows-count))"},
   :name "introspected filtered-rows-count",
   :w 7,
   :selected-mode {:filtered-rows-count16 :edn},
   :selected-view :filtered-rows-count16,
   :root [13 23],
   :h 4,
   :connection-id :stirring-pink-mule-21,
   :tab "thin spider"},
  :block-414
  {:mad-libs-combo-hash ["572062609" "ufo_sightings_drag_9"],
   :name "basic_timeseries - \"date_posted, rows\" - 769",
   :w 9,
   :root [5 13],
   :h 5,
   :connection-id "bigfoot-ufos",
   :queries
   {:gen-viz-797
    {:select [[[:count 1] :rows] :date_posted],
     :from [:query/ufo-sightings-drag-9],
     :group-by [:date_posted]}},
   :tab "sapphire ape",
   :conditionals nil,
   :views
   {:oz
    [:vega-lite
     {:layer
      [{:encoding
        {:x {:field :date_posted, :type "temporal", :sort "x"},
         :y {:aggregate "sum", :field :rows, :type "quantitative"},
         :row {:field nil, :legend nil},
         :size {:legend nil},
         :shape {:legend nil},
         :column {:field nil, :legend nil},
         :color
         {:scale :theme/vega-default-color-scheme,
          :legend nil,
          :field nil,
          :type "ordinal"}},
        :mark
        {:type "area",
         :interpolate "monotone",
         :point "transparent",
         :tooltip {:content "encoding"}}}],
      :data {:values :gen-viz-797},
      :config :theme/vega-defaults,
      :width "container",
      :height :panel-height,
      :padding 4,
      :background "transparent"}
     {:actions false}]}},
  :block-11251
  {:name "block-11251",
   :w 6,
   :selected-view :hi,
   :root [5 7],
   :h 2,
   :queries {},
   :tab "through the rabbit hole and out the other side",
   :minimized? true,
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-11251.:hi"}
     :style
     {:font-size "14px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:push ["flow-forever" ":open-input" 21555]]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}},
  :block-135
  {:h 11,
   :w 3,
   :root [38 10],
   :tab "star-shaped wallaby",
   :selected-view :hare-vw,
   :name "stats type selector sql",
   :views {},
   :queries
   {:stats-types-34
    {:select [:*],
     :connection-id :*client-name*,
     :order-by [1],
     :from
     [{:data
       (vec
         (for
           [t
            (mapv
              (fn [x] (cstr/replace (str x) ":" ""))
              (keys (rvbbit-backend.websockets/stats-keywords)))]
           {:type t}))}],
     :_last-run "11:02:36"}}},
  :block-6355
  {:h 17,
   :w 14,
   :root [21 4],
   :tab "thin spider",
   :selected-view :clover-hop,
   :name "block-6355",
   :views {:clover-hop [:edn [:app-db [:flow-subs]]]}},
  :block-7337
  {:clojure
   {:file-url40
    "(do  (ns my-test-demo)  (let [last-run :repl-ns/my-test-demo>introspected] (println last-run) file-url))"},
   :name "introspected file-url",
   :w 7,
   :selected-mode {:file-url40 :edn},
   :selected-view :file-url40,
   :root [25 22],
   :h 4,
   :connection-id :stirring-pink-mule-21,
   :tab "thin spider"},
  :block-11609
  {:h 5,
   :w 8,
   :connection-id "bigfoot-ufos",
   :name "drag-from-select-all-ufo_sightings",
   :queries
   {:city-drag-26
    {:select [:city [[:count 1] :rowcnt]],
     :from [[:query/ufo-sightings-drag-9 :ff571]],
     :group-by [:city],
     :order-by [[:rowcnt :desc]]}},
   :root [1 8],
   :tab "sapphire ape"},
  :block-7416
  {:h 5,
   :w 4,
   :connection-id "bigfoot-ufos",
   :name "drag-from-drag-from-select-all-ufo_sightings",
   :queries
   {:rowcnt-drag-2
    {:select [[[:sum :rowcnt] :rowcnt_sum]], :from [[:query/city-drag-26 :yy403]]}},
   :root [1 13],
   :tab "sapphire ape"},
  :block-11530
  {:h 2,
   :w 9,
   :views
   {:flow-play-runstreamed
    [:box
     :align
     :center
     :justify
     :center
     :style
     {:font-size "25px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:run-flow ["flow-forever" "run flow 'flow-forever'" :runstream-overrides]]]},
   :name "flow-play-from-runstreams",
   :root [5 18],
   :tab "through the rabbit hole and out the other side"},
  :block-3562
  {:clojure
   {:clojure-hop-3
    (do
      (ns rvbbit-backend.websockets
        (:require [rvbbit-backend.util :as ut]))
      (let [tt :time/minute color-key :pink]
        (println (get ansi-colors color-key) "rvbbit threads (avg, last 60s)")
        (fig-render
          (str (ut/nf (ut/rnd (get-stats :threads false 60) 0)) "")
          color-key)
        tt))},
   :name "block-3562",
   :w 6,
   :selected-mode {:clojure-hop-3 :terminal},
   :selected-view :clojure-hop-3,
   :root [43 1],
   :h 4,
   :display {:clojure-hop-3 :output},
   :tab "star-shaped wallaby",
   :minimized? true},
  :block-10810
  {:h 8,
   :w 3,
   :root [38 2],
   :tab "star-shaped wallaby",
   :selected-view :hare-vw,
   :name "freq selector sql",
   :views {},
   :queries
   {:time-freq-345d
    {:select [:*],
     :connection-id :*client-name*,
     :order-by [[1 :asc]],
     :from
     [{:data (vec (for [e [1 5 15 30 45 60 90 120 240 600 3600]] {:freq e}))}],
     :_last-run "11:02:28"}}},
  :block-1794
  {:name "introspected my_test_demo_cleaned_result2_tbl",
   :w 7,
   :selected-mode nil,
   :selected-view :my_test_demo_cleaned_result2_tbl6,
   :root [34 22],
   :h 4,
   :connection-id :stirring-pink-mule-21,
   :queries
   {:my_test_demo_cleaned_result2_tbl6
    {:select [:*],
     :connection-id :*client-name*,
     :from [:my_test_demo_cleaned_result2_tbl]}},
   :tab "thin spider"},
  :block-204
  {:mad-libs-combo-hash ["-1610972762" "ufo_sightings_drag_9"],
   :name "compound_trend_1 - \"date_posted, rows\" - 1141",
   :w 10,
   :root [23 13],
   :h 5,
   :connection-id "bigfoot-ufos",
   :queries
   {:gen-viz-828
    {:select [[[[:count 1]] :agg] :date_posted],
     :from [:query/ufo-sightings-drag-9],
     :order-by [[:date_posted :desc]],
     :group-by [:date_posted]},
    :gen-viz-94
    {:select
     [[[:max
        [:round
         [:raw
          ["(100 * (("
           :query-preview/agg.0
           ".0 - "
           :query-preview/agg.1
           ".0) / "
           :query-preview/agg.0
           ".0))"]]
         2]]
       :diff]],
     :from [:query/ufo-sightings-drag-9]}},
   :tab "sapphire ape",
   :conditionals {:c345-up-or-down? [:> :query-preview/agg.0 :query-preview/agg.1]},
   :views
   {:oz
    [:v-box
     :size
     "auto"
     :height
     :half-panel-height-px
     :style
     {:padding-left "8px", :padding-right "8px"}
     :children
     [[:h-box
       :justify
       :between
       :children
       [[:box
         :padding
         "16px"
         :child
         [:number :query-preview/agg.0]
         :style
         {:font-size "39px", :color "#ffffff"}]
        [:h-box
         :padding
         "13px"
         :size
         "auto"
         :children
         [[:icon
           :md-icon-name
           [:if :condi/c345-up-or-down? "zmdi-chevron-up" "zmdi-chevron-down"]
           :style
           {:font-size "55px",
            :color [:if :condi/c345-up-or-down? "#20f323" "#f36464"],
            :opacity 0.5,
            :margin-top "8px"}]
          [:box
           :child
           [:percent :query-preview-2/diff.0]
           :style
           {:font-size "25px", :padding "15px"}]]]]]
      [:box
       :style
       {:margin-top "-10px"}
       :size
       "auto"
       :child
       [:vega-lite
        {:layer
         [{:encoding
           {:x {:field :date_posted, :type "temporal", :title nil, :sort "x"},
            :y
            {:aggregate "sum",
             :field :agg,
             :title nil,
             :scale {:zero false},
             :type "quantitative"},
            :row {:field nil, :legend nil},
            :size {:legend nil},
            :shape {:legend nil},
            :column {:field nil, :legend nil},
            :color
            {:scale {:scheme "purples"}, :legend nil, :field 1, :type "ordinal"}},
           :mark
           {:type "line",
            :interpolate "monotone",
            :line true,
            :point true,
            :tooltip {:content "encoding"}}}],
         :data {:values :gen-viz-828},
         :config
         {:view {:stroke "transparent"},
          :line {:strokeWidth 3},
          :axis
          {:domainColor "#ffffff22",
           :grid true,
           :font "Lato",
           :labelColor "#afafaf",
           :titleFont "Lato",
           :titleColor "#282828",
           :labelFont "Lato",
           :domain false,
           :gridColor "#ffffff22",
           :tickColor "#ffffff22",
           :axisFont "Lato"},
          :legend
          {:labelFont "Lato",
           :legendFont "Lato",
           :labelColor "#ffffff99",
           :titleColor "#ffffff99",
           :stroke "#ffffff99",
           :titleFont "Lato"},
          :header {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"},
          :mark {:font "Lato"},
          :title
          {:font "Lato",
           :subtitleFont "Lato",
           :labelFont "Lato",
           :titleFont "Lato",
           :titleColor "#ffffff99"}},
         :width :panel-width,
         :height :half-panel-height,
         :padding 4,
         :background "transparent"}
        {:actions false}]]
      [:box
       :align
       :center
       :justify
       :center
       :style
       {:padding-top "133px", :font-size "20px"}
       :child
       [:string [:date_posted " vs " :rows]]]]]}},
  :block-2536
  {:h 2,
   :w 16,
   :root [0 1],
   :tab "through the rabbit hole and out the other side",
   :selected-view :hi,
   :name "block-2536",
   :views
   {:hi
    [:box
     :attr
     {:id ":block-6121.:hi"}
     :style
     {:font-size "15px",
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:speak-click
      "Did you ever need a flow to stop and present an operator with some choices? Static or dynamic we need help to continue processing. How about this ALSO happening headlessly & seamlessly with your data UI?"]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-8805
  {:h 5,
   :w 8,
   :connection-id "bigfoot-ufos",
   :name "drag-from-select-all-ufo_sightings",
   :queries
   {:duration-hours-drag-43
    {:select [:duration_hours [[:count 1] :rowcnt]],
     :from [[:query/ufo-sightings-drag-9 :cc350]],
     :group-by [:duration_hours],
     :order-by [[:rowcnt :desc]]}},
   :root [25 8],
   :tab "sapphire ape"},
  :block-3477
  {:clojure
   {:new-clojure-3
    (do
      (let [clojure-version (clojure-version)
            jvm-version (System/getProperty "java.version")]
        (rvbbit-backend.websockets/fig-render
          (str "Clj " clojure-version " JVM " jvm-version))))},
   :name "block-3477",
   :w 23,
   :selected-mode {:new-clojure-3 :terminal},
   :selected-view :new-clojure-3,
   :root [0 24],
   :h 4,
   :display {:new-clojure-3 :output},
   :queries {},
   :tab "star-shaped wallaby",
   :minimized? true,
   :views
   {:hare-vw
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-3477.:hi"}
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "It's a perfect day for planting seeds and planning adventures!"]}},
  :block-94
  {:mad-libs-combo-hash ["1561519308" "ufo_sightings_drag_9"],
   :name "basic_v_bar - \"country, rows\" - 559",
   :w 9,
   :root [14 13],
   :h 5,
   :connection-id "bigfoot-ufos",
   :queries
   {:gen-viz-84
    {:select [[[:count 1] :rows] :country],
     :from [:query/ufo-sightings-drag-9],
     :group-by [:country]}},
   :tab "sapphire ape",
   :conditionals nil,
   :views
   {:oz
    [:vega-lite
     {:layer
      [{:encoding
        {:y {:field :country, :type "ordinal"},
         :x {:aggregate "sum", :field :rows, :type "quantitative"},
         :row {:field nil, :legend nil},
         :size {:legend nil},
         :shape {:legend nil},
         :column {:field nil, :legend nil},
         :color
         {:scale :theme/vega-default-color-scheme,
          :legend nil,
          :field 1,
          :type "ordinal"}},
        :mark {:type "bar", :tooltip {:content "encoding"}}}],
      :data {:values :gen-viz-84},
      :config :theme/vega-defaults,
      :width "container",
      :height :panel-height,
      :padding 4,
      :background "transparent"}
     {:actions false}]}},
  :block-1913
  {:h 2,
   :w 16,
   :root [0 15],
   :tab "through the rabbit hole and out the other side",
   :selected-view :hi,
   :name "block-1913",
   :views
   {:hi
    [:box
     :attr
     {:id ":block-4121.:hi"}
     :style
     {:font-size "15px",
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:speak-click
      "Pretty cool, if you ask me. Regular Dashboards are, like, totally lame - reactive flow-powered data boards...  thats where its at."]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-11395
  {:w 16,
   :selected-view :vv,
   :name "through the rabbit hole and out the other side",
   :h 23,
   :ghosted? false,
   :views {:vv [:grid "through the rabbit hole and out the other side"]},
   :root [8 2],
   :tab "globular koala"},
  :block-9369
  {:h 3,
   :w 16,
   :root [0 11],
   :tab "through the rabbit hole and out the other side",
   :selected-view :hi,
   :name "block-9369",
   :views
   {:hi
    [:box
     :attr
     {:id ":block-9363.:hi"}
     :style
     {:font-size "15px",
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:speak-click
      "Going back to the canvas, the dialog box and channel reactivity works the same way. The server flow waits for the client and reacts to the value. No need to render or load the flow like before, we are merely a 'subscription client' to this flow."]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-6076
  {:h 17,
   :w 14,
   :root [35 4],
   :tab "thin spider",
   :selected-view :clover-hop-1,
   :name "block-6076",
   :views {:clover-hop-1 [:edn [:app-db [:flow-sub-cnts]]]}},
  :block-6033
  {:clojure
   {:clojure-hop-4
    (do
      (let [graphs-gen :time/minute
            freqs [60 120 600]
            types [:nrepl-calls+ :pool-tasks+ :sql-exec+]]
        (println "selected items" types "selected chunks" freqs)
        (rvbbit-backend.websockets/draw-stats types freqs false 120)
        graphs-gen))},
   :name "block-6033",
   :w 23,
   :selected-mode {:clojure-hop-4 :terminal},
   :selected-view :clojure-hop-4,
   :root [0 1],
   :h 23,
   :display {:clojure-hop-4 :output},
   :tab "star-shaped wallaby",
   :minimized? true},
  :block-3106
  {:h 2,
   :w 6,
   :root [36 2],
   :tab "thin spider",
   :selected-view :hare-vw,
   :name "block-3106",
   :views
   {:hare-vw
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-3106.:hi"}
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:string3 :time/minute]]},
   :queries {}},
  :block-5729
  {:clojure
   {:new-clojure-5
    (do
      (ns my-test-demo
        (:require [clj-http.client :as http]
                  [clojure.data.csv :as csv]
                  [clojure.string :as cstr])
        (:import [java.net URL] [java.io InputStreamReader BufferedReader]))
      :introspect!
      (defn download-csv [url-string]
        (with-open [reader (-> (URL. url-string)
                            .openConnection
                            .getInputStream
                            InputStreamReader.
                            BufferedReader.)]
          (slurp reader)))
      (defn parse-csv [csv-data] (csv/read-csv csv-data))
      (defn clean-header [header]
        (-> header
         cstr/lower-case
         (cstr/replace (re-pattern "[^a-z0-9]+") "-")
         (cstr/replace (re-pattern "^-+") "")
         (cstr/replace (re-pattern "-+$") "")
         keyword))
      (defn csv-data-to-maps [csv-data]
        (let [headers (map clean-header (first csv-data)) rows (rest csv-data)]
          (mapv (fn [row] (into {} (map vector headers row))) rows)))
      (defn parse-numeric-string [s]
        (try
          (if (string? s)
            (let [cleaned (cstr/replace s (re-pattern "[,\\s]") "")]
              (if (re-matches (re-pattern "-?\\d+(\\.\\d+)?") cleaned)
                (read-string cleaned)
                s))
            s)
          (catch Exception _ s)))
      (defn clean-dataset [data]
        (vec
          (map
            (fn [row]
              (reduce
                (fn [acc [k v]] (assoc acc k (parse-numeric-string v)))
                {}
                row))
            data)))
      (defn download-and-process-csv [url]
        (try
          (-> url download-csv parse-csv csv-data-to-maps)
          (catch Exception e (println "Error processing CSV:" (.getMessage e)) [])))
      (def file-url "http://localhost:8888/spotify-streams-2024.csv")
      (def file-url2
       "https://drive.google.com/uc?id=1g4wqEIsKyiBWeCAwd0wEkiC4Psc4zwFu&export=download")
      (def result
       (mapv (fn [x] (dissoc x :index)) (download-and-process-csv file-url)))
      (def filtered-rows-count
       (apply + (for [row result :let [artist (get row :artist)] :when true] 1)))
      (def cleaned-result
       (vec
         (for
           [row result]
           (into
             {}
             (for
               [[k v] row]
               {k
                (if (and
                      (cstr/includes? (str v) ",")
                      (try
                        (number? (read-string (subs (str v) 0 1)))
                        (catch Exception _ false)))
                  (try
                    (read-string (cstr/replace (str v) "," ""))
                    (catch Exception _ "error"))
                  v)})))))
      (def cleaned-result2 (clean-dataset result))
      (println (count result) " rows, yo")
      (into [] (take 33 cleaned-result2)))},
   :name "block-5729",
   :w 7,
   :selected-mode {:new-clojure-5 :terminal},
   :selected-view :new-clojure-5,
   :root [1 3],
   :h 7,
   :display {:new-clojure-5 :value},
   :queries {},
   :tab "thin spider",
   :views
   {:hare-vw
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-5729.:hi"}
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "It's a perfect day for planting seeds and planning adventures!"]}},
  :block-12072
  {:h 9,
   :w 11,
   :connection-id :*client-name*,
   :name "select-all-my_test_demo_result_tbl",
   :queries
   {:my-test-demo-result-tbl-drag-40
    {:select
     [:date_of_birth :email :first_name :job_title :last_name :phone :sex :user_id],
     :order-by [3],
     :from [[:my_test_demo_result_tbl :mm74471]]}},
   :root [9 11],
   :tab "thin spider"},
  :block-1071
  {:clojure
   {:clojure-hop-1
    (do
      (ns rvbbit-backend.websockets)
      (def clover [:box :child "heys" :style {:color "orange"}])
      (let [graphs-gen :signal/every-30-seconds?
            single :stats-types-34/type
            multi :stats-types-34.*/type
            freqs :time-freq-345d.*/freq
            freqs (sort freqs)
            selected (vec (remove nil? (flatten [single multi])))
            types (vec (sort (mapv keyword selected)))]
        (println "selected items " types "selected chunks " freqs)
        (draw-stats types freqs false 200)
        graphs-gen)),
    :new-clojure-1
    (do
      (ns rvbbit-backend.websockets)
      (let [graphs-gen :signal/every-30-seconds?
            single :stats-types-34/type
            multi :stats-types-34.*/type
            freqs :time-freq-345d.*/freq
            freqs (sort freqs)
            selected (vec (remove nil? (flatten [single multi])))
            types (vec (sort (mapv keyword selected)))]
        (println "selected items" types "selected chunks" freqs)
        (draw-pool-stats "watchers/signal " freqs false 200)
        graphs-gen))},
   :pinned? false,
   :name "repl ansi filtered madness",
   :w 38,
   :selected-mode {:clojure-hop-1 :terminal, :new-clojure-1 :terminal},
   :selected-view :clojure-hop-1,
   :root [0 1],
   :h 28,
   :display {:clojure-hop-1 :output, :new-clojure-1 :output},
   :tab "star-shaped wallaby",
   :minimized? false},
  :block-7319
  {:h 5,
   :w 8,
   :connection-id "bigfoot-ufos",
   :name "drag-from-select-all-ufo_sightings",
   :queries
   {:shape-drag-7
    {:select [:shape [[:count 1] :rowcnt]],
     :from [[:query/ufo-sightings-drag-9 :hh354]],
     :group-by [:shape],
     :order-by [[:rowcnt :desc]]}},
   :root [9 8],
   :tab "sapphire ape"},
  :block-4121
  {:h 3,
   :w 16,
   :root [0 7],
   :tab "through the rabbit hole and out the other side",
   :selected-view :hi,
   :name "block-4121",
   :views
   {:hi
    [:box
     :attr
     {:id ":block-4121.:hi"}
     :style
     {:font-size "15px",
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:speak-click
      "We can also debug by forcing various values into any step in the flow in order to observe different reactions... Notice the flow doesn't re-start from scratch, it is actually still running and will react to new values that hit any of it's channels."]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-9805
  {:clojure
   {:clojure-hop-2
    (do
      (ns rvbbit-backend.websockets
        (:require [rvbbit-backend.util :as ut]))
      (let [tt :time/minute color-key :pink]
        (println (get ansi-colors color-key) "rvbbit mem usage (avg, last 60s)")
        (fig-render
          (str (ut/nf (ut/rnd (get-stats :mem false 60) 0)) "mb")
          color-key)
        tt))},
   :name "block-9805",
   :w 12,
   :selected-mode {:clojure-hop-2 :terminal},
   :selected-view :clojure-hop-2,
   :root [31 1],
   :h 4,
   :display {:clojure-hop-2 :output},
   :tab "star-shaped wallaby",
   :minimized? true},
  :block-9688
  {:clojure
   {:new-clojure-2
    (do
      (let [clojure-version (clojure-version)
            jvm-version (System/getProperty "java.version")]
        :introspect!
        (def my-tjhing [433 6555 247 2 227 324 32 333 3 5 538 3 5 3])
        (defonce my-atom (atom {:tr 56}))
        (swap! my-atom assoc :new! "farts")
        (str
          "🐇🥕 Sup!! Internal RVBBIT nREPL. Clojure "
          clojure-version
          " on "
          jvm-version
          " JVM tech2!"
          " 🥕🐇")))},
   :name "block-9688",
   :w 8,
   :selected-view :new-clojure-2,
   :root [0 11],
   :h 7,
   :display {:new-clojure-2 :value},
   :queries {},
   :tab "thin spider",
   :views
   {:hare-vw
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-9688.:hi"}
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "It's a perfect day for planting seeds and planning adventures!"]}},
  :block-7215
  {:h 4,
   :w 9,
   :tab "through the rabbit hole and out the other side",
   :root [5 20],
   :name "block-7215",
   :views
   {:param-val
    [:box
     :align
     :center
     :justify
     :center
     :padding
     "13px"
     :style
     {:font-size "88px"}
     :child
     [:string :flow/flow-forever>:final-math]]},
   :queries {}},
  :block-3777
  {:h 5,
   :w 8,
   :connection-id "bigfoot-ufos",
   :name "drag-from-select-all-ufo_sightings",
   :queries
   {:state-drag-3
    {:select [:state [[:count 1] :rowcnt]],
     :from [[:query/ufo-sightings-drag-9 :uu58]],
     :group-by [:state],
     :order-by [[:rowcnt :desc]]}},
   :root [17 8],
   :tab "sapphire ape"},
  :block-8554
  {:h 2,
   :w 8,
   :root [35 0],
   :tab "thin spider",
   :selected-view :hare-vw,
   :name "block-8554",
   :views
   {:hare-vw
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-8554.:hi"}
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     :time/now]},
   :queries {}},
  :block-4654
  {:clojure
   {:new-clojure-4
    (do
      (ns rvbbit-backend.websockets
        (:require [rvbbit-backend.util :as ut]))
      (let [tt :time/minute color-key :pink]
        (println (get ansi-colors color-key) "rvbbit cpu usage (avg, last 60s)")
        (fig-render (str (ut/nf (get-stats :cpu false 60)) "%") color-key)
        tt))},
   :pinned? false,
   :name "block-4654",
   :w 8,
   :selected-mode {:new-clojure-4 :terminal},
   :selected-view :new-clojure-4,
   :root [23 1],
   :h 4,
   :display {:new-clojure-4 :output},
   :queries {},
   :tab "star-shaped wallaby",
   :minimized? true,
   :views {}},
  :block-229
  {:name "introspected my_test_demo_result_tbl",
   :w 8,
   :selected-mode nil,
   :selected-view :my_test_demo_result_tbl,
   :root [9 3],
   :h 7,
   :connection-id :popular-coral-horse-21,
   :queries
   {:my_test_demo_result_tblfff
    {:select [:*], :from [[:my_test_demo_result_tbl :jgj]], :_last-run "10:29:42"}},
   :tab "thin spider"},
  :block-7523
  {:h 19,
   :w 12,
   :root [41 2],
   :tab "star-shaped wallaby",
   :selected-view :hare-vw,
   :name "background image switcher sql",
   :views {},
   :queries
   {:new-query
    {:select [:*],
     :connection-id :*client-name*,
     :from
     [{:data
       (let [dir "/home/ryanr/rvbbit/frontend/resources/public/images/large"
             rel-dir " ./images/large/"
             files (->>
                     (file-seq (clojure.java.io/file dir))
                     (filter (fn [x] (.isFile x)))
                     (filter
                       (fn [x]
                         (not (clojure.string/includes? (str (.getName x)) "8k"))))
                     (map (fn [x] (.getName x))))]
         (println (count files))
         (vec (for [f files] {:ffilename (str f)})))}],
     :page -1,
     :_last-run "11:02:42"}}},
  :block-35
  {:h 9,
   :w 9,
   :tab "globular koala",
   :root [1 15],
   :name ":param/image-data",
   :views {:param-val [:data-viewer :param/image-data]},
   :queries {}},
  :block-8262
  {:clojure
   {:new-clojure
    (do
      (let [clojure-version (clojure-version)
            jvm-version (System/getProperty "java.version")]
        [:box
         :style
         {:font-size "44px", :color "#ffffff"}
         :child
         (str
           "🐇🥕 Sup! Internal RVBBIT nREPL!!. Clojure "
           clojure-version
           " on "
           jvm-version
           " JVM tech!!!"
           " 🥕🐇")]))},
   :name "block-8262",
   :w 7,
   :selected-mode {:new-clojure :clover},
   :selected-view :new-clojure,
   :root [0 2],
   :h 9,
   :queries {},
   :tab "globular koala",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-8262.:hi"}
     :style
     {:font-size "130px",
      :font-weight 500,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-18px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]}},
  :block-6121
  {:h 2,
   :w 16,
   :root [0 4],
   :tab "through the rabbit hole and out the other side",
   :selected-view :hi,
   :name "block-6121",
   :views
   {:hi
    [:box
     :attr
     {:id ":block-6121.:hi"}
     :style
     {:font-size "15px",
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:speak-click
      "Here you can see that while running the flow interactively, we get the dialog push, as well as the ability to manipulate the options on the flow directly."]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-1449
  {:h 7,
   :w 32,
   :connection-id "bigfoot-ufos",
   :name "select-all-ufo_sightings",
   :queries
   {:ufo-sightings-drag-9
    {:select
     [:city
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :jj584]],
     :order-by [[:city :asc]]}},
   :root [1 1],
   :tab "sapphire ape",
   :selected-view :ufo-sightings-drag-9},
  :block-2096
  {:h 4,
   :w 4,
   :root [38 22],
   :tab "star-shaped wallaby",
   :selected-view :hare-vw,
   :name "block-2096",
   :views
   {:hare-vw
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-2096.:hi"}
     :style
     {:font-size "121px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/universal-pop-color,
      :font-family :theme/base-font}
     :child
     [:string3 :time/second]]},
   :queries {}},
  :block-284
  {:w 32,
   :selected-view :vv,
   :name "sapphire ape",
   :h 17,
   :ghosted? false,
   :views {:vv [:grid "sapphire ape"]},
   :root [25 2],
   :tab "globular koala"},
  :block-4346
  {:h 7,
   :w 30,
   :connection-id "boston-crime",
   :name "select-all-offenses",
   :queries
   {:offenses-drag-24
    {:select
     [:DAY_OF_WEEK
      :DISTRICT
      :HOUR
      :INCIDENT_NUMBER
      :Lat
      :Location
      :Long
      :MONTH
      :OCCURRED_ON_DATE
      :OFFENSE_CODE
      :OFFENSE_CODE_GROUP
      :OFFENSE_DESCRIPTION
      :REPORTING_AREA
      :SHOOTING
      :STREET
      :UCR_PART
      :YEAR],
     :from [[:offenses :dd484]]}},
   :root [25 20],
   :tab "globular koala"}},
 :selected-block :block-5729,
 :theme-colors-hashmap
 {"float" "#bdd496",
  "boolean" "#88c9d2",
  "map" "#7fdb51",
  "list" "#c40100",
  "string" "#e3f5e1",
  "any" "#aa07e7",
  "vector" "#c55e6a",
  "keyword" "#f0f0d3",
  "rabbit-code" "#608fa8",
  "datetime" "#03a847",
  "integer" "#aed08c",
  "unknown" "#3b1d74",
  "date" "#142c0e"},
 :click-param
 {:blocks-sys
  {:block_key ":*theme*",
   :block_name "(meta: this screen's theme)",
   :queries 0,
   :views 28,
   :block_data
   "{:codemirror-theme \"rvbbit-dynamic\", :editor-param-background-color \"#000000\", :base-block-style :param/glass-fish-style, :vega-defaults {:view {:stroke \"transparent\"}, :axis {:domainColor \"#ffffff22\", :grid true, :font \"Lato\", :labelColor \"#ffffff88\", :titleFont \"Lato\", :titleColor \"#ffffff99\", :labelFont \"Lato\", :domain false, :gridColor \"#ffffff22\", :tickColor \"#ffffff22\", :axisFont \"Lato\"}, :legend {:labelFont \"Lato\", :legendFont \"Lato\", :labelColor \"#ffffff99\", :titleColor \"#ffffff99\", :stroke \"#ffffff99\", :titleFont \"Lato\"}, :header {:labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}, :mark {:font \"Lato\"}, :title {:font \"Lato\", :subtitleFont \"Lato\", :labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}}, :grid-selected-column-css {:background-color \"#00000088\", :filter \"brightness(200%)\"}, :base-block-color-selected :param/generated-colors>second-darkest, :block-title-font-color \"#ffffff\", :universal-pop-color :param/tetradss>0, :base-block-color \"#04041e82\", :editor-rim-color :param/generated-colors>colors>4, :base-block-filter-selected \"drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)\", :vega-default-color-scheme {:scheme \"pastel2\"}, :data-colors :param/generated-colors>data-colors, :editor-grid-selected-font-color \"#000000\", :monospaced-font \"Fira Code\", :editor-grid-selected-background-color \"#dc9cb0\", :nivo-defaults {:font-family \"Instagram Sans\", :labels {:text {:fill \"#ffffff\", :font-size \"16px\", :font-family \"Instagram Sans\", :font-weight 700}}, :tooltip {:container {:background \"#000\", :color \"#ffffff\", :text {:fill \"#eeeeee\"}, :fontSize \"18px\", :borderRadius \"4px\", :boxShadow \"0 1px 2px rgba(0, 0, 0, 0.55)\", :padding \"5px 9px\"}, :basic {:whiteSpace \"pre\", :display \"flex\", :alignItems \"center\"}, :tableCell {:padding \"3px 5px\"}}, :axis {:legend {:text {:fill \"#ffffff\", :font-size \"14px\", :font-family \"Instagram Sans\", :font-weight 700}}, :ticks {:line {:stroke \"#ffffff60\"}, :text {:fill \"#ffffff60\", :font-weight 700}}}, :grid {:line {:stroke \"#ffffff\", :strokeWidth 0, :strokeDasharray \"0 0\"}}}, :editor-outer-rim-color :param/generated-colors>dominant, :grid-selected-font-color \"#000000\", :block-title-selected-font-color \"#ffffff\", :grid-selected-background-color \"#a3d3ff\", :grid-font-color \"#ffffff\", :canvas-background-css {:background-image [:string3 \"url(\" :param/rel-image-path \")\"], :transition \"all 1.8s ease-in-out\", :background-size \"cover\", :background-color :param/generated-colors>dominant}, :editor-font-color \"#ffffff\", :base-font \"Odor Mean Chey\", :block-tab-selected-font-color \"#c9d1ff\", :editor-background-color \"#000006\", :editor-grid-font-color \"#ffffff\"}",
   :view_names
   ":codemirror-theme :editor-param-background-color :base-block-style :vega-defaults :grid-selected-column-css :base-block-color-selected :block-title-font-color :universal-pop-color :base-block-color :editor-rim-color :base-block-filter-selected :vega-default-color-scheme :data-colors :editor-grid-selected-font-color :monospaced-font :editor-grid-selected-background-color :nivo-defaults :editor-outer-rim-color :grid-selected-font-color :block-title-selected-font-color :grid-selected-background-color :grid-font-color :canvas-background-css :editor-font-color :base-font :block-tab-selected-font-color :editor-background-color :editor-grid-font-color",
   :query_names ""},
  :tables-sys
  {:db_schema "none",
   :db_catalog nil,
   :connection_id "popular-coral-horse-21",
   :schema_cat nil,
   :table_name "my_test_demo_result_tbl",
   :fields 9},
  :new-query {:ffilename "b64-image3-40825-45238-4k.webp"},
  :flow
  {:crow-flow-201a>*running? false,
   :counting-loop>*running? false,
   :flow-forever>final-math nil,
   :live-scratch-flow>*running? nil,
   :flow-forever>*running? nil},
  :files-sys
  {:file_path "./screens/duality-of-lepus.edn",
   :screen_name "duality-of-lepus",
   :blocks 56,
   :queries 19,
   :ts "2024-07-07 10:55:47"},
  :time
  {:now-seconds "Wednesday, April 24 1:43:57PM",
   :month 4,
   :minute 40,
   :second 7,
   :now "Saturday, July 13th 1:40PM"},
  :viz-tables-sys2 {:table_name :offenses-drag-26},
  :time-freq-345d.* {:freq [600 120 45]},
  :stats-types-34.* {:type ["cpu" "watchers" "subs-client" "subs" "solvers"]},
  :param
  {:background-image-path [:string3 :param/path-dir :param/rel-image-path],
   :test444 123,
   :path-dir "/home/ryanr/rvbbit/frontend/resources/public/",
   :selected-view-data
   (do
     (ns my-test-demo
       (:require [clj-http.client :as http]
                 [clojure.data.csv :as csv]
                 [clojure.string :as cstr])
       (:import [java.net URL] [java.io InputStreamReader BufferedReader]))
     :introspect!
     (defn download-csv [url-string]
       (with-open [reader (-> (URL. url-string)
                           .openConnection
                           .getInputStream
                           InputStreamReader.
                           BufferedReader.)]
         (slurp reader)))
     (defn parse-csv [csv-data] (csv/read-csv csv-data))
     (defn clean-header [header]
       (-> header
        cstr/lower-case
        (cstr/replace (re-pattern "[^a-z0-9]+") "-")
        (cstr/replace (re-pattern "^-+") "")
        (cstr/replace (re-pattern "-+$") "")
        keyword))
     (defn csv-data-to-maps [csv-data]
       (let [headers (map clean-header (first csv-data)) rows (rest csv-data)]
         (mapv (fn [row] (into {} (map vector headers row))) rows)))
     (defn parse-numeric-string [s]
       (try
         (if (string? s)
           (let [cleaned (cstr/replace s (re-pattern "[,\\s]") "")]
             (if (re-matches (re-pattern "-?\\d+(\\.\\d+)?") cleaned)
               (read-string cleaned)
               s))
           s)
         (catch Exception _ s)))
     (defn clean-dataset [data]
       (vec
         (map
           (fn [row]
             (reduce
               (fn [acc [k v]] (assoc acc k (parse-numeric-string v)))
               {}
               row))
           data)))
     (defn download-and-process-csv [url]
       (try
         (-> url download-csv parse-csv csv-data-to-maps)
         (catch Exception e (println "Error processing CSV:" (.getMessage e)) [])))
     (def file-url "http://localhost:8888/spotify-streams-2024.csv")
     (def file-url2
      "https://drive.google.com/uc?id=1g4wqEIsKyiBWeCAwd0wEkiC4Psc4zwFu&export=download")
     (def result
      (mapv (fn [x] (dissoc x :index)) (download-and-process-csv file-url)))
     (def filtered-rows-count
      (apply
        +
        (for
          [row
           result
           :let
           [artist (get row :artist) _ (println artist)]
           :when
           (cstr/includes? artist "Metallica")]
          1)))
     (def cleaned-result
      (vec
        (for
          [row result]
          (into
            {}
            (for
              [[k v] row]
              {k
               (if (and
                     (cstr/includes? (str v) ",")
                     (try
                       (number? (read-string (subs (str v) 0 1)))
                       (catch Exception _ false)))
                 (try
                   (read-string (cstr/replace (str v) "," ""))
                   (catch Exception _ "error"))
                 v)})))))
     (def cleaned-result2 (clean-dataset result))
     (println (count result) " rows, yo")
     (into [] (take 25 cleaned-result2))),
   :selected-view [:clojure :new-clojure-5],
   :generated-colors
   [:run-solver [:get-my-colors {:input-image-path :param/background-image-path}]],
   :rel-image-path [:string3 "images/large/" :new-query/ffilename],
   :selected-block :block-5729,
   :glass-fish-style
   {:background-color "#00000000",
    :box-shadow "10px 5px 5px #00000034",
    :backdrop-filter "blur(4px) brightness(50%)",
    :filter nil}},
  :theme
  {:codemirror-theme "rvbbit-dynamic",
   :editor-param-background-color "#000000",
   :base-block-style :param/glass-fish-style,
   :vega-defaults
   {:view {:stroke "transparent"},
    :axis
    {:domainColor "#ffffff22",
     :grid true,
     :font "Lato",
     :labelColor "#ffffff88",
     :titleFont "Lato",
     :titleColor "#ffffff99",
     :labelFont "Lato",
     :domain false,
     :gridColor "#ffffff22",
     :tickColor "#ffffff22",
     :axisFont "Lato"},
    :legend
    {:labelFont "Lato",
     :legendFont "Lato",
     :labelColor "#ffffff99",
     :titleColor "#ffffff99",
     :stroke "#ffffff99",
     :titleFont "Lato"},
    :header {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"},
    :mark {:font "Lato"},
    :title
    {:font "Lato",
     :subtitleFont "Lato",
     :labelFont "Lato",
     :titleFont "Lato",
     :titleColor "#ffffff99"}},
   :grid-selected-column-css
   {:background-color "#00000088", :filter "brightness(200%)"},
   :base-block-color-selected :param/generated-colors>second-darkest,
   :block-title-font-color "#ffffff",
   :universal-pop-color :param/tetradss>0,
   :base-block-color "#04041e82",
   :editor-rim-color :param/generated-colors>colors>4,
   :base-block-filter-selected
   "drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)",
   :vega-default-color-scheme {:scheme "pastel2"},
   :data-colors :param/generated-colors>data-colors,
   :editor-grid-selected-font-color "#000000",
   :monospaced-font "Fira Code",
   :editor-grid-selected-background-color "#dc9cb0",
   :nivo-defaults
   {:font-family "Instagram Sans",
    :labels
    {:text
     {:fill "#ffffff",
      :font-size "16px",
      :font-family "Instagram Sans",
      :font-weight 700}},
    :tooltip
    {:container
     {:background "#000",
      :color "#ffffff",
      :text {:fill "#eeeeee"},
      :fontSize "18px",
      :borderRadius "4px",
      :boxShadow "0 1px 2px rgba(0, 0, 0, 0.55)",
      :padding "5px 9px"},
     :basic {:whiteSpace "pre", :display "flex", :alignItems "center"},
     :tableCell {:padding "3px 5px"}},
    :axis
    {:legend
     {:text
      {:fill "#ffffff",
       :font-size "14px",
       :font-family "Instagram Sans",
       :font-weight 700}},
     :ticks
     {:line {:stroke "#ffffff60"}, :text {:fill "#ffffff60", :font-weight 700}}},
    :grid {:line {:stroke "#ffffff", :strokeWidth 0, :strokeDasharray "0 0"}}},
   :editor-outer-rim-color :param/generated-colors>dominant,
   :grid-selected-font-color "#000000",
   :block-title-selected-font-color "#ffffff",
   :grid-selected-background-color "#a3d3ff",
   :grid-font-color "#ffffff",
   :universal-pop [:invert-hex-color :theme/editor-outer-rim-color],
   :canvas-background-css
   {:background-image [:string3 "url(" :param/rel-image-path ")"],
    :transition "all 1.8s ease-in-out",
    :background-size "cover",
    :background-blend-mode "multiply",
    :background-color :param/generated-colors>dominant},
   :editor-font-color "#ffffff",
   :base-font "Kulim Park",
   :block-tab-selected-font-color "#c9d1ff",
   :editor-background-color "#000006",
   :editor-grid-font-color "#ffffff"},
  :connections-sys
  {:database_name "*cache-db*",
   :connection_id "popular-coral-horse-21",
   :styler_highlight_8717ss 1},
  :ufo-sightings-drag-9
  {:duration_seconds_int 20,
   :comments
   "My older brother and twin sister were leaving the only Edna theater at about 9 PM&#44...we had our bikes and I took a different route home",
   :city "edna",
   :date_posted "2004-01-17",
   :longitude -96.6458333,
   :state "tx",
   :duration_seconds "20",
   :duration_hours "1/2 hour",
   :id 4,
   :shape "circle",
   :datetime "1956-10-10 21:00:00.000000",
   :latitude "28.9783333",
   :country "us"},
  :sys {:selected-tab "thin spider", :selected-tab-idx 6}},
 :selected-flow "live-scratch-flow"}