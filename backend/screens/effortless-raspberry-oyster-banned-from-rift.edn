{:orders
 {:flow-fn-sys
  [:name
   :full_map
   :description
   :inputs
   :icon
   :input_types
   :output_types
   :category],
  :blocks-sys
  [:block_key
   :block_name
   :queries
   :views
   :block_data
   :view_names
   :query_names],
  :fields-sys [:field_name :field_type :data_type],
  :tables-sys
  [:db_schema
   :db_catalog
   :connection_id
   :schema_cat
   :table_name
   :fields],
  :flows-sys [:flow_id :file_path :last_modified],
  :files-sys [:file_path :screen_name :blocks :queries :ts],
  :flow-fn-categories-sys [:category],
  :connections-sys [:database_name :connection_id],
  :reco-counts [:table_name :cnt],
  :kit-results-sys
  [:id
   :item_hash
   :item_name
   :kit_name
   :item_type
   :item_key
   :item_idx
   :item_options
   :item_data
   :client_name
   :flow_id
   :updated],
  :flow-fn-all-sys [:name]},
 :reco-preview nil,
 :flow? false,
 :selected-flow-block :open-fn-1,
 :meta
 {:flow-fn-sys
  {:fields
   {:name
    {:data-type "string",
     :distinct 29,
     :group-by? true,
     :commons {":=" 1, ":>=" 1, ":write-file" 1},
     :cardinality 100},
    :full_map
    {:data-type "string",
     :distinct 29,
     :group-by? true,
     :commons
     {"{:file-path \"./flows/a-random-wow.edn\", :icon \"zmdi-pizza\", :description \"A random Owen Wilson quote from the Wedding Crashers movie.\"}"
      1,
      "{:description \"Clojure greater-than-or-equal function.\", :fn >, :inputs [:value1 :value2], :icon \"zmdi-chevron-right\", :types {:value1 [:integer :float], :value2 [:integer :float], :out :boolean}}"
      1,
      "{:description \"Clojure subtract function.\", :fn =, :inputs [:value1 :value2], :icon \"zmdi-swap\", :types {:value1 :any, :value2 :any, :out :boolean}}"
      1},
     :cardinality 100},
    :description
    {:data-type "string",
     :distinct 28,
     :group-by? true,
     :commons
     {"Clojure subtract function." 2,
      "Get top 50 color frequencies from an image in hex form." 1,
      "Clojure.string's join function." 1},
     :cardinality 96},
    :inputs
    {:data-type "string",
     :distinct 16,
     :group-by? true,
     :commons {"[:value1 :value2]" 8, "[:value]" 6, "" 2},
     :cardinality 55},
    :icon
    {:data-type "string",
     :distinct 18,
     :group-by? true,
     :commons {"zmdi-pizza" 4, "zmdi-file-text" 3, "zmdi-dns" 2},
     :cardinality 62},
    :input_types
    {:data-type "string",
     :distinct 14,
     :group-by? true,
     :commons
     {"[[:integer :float] [:integer :float]]" 7,
      "[:string]" 5,
      "[:any]" 3},
     :cardinality 48},
    :output_types
    {:data-type "string",
     :distinct 8,
     :group-by? true,
     :commons {":boolean" 11, ":any" 6, ":string" 4},
     :cardinality 27},
    :category
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {":clojure-base" 16, ":rabbit-base" 12, ":owen-wilson" 1},
     :cardinality 10}},
   :rowcount 29},
  :blocks-sys
  {:fields
   {:block_key
    {:data-type "string",
     :distinct 37,
     :group-by? true,
     :commons {"scarlet walrus" 1, ":block-5880" 1, ":block-5633" 1},
     :cardinality 100},
    :block_name
    {:data-type "string",
     :distinct 33,
     :group-by? true,
     :commons {"block-11642" 2, "scarlet walrus" 2, "block-7844" 2},
     :cardinality 89},
    :queries
    {:data-type "integer",
     :distinct 2,
     :group-by? true,
     :commons {0 36, 1 1},
     :cardinality 5},
    :views
    {:data-type "integer",
     :distinct 4,
     :group-by? true,
     :commons {2 19, 1 9, 0 8},
     :cardinality 10},
    :block_data
    {:data-type "string",
     :distinct 37,
     :group-by? true,
     :commons
     {"{:name \"block-5880\", :w 5, :selected-view :hi, :root [1.75 0.5], :h 4, :iconized? true, :queries {}, :tab \"scarlet walrus\", :views {:hi [:box :align :center :justify :center :attr {:id \":block-5880.:hi\"} :style {:font-size \"106px\", :font-weight 700, :padding-top \"6px\", :padding-left \"14px\", :margin-top \"-8px\", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child \"hi!\"], :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}}"
      1,
      "{:h 4, :w 5, :root [20 3], :tab \"bulbous elephant\", :selected-view :hi, :name \"block-2031\", :views {:hi [:box :align :center :justify :center :attr {:id \":block-2031.:hi\"} :style {:font-size \"106px\", :font-weight 700, :padding-top \"6px\", :padding-left \"14px\", :margin-top \"-8px\", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child \"hi!\"], :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}, :queries {}}"
      1,
      "{:pinned? false, :name \"block-4675\", :w 8, :icon? false, :selected-view :nutritious-periwinkle-sheep, :root [2 1], :h 2, :tab \"winter-wonder-lands\", :drag-meta {:type :open-input}, :minimized? false, :views {:nutritious-periwinkle-sheep [:open-input {:kp [:param :nutritious-periwinkle-sheep], :width-int :panel-width+100, :height-int :panel-height+80, :syntax \"clojure\"}]}}"
      1},
     :cardinality 100},
    :view_names
    {:data-type "string",
     :distinct 9,
     :group-by? true,
     :commons {":hi :stack" 18, "" 8, ":vv" 4},
     :cardinality 24},
    :query_names
    {:data-type "string",
     :distinct 2,
     :group-by? true,
     :commons {"" 36, ":bigfoot-sightings-drag-32" 1},
     :cardinality 5}},
   :rowcount 37},
  :fields-sys {:fields {}, :rowcount 0},
  :tables-sys {:fields {}, :rowcount 0},
  :flows-sys
  {:fields
   {:flow_id
    {:data-type "string",
     :distinct 48,
     :group-by? true,
     :commons {"clam-flow-851" 3, "map-pull-test2" 1, "callie-3" 1},
     :cardinality 95},
    :file_path
    {:data-type "string",
     :distinct 50,
     :group-by? true,
     :commons
     {"./flows/dalle3-create-image-newengland-old.edn" 1,
      "./flows/hue-change-group-color.edn" 1,
      "./flows/dalle3-create-image-rvbbit4aa.edn" 1},
     :cardinality 100},
    :last_modified
    {:data-type "string",
     :distinct 50,
     :group-by? true,
     :commons
     {"2023-12-31 20:10:21" 1,
      "2024-01-24 13:20:30" 1,
      "2024-01-06 18:53:33" 1},
     :cardinality 100}},
   :rowcount 50},
  :files-sys
  {:fields
   {:file_path
    {:data-type "string",
     :distinct 77,
     :group-by? true,
     :commons
     {"./screens/weave-test122.edn" 1,
      "./screens/sizzle-board-1.edn" 1,
      "./screens/boston-test-10-3-23.edn" 1},
     :cardinality 100},
    :screen_name
    {:data-type "string",
     :distinct 73,
     :group-by? true,
     :commons
     {"unnamed-screen!" 4, "tallica-param-test2" 2, "light-theme" 1},
     :cardinality 94},
    :blocks
    {:data-type "integer",
     :distinct 38,
     :group-by? true,
     :commons {14 5, 12 5, 15 5},
     :cardinality 49},
    :queries
    {:data-type "integer",
     :distinct 31,
     :group-by? true,
     :commons {5 9, 0 8, 11 6},
     :cardinality 40},
    :ts
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"2024-01-24 18:08:58" 37,
      "2024-01-24 18:08:59" 26,
      "2024-01-24 18:08:57" 14},
     :cardinality 3}},
   :rowcount 77},
  :flow-fn-categories-sys
  {:fields
   {:category
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {":rabbit-base" 1, ":owen-wilson" 1, ":clojure-base" 1},
     :cardinality 100}},
   :rowcount 3},
  :connections-sys
  {:fields
   {:database_name
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {"*cache-db*" 5, "SQLite" 4, "*csv-import-db*" 1},
     :cardinality 30},
    :connection_id
    {:data-type "string",
     :distinct 10,
     :group-by? true,
     :commons {"imported" 1, "bigfoot-ufos" 1, "snifftmp1" 1},
     :cardinality 100}},
   :rowcount 10},
  :reco-counts {:fields {}, :rowcount 0},
  :kit-results-sys {:fields {}, :rowcount 0},
  :flow-fn-all-sys
  {:fields
   {:name
    {:data-type "string",
     :distinct 29,
     :group-by? true,
     :commons {":=" 1, ":>=" 1, ":write-file" 1},
     :cardinality 100}},
   :rowcount 29}},
 :default-col-widths
 {:system-connections-list* {:connections-sys 111},
  :system-tables-list* {:tables-sys ##Inf},
  :system-fields-list* {:fields-sys ##Inf},
  :files-list* {:files-sys 178},
  :blocks-list* {:blocks-sys 127},
  :flow-list* {:flows-sys 187}},
 :data-hash 51345267,
 :tabs ["strategic grill locations"],
 :selected-cols {},
 :server
 {:settings
  {:harvest-on-boot? true,
   :default "./screens/winter-theme.edn",
   :eleven-labs-api-key nil,
   :kits
   {:buffy
    {:author
     {:name "Ryan Robitaille",
      :email "ryan.robitaille@gmail.com",
      :x "@ryrobes",
      :site "https://ryrob.es/"},
     :kit-name :buffy,
     :package-name :grab-bag,
     :fn (rvbbit-backend.assistants/buffy :query-name),
     :name "Ask Buffy!",
     :icon "zmdi-cocktail",
     :run-on :queries,
     :description "What does Buffy think about this data? Who knows!"},
    :outliers
    {:description
     "A basic multivariate outlier detection runstream. Highlight outliers in various dimensional groupings as a launch pad for further exploration.",
     :image-url "images/outliers-image.png",
     :fn
     (rabbit-kit-outliers.core/get-outliers
       :query-name
       :panel-name
       :query),
     :name "Outliers",
     :icon "zmdi-functions",
     :author
     {:name "Ryan Robitaille",
      :email "ryan.robitaille@gmail.com",
      :x "@ryrobes",
      :site "https://ryrob.es/"},
     :run-on :queries,
     :repl {:host "127.0.0.1", :port 42999},
     :kit-name :outliers,
     :package-name :query-basics-1},
    :forecast
    {:description
     "WIP: basic timeseries forecasting based on previous values",
     :fn
     (rabbit-kit-outliers.core/get-forecast
       :query-name
       :panel-name
       :query),
     :name "Forecasting",
     :icon "zmdi-brightness-7",
     :author
     {:name "Ryan Robitaille",
      :email "ryan.robitaille@gmail.com",
      :x "@ryrobes",
      :site "https://ryrob.es/"},
     :run-on :queries,
     :repl {:host "127.0.0.1", :port 42999},
     :kit-name :forecast,
     :package-name :query-basics-1}},
   :graphite-host "127.0.0.1",
   :openapi-org-id nil,
   :debug-level 1,
   :screens
   ["GGGeat-ochre-mole-exiled-from-abyssal-plain"
    "SSSSSSuccessful-oval-sea-urchin-of-mountain-range"
    "SSuccessful-oval-sea-urchin-of-mountain-range"
    "aaa-run-amok"
    "asdasdasdasd"
    "autumn-theme"
    "bigfoot-snapshots"
    "bigfoot-snapshots2"
    "bigfoot-snapshots3"
    "blank-sizzle"
    "blank-sizzle2"
    "boston-test-10-3-23"
    "bunch of bullshit"
    "bunch of bullshit2"
    "bunch of bullshit4"
    "caliope"
    "calliope"
    "canvas-scrubber-test1"
    "chaos simple"
    "chaos-views"
    "clean-grey-defaults"
    "code-data-literal-stonks-test"
    "data-literals-test-sunday"
    "data-literals-test-sundaydd"
    "demo-dark-pumpkin-bkgrd-sept23"
    "demo-light-bkgrd-sept23"
    "demo-lime-green-slime"
    "desktops-and-broomsticks"
    "error-monitor"
    "error-monitor-vanessa"
    "error-monitor-vanessa2"
    "fake-books-1"
    "fetching-pentagonal-termite-of-tghe-submarine-canyon"
    "glass-fish-board-test"
    "hue-board-1"
    "layout-test-1"
    "layout-test-12"
    "light-theme"
    "literal-data-test"
    "luck-of-the-irish"
    "mapbox-test"
    "night-city-never-sleeps"
    "nivo-getting-better!"
    "nivo-hacking-2023"
    "nivo-hacking-2023333"
    "nivo-hacking-october-2nd"
    "old-defaults"
    "poor-touring-me"
    "pres-sql-test-1"
    "recharts-test-blocks"
    "refresh-test"
    "riffle-test"
    "sizzle-board-1"
    "tallica-param-test2"
    "the-future-soon"
    "the-generated-lass"
    "the-generated-lass-glow"
    "the-generated-lass-ne"
    "tweet-bigfoot-is-blurry"
    "tweet-demo-thing-bigfoot-is-blurry"
    "unnamed-screen!"
    "weave-test"
    "weave-test1"
    "weave-test122"
    "who ya gonna call?"
    "who ya gonna call? again"
    "winter-theme"
    "winter-theme-choom"
    "winter-theme2"
    "winter-theme33"
    "winter-theme45"
    "winter-theme47"
    "wow-board"],
   :openapi-key
   "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"}},
 :runstreams {"offline-param-test" {:open? true, :open-outputs? true}},
 :editor? false,
 :buffy? false,
 :status-data
 {:heartbeat
  {:kick
   {:data
    [{:sent! :heartbeat,
      :to :all,
      :at "2024-01-24 13:34:46",
      :payload nil,
      :payload-kp [:heartbeat :heartbeat]}
     nil],
    :elapsed-ms nil,
    :reco-count nil}},
  "kick-test!"
  {:kick
   {:data
    [{:sent! "kick-test!",
      :to :effortless-raspberry-oyster-banned-from-rift,
      :at "2024-01-24 13:20:34",
      :payload
      {:query-log
       {:data
        [{:content ["2024-01-24 13:20:34 - query ran in 1 ms."],
          :name "query-log-:flows-sys",
          :order 1706120434,
          :parameters {},
          :forced-mutates {},
          :step-mutates {}}],
        :description "query-log-:flows-sys",
        :mutates {},
        :options {:actions? false, :pages? false, :search? false},
        :parameters {}}},
      :payload-kp [:flows-sys "kick-test!"]}
     nil],
    :elapsed-ms nil,
    :reco-count nil}},
  :alert1
  {:alerts
   {:data
    [[[:v-box
       :justify
       :center
       :style
       {:margin-top "-6px", :color "inherit"}
       :children
       [[:box :child "flow offline-param-test has finished"]
        [:box
         :style
         {:font-weight 700, :font-size "10px", :opacity 0.7}
         :child
         "0 second yo yo yod"]]]
      10
      1
      8]
     nil],
    :elapsed-ms nil,
    :reco-count nil}}},
 :re-pressed.core/keydown
 {:keys
  [{:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey true,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey true,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey true,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey true,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey true,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}
   {:altKey false,
    :ctrlKey false,
    :metaKey false,
    :shiftKey false,
    :keyCode 32}],
  :event-keys
  [[[:viz-yard.bricks/esc-unselect-current] [{:keyCode 27}]]
   [[:viz-yard.bricks/redo-one]
    [{:keyCode 90, :ctrlKey true, :shiftKey true}]]
   [[:viz-yard.bricks/undo-one]
    [{:keyCode 90, :ctrlKey true, :shiftKey false}]]
   [[:viz-yard.bricks/toggle-buffy]
    [{:keyCode 32, :shiftKey true, :ctrlKey false}]]
   [[:viz-yard.bricks/toggle-editor]
    [{:keyCode 32, :shiftKey false, :ctrlKey false}]]
   [[:viz-yard.bricks/toggle-flow]
    [{:keyCode 32, :shiftKey false, :ctrlKey true}]]
   [[:viz-yard.bricks/next-panel] [{:keyCode 9}]]
   [[:viz-yard.bricks/toggle-kick-alert] [{:keyCode 75}]]
   [[:viz-yard.bricks/toggle-peek] [{:keyCode 80}]]
   [[:viz-yard.bricks/toggle-lines] [{:keyCode 76}]]
   [[:viz-yard.bricks/toggle-auto-run] [{:keyCode 79}]]
   [[:viz-yard.bricks/delete-selected-panel]
    [{:keyCode 46, :shiftKey true}]]
   [[:viz-yard.bricks/cycle-column-select false] [{:keyCode 81}]]
   [[:viz-yard.bricks/cycle-column-select true] [{:keyCode 69}]]
   [[:viz-yard.audio/start-recording] [{:keyCode 84}]]
   [[:viz-yard.audio/stop-recording] [{:keyCode 89}]]
   [[:viz-yard.bricks/stretch-panel :wider]
    [{:keyCode 68, :shiftKey true}]]
   [[:viz-yard.bricks/stretch-panel :longer]
    [{:keyCode 83, :shiftKey true}]]
   [[:viz-yard.bricks/stretch-panel :narrower]
    [{:keyCode 65, :shiftKey true}]]
   [[:viz-yard.bricks/stretch-panel :shorter]
    [{:keyCode 87, :shiftKey true}]]
   [[:viz-yard.bricks/panel-depth-up] [{:keyCode 82, :shiftKey true}]]
   [[:viz-yard.bricks/panel-depth-down]
    [{:keyCode 70, :shiftKey true}]]
   [[:viz-yard.bricks/nudge-panel :up] [{:keyCode 87}]]
   [[:viz-yard.bricks/nudge-panel :down] [{:keyCode 83}]]
   [[:viz-yard.bricks/nudge-panel :left] [{:keyCode 65}]]
   [[:viz-yard.bricks/nudge-panel :right] [{:keyCode 68}]]],
  :clear-keys nil,
  :always-listen-keys nil,
  :prevent-default-keys
  [{:keyCode 32}
   {:keyCode 46, :shiftKey true}
   {:keyCode 83, :ctrlKey true}
   {:keyCode 9}
   {:keyCode 70, :ctrlKey true}]},
 :flow-subs [:flow/offline-param-test>*running?],
 :client-name :effortless-raspberry-oyster-banned-from-rift,
 :flows
 {"offline-param-test"
  {:map
   {:thorough-gold-fly-1
    {:w 200,
     :h 90,
     :x 984.9533955342058,
     :y 1147.6545179212414,
     :z 0,
     :data
     {:h 2,
      :w 5,
      :root [0 0],
      :drag-meta
      {:type :param,
       :param-full :param/thorough-gold-fly,
       :param-type "string",
       :param-table :param,
       :param-field :thorough-gold-fly}},
     :icon "zmdi-tune",
     :ports {:in {}, :out {:out :string}}},
    :open-fn-1
    {:y 1125.5487268326133,
     :fn (fn [x] x),
     :w 200,
     :raw-fn (fn [x] x),
     :right-click? true,
     :icon "zmdi-functions",
     :z 0,
     :ports {:in {:value :any}, :out {:out :any}},
     :h 100,
     :x 1400.3657486286565,
     :data
     {:flow-item
      {:description "Write you own Clojure function! Godspeed!",
       :category ":rabbit-base",
       :fn (fn [x] x),
       :name ":open-fn",
       :raw-fn (fn [x] x),
       :type :open-fn,
       :icon "zmdi-functions",
       :types {:value :any, :out :any},
       :input_types "[:any]",
       :inputs "[:value]",
       :output_types ":any",
       :expandable? true,
       :full_map
       "{:description \"Write you own Clojure function! Godspeed!\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}"},
      :name "drag-from-",
      :w 5,
      :source-panel :flow-fn-list*,
      :h 6,
      :connection-id nil,
      :queries
      {:name-drag-25
       {:select
        [:name
         :full_map
         :description
         :inputs
         :icon
         :input_types
         :output_types
         :category],
        :from [[:query/flow-fn-sys :ii11]],
        :where [:= :name ":open-fn"]}},
      :drag-meta
      {:data-type "string",
       :source-query :flow-fn-sys,
       :param-full ":open-fn",
       :param-field :name,
       :source-panel-key :flow-fn-list*,
       :type :open-fn,
       :param-table :flow-fn-sys,
       :source-table :query/flow-fn-sys,
       :connection-id nil,
       :target :name,
       :row-num 5}}}},
   :connections
   [[:thorough-gold-fly-1 :open-fn-1/value] [:open-fn-1 :done]]}},
 :runstreams-lookups
 {"offline-param-test"
  {:open-inputs
   {:thorough-gold-fly-1
    {:user-input nil, :defaults {}, :type :string}},
   :blocks
   {:open-fn-1 {:type :string, :last? true, :sample "yo yo yod"},
    :thorough-gold-fly-1
    {:type :string, :last? false, :sample "yo yo yod"}}}},
 :openai-api-key "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",
 :window {:w 2507, :h 1577},
 :status
 {:heartbeat {:kick [:flow/offline-param-test>*running?]},
  "kick-test!" {:kick :flows-sys},
  :alert1 {:alerts :alert2}},
 :recos-page2 0,
 :selected-tab "strategic grill locations",
 :openai-org-id "org-YLngjih2M4oju0tnnZtKCAYg",
 :alerts [],
 :recos-page 0,
 :re-pollsive.core/polling
 {:rules
  [{:interval 10,
    :event [:viz-yard.bricks/dispatch-auto-queries],
    :poll-when [:viz-yard.bricks/auto-run-and-connected?],
    :dispatch-event-on-start? false}
   {:interval 5,
    :event [:viz-yard.bricks/update-metadata],
    :dispatch-event-on-start? false,
    :started-at 0,
    :stopped-time-since-last-poll nil,
    :started-before? true}
   {:interval 120,
    :event [:viz-yard.bricks/clean-up-reco-previews],
    :dispatch-event-on-start? false,
    :started-at 0,
    :stopped-time-since-last-poll nil,
    :started-before? true}
   {:interval 2,
    :event [:viz-yard.bricks/prune-alerts],
    :dispatch-event-on-start? false,
    :started-at 0,
    :stopped-time-since-last-poll nil,
    :started-before? true}
   {:interval 1,
    :event [:viz-yard.bricks/sub-to-flows],
    :poll-when [:viz-yard.bricks/new-flow-subs?],
    :dispatch-event-on-start? false,
    :started-at nil,
    :stopped-time-since-last-poll -1,
    :started-before? true}
   {:interval 1000,
    :event [:viz-yard.bricks/update-metadata-tabs],
    :dispatch-event-on-start? false,
    :started-at 0,
    :stopped-time-since-last-poll nil,
    :started-before? true}
   {:interval 1,
    :event [:viz-yard.bricks/update-conditionals],
    :dispatch-event-on-start? false,
    :started-at 0,
    :stopped-time-since-last-poll nil,
    :started-before? true}
   {:interval 4,
    :event [:viz-yard.bricks/refresh-status],
    :poll-when [:viz-yard.bricks/bg-status?],
    :dispatch-event-on-start? false}],
  :counter 1056},
 :flow-runner
 {"offline-param-test"
  {:thorough-gold-fly-1 :started, :open-fn-1 :started}},
 :panels-hash -1845319777,
 :last-run-throwaway "13:20:33",
 :elevenlabs-api-key "f74e20dec69741c2d51663cbd8cd4cf6",
 :websocket-fx.core/sockets
 {:default
  {:status :connected,
   :options
   {:url "ws://localhost:3030/ws",
    :format :edn,
    :on-disconnect
    [:websocket-fx.core/unsubscribe :default :server-push2],
    :on-connect
    [:websocket-fx.core/subscribe
     :default
     :server-push2
     {:message
      {:kind :server-push2,
       :client-name :effortless-raspberry-oyster-banned-from-rift,
       :ui-keypath [:server],
       :extras {:hello? true}},
      :on-message [:viz-yard.http/simple-response]}]},
   :subscriptions
   {:server-push2
    {:message
     {:kind :server-push2,
      :client-name :effortless-raspberry-oyster-banned-from-rift,
      :ui-keypath [:server],
      :extras {:hello? true}},
     :on-message [:viz-yard.http/simple-response]}},
   :requests {}}},
 :user-params-hash 1176279283,
 :grid-recos? true,
 :panels
 {:block-2305
  {:drag-meta {:type :open-input},
   :w 6,
   :selected-view :thorough-gold-fly,
   :h 2,
   :views
   {:thorough-gold-fly
    [:open-input
     {:kp [:param :thorough-gold-fly],
      :width-int :panel-width+100,
      :height-int :panel-height+80,
      :syntax "clojure"}]},
   :tab "strategic grill locations",
   :root [2 6],
   :name "block-2305"}},
 :click-param
 {:theme
  {:codemirror-theme "ayu-dark",
   :editor-param-background-color "#000000",
   :base-block-style {:backdrop-filter "blur(2px) brightness(70%) "},
   :vega-defaults
   {:view {:stroke "transparent"},
    :axis
    {:domainColor "#ffffff22",
     :grid true,
     :font "Lato",
     :labelColor "#ffffff88",
     :titleFont "Lato",
     :titleColor "#ffffff99",
     :labelFont "Lato",
     :domain false,
     :gridColor "#ffffff22",
     :tickColor "#ffffff22",
     :axisFont "Lato"},
    :legend
    {:labelFont "Lato",
     :legendFont "Lato",
     :labelColor "#ffffff99",
     :titleColor "#ffffff99",
     :stroke "#ffffff99",
     :titleFont "Lato"},
    :header
    {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"},
    :mark {:font "Lato"},
    :title
    {:font "Lato",
     :subtitleFont "Lato",
     :labelFont "Lato",
     :titleFont "Lato",
     :titleColor "#ffffff99"}},
   :grid-selected-column-css
   {:background-color "#00000088", :filter "brightness(200%)"},
   :base-block-color-selected "#091536",
   :block-title-font-color "#ffffff",
   :base-block-color "#0b0f2180",
   :editor-rim-color "#2b4270",
   :base-block-filter-selected
   "drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)",
   :vega-default-color-scheme {:scheme "pastel2"},
   :data-colors
   {"float" "#2c728e",
    "boolean" "#f386bf",
    "map" "#00FFFF",
    "list" "#c32148",
    "string" "#7de8b9",
    "rowset" "#DAF7A6",
    "any" "#c3ec52",
    "vector" "#008080",
    "keyword" "#add8e6",
    "rabbit-code" "#FC0FC0",
    "datetime" "#472d7b",
    "integer" "#12e3ff",
    "unknown" "#ffcf99",
    "date" "#3b528b",
    "rabbitsql" "#FC0FC0",
    "nil" "#eeeeee"},
   :editor-grid-selected-font-color "#000000",
   :monospaced-font "JetBrains Mono",
   :editor-grid-selected-background-color "#8879bc",
   :nivo-defaults
   {:font-family :theme/base-font,
    :labels
    {:text
     {:fill "#ffffff",
      :font-size "16px",
      :font-family :theme/base-font,
      :font-weight 700}},
    :tooltip
    {:container
     {:background "#000",
      :color "#ffffff",
      :text {:fill "#eeeeee"},
      :fontSize "18px",
      :borderRadius "4px",
      :boxShadow "0 1px 2px rgba(0, 0, 0, 0.55)",
      :padding "5px 9px"},
     :basic {:whiteSpace "pre", :display "flex", :alignItems "center"},
     :tableCell {:padding "3px 5px"}},
    :axis
    {:legend
     {:text
      {:fill "#ffffff",
       :font-size "14px",
       :font-family :theme/base-font,
       :font-weight 700}},
     :ticks
     {:line {:stroke "#ffffff60"},
      :text {:fill "#ffffff60", :font-weight 700}}},
    :grid
    {:line
     {:stroke "#ffffff", :strokeWidth 0, :strokeDasharray "0 0"}}},
   :editor-outer-rim-color "#40d6ff",
   :grid-selected-font-color "#000000",
   :block-title-selected-font-color "#ffffff",
   :grid-selected-background-color "#a3d3ff",
   :grid-font-color "#ffffff",
   :canvas-background-css
   {:background-image "url(images/cozy-winter-streets2.png)",
    :transition "all 0.6s ease-in-out",
    :background-blend-mode "normal",
    :background-size "cover",
    :background-color "#424f57"},
   :editor-font-color "#ffffff",
   :base-font "Instagram Sans",
   :block-tab-selected-font-color "#c9d1ff",
   :editor-background-color "#000006",
   :editor-grid-font-color "#ffffff"},
  :files-sys
  {:file_path "./screens/winter-theme.edn",
   :screen_name "winter-theme",
   :blocks 37,
   :queries 1,
   :ts "2024-01-24 18:08:58"},
  :blocks-sys
  {:block_key ":*theme*",
   :block_name "(meta: this screen's theme)",
   :queries 0,
   :views 27,
   :block_data
   "{:codemirror-theme \"ayu-dark\", :editor-param-background-color \"#000000\", :base-block-style {:backdrop-filter \"blur(2px) brightness(70%) \"}, :vega-defaults {:view {:stroke \"transparent\"}, :axis {:domainColor \"#ffffff22\", :grid true, :font \"Lato\", :labelColor \"#ffffff88\", :titleFont \"Lato\", :titleColor \"#ffffff99\", :labelFont \"Lato\", :domain false, :gridColor \"#ffffff22\", :tickColor \"#ffffff22\", :axisFont \"Lato\"}, :legend {:labelFont \"Lato\", :legendFont \"Lato\", :labelColor \"#ffffff99\", :titleColor \"#ffffff99\", :stroke \"#ffffff99\", :titleFont \"Lato\"}, :header {:labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}, :mark {:font \"Lato\"}, :title {:font \"Lato\", :subtitleFont \"Lato\", :labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}}, :grid-selected-column-css {:background-color \"#00000088\", :filter \"brightness(200%)\"}, :base-block-color-selected \"#091536\", :block-title-font-color \"#ffffff\", :base-block-color \"#0b0f2180\", :editor-rim-color \"#2b4270\", :base-block-filter-selected \"drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)\", :vega-default-color-scheme {:scheme \"pastel2\"}, :data-colors {\"float\" \"#2c728e\", \"boolean\" \"#f386bf\", \"map\" \"#00FFFF\", \"list\" \"#c32148\", \"string\" \"#7de8b9\", \"rowset\" \"#DAF7A6\", \"any\" \"#c3ec52\", \"vector\" \"#008080\", \"keyword\" \"#add8e6\", \"rabbit-code\" \"#FC0FC0\", \"datetime\" \"#472d7b\", \"integer\" \"#12e3ff\", \"unknown\" \"#ffcf99\", \"date\" \"#3b528b\", \"rabbitsql\" \"#FC0FC0\", \"nil\" \"#eeeeee\"}, :editor-grid-selected-font-color \"#000000\", :monospaced-font \"JetBrains Mono\", :editor-grid-selected-background-color \"#8879bc\", :nivo-defaults {:font-family :theme/base-font, :labels {:text {:fill \"#ffffff\", :font-size \"16px\", :font-family :theme/base-font, :font-weight 700}}, :tooltip {:container {:background \"#000\", :color \"#ffffff\", :text {:fill \"#eeeeee\"}, :fontSize \"18px\", :borderRadius \"4px\", :boxShadow \"0 1px 2px rgba(0, 0, 0, 0.55)\", :padding \"5px 9px\"}, :basic {:whiteSpace \"pre\", :display \"flex\", :alignItems \"center\"}, :tableCell {:padding \"3px 5px\"}}, :axis {:legend {:text {:fill \"#ffffff\", :font-size \"14px\", :font-family :theme/base-font, :font-weight 700}}, :ticks {:line {:stroke \"#ffffff60\"}, :text {:fill \"#ffffff60\", :font-weight 700}}}, :grid {:line {:stroke \"#ffffff\", :strokeWidth 0, :strokeDasharray \"0 0\"}}}, :editor-outer-rim-color \"#40d6ff\", :grid-selected-font-color \"#000000\", :block-title-selected-font-color \"#ffffff\", :grid-selected-background-color \"#a3d3ff\", :grid-font-color \"#ffffff\", :canvas-background-css {:background-image \"url(images/cozy-winter-streets.png)\", :transition \"all 0.6s ease-in-out\", :background-blend-mode \"normal\", :background-size \"cover\", :background-color \"#424f57\"}, :editor-font-color \"#ffffff\", :base-font \"Instagram Sans\", :block-tab-selected-font-color \"#c9d1ff\", :editor-background-color \"#000006\", :editor-grid-font-color \"#ffffff\"}",
   :view_names
   ":codemirror-theme :editor-param-background-color :base-block-style :vega-defaults :grid-selected-column-css :base-block-color-selected :block-title-font-color :base-block-color :editor-rim-color :base-block-filter-selected :vega-default-color-scheme :data-colors :editor-grid-selected-font-color :monospaced-font :editor-grid-selected-background-color :nivo-defaults :editor-outer-rim-color :grid-selected-font-color :block-title-selected-font-color :grid-selected-background-color :grid-font-color :canvas-background-css :editor-font-color :base-font :block-tab-selected-font-color :editor-background-color :editor-grid-font-color",
   :query_names ""},
  :param {:thorough-gold-fly "yo yo yod"},
  :flow {:offline-param-test>*running? false}},
 :selected-flow "offline-param-test"}