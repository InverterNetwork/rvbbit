{:orders {:flow-fn-sys [:name :full_map :description :inputs :icon :input_types :output_types :category], :blocks-sys [:block_key :block_name :queries :views :block_data :view_names :query_names], :fields-sys [:field_name :field_type :data_type], :tables-sys [:db_schema :db_catalog :connection_id :schema_cat :table_name :fields], :fflows-sys [:category :description :name :file_path :full_map :icon], :flows-sys [:flow_id :file_path :last_modified], :files-sys [:file_path :screen_name :blocks :queries :ts], :fflowparts-sys [:category :description :name :file_path :full_map :icon], :flow-fn-categories-sys [:category], :connections-sys [:database_name :connection_id], :reco-counts [:table_name :cnt], :flow-fn-all-sys [:name]}, :reco-preview nil, :flow? false, :selected-flow-block nil, :meta {:flow-fn-sys {:fields {:name {:data-type "string", :distinct 115, :group-by? true, :commons {":=" 1, ":>=" 1, "map-pull-test2" 1}, :cardinality 100}, :full_map {:data-type "string", :distinct 115, :group-by? true, :commons {"{:flow-id \"koala-flow-438\", :file-path \"./flows/koala-flow-438.edn\", :inputs [:open-input-1 :open-input-3 :open-input-5 :open-input :open-input-4 :open-input-2], :required [:open-input-1 :open-input-3 :open-input-5 :open-input :open-input-4 :open-input-2], :defaults {:open-input-1 \"10.174.1.162\", :open-input-3 \"ryanr\", :open-input-5 \"remote-process1\", :open-input \"local-process\", :open-input-4 \"notofox\", :open-input-2 [\"ls\" \"-l\" \"-h\"]}, :description nil, :icon \"zmdi-puzzle-piece\", :types {:open-input-1 :string, :open-input-3 :string, :open-input-5 :string, :open-input {:out :string}, :open-input-4 :string, :open-input-2 :vector, :out :any}}" 1, "{:flow-id \"kick-test-1-3-24\", :file-path \"./flows/kick-test-1-3-24.edn\", :inputs [:open-input-1 :open-input-3 :open-input-5 :open-input :open-input-4 :open-input-2], :required [:open-input-1 :open-input-3 :open-input-5 :open-input :open-input-4 :open-input-2], :defaults {:open-input-1 \"feed me, seymour!\", :open-input-3 :base, :open-input-5 \"nope!\", :open-input \"kick-test\", :open-input-4 [:v-box :size \"auto\" :width \"490px\" :style {:font-size \"13px\", :opacity 0.33} :children [[:h-box :size \"auto\" :justify :between :children [[:box :child \":mean\"] [:box :child \"3853.75\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":standard-deviation\"] [:box :child \"1099.883942741233\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":sample-size\"] [:box :child \"4\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":fields\"] [:box :child \"[:YEAR]\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":calc-used\"] [:box :child \"[:percentiles [0.01 0.99]]\" :style {:font-weight 400}]]]]], :open-input-2 :ufo-sightings-drag-44}, :description nil, :icon \"zmdi-puzzle-piece\", :types {:open-input-1 :string, :open-input-3 :keyword, :open-input-5 :string, :open-input :string, :open-input-4 [:v-box :size \"auto\" :width \"490px\" :style {:font-size \"13px\", :opacity 0.33} :children [[:h-box :size \"auto\" :justify :between :children [[:box :child \":mean\"] [:box :child \"3853.75\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":standard-deviation\"] [:box :child \"1099.883942741233\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":sample-size\"] [:box :child \"4\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":fields\"] [:box :child \"[:YEAR]\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":calc-used\"] [:box :child \"[:percentiles [0.01 0.99]]\" :style {:font-weight 400}]]]]], :open-input-2 :keyword, :out {:error \"java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long\"}}}" 1, "{:flow-id \"eggplanter23\", :file-path \"./flows/eggplanter23.edn\", :inputs [:seeded], :required [:seeded], :defaults {:seeded 123}, :description nil, :icon \"zmdi-puzzle-piece\", :types {:seeded :integer, :out :any}}" 1}, :cardinality 100}, :description {:data-type "string", :distinct 34, :group-by? true, :commons {"" 80, "Basic HTTP call primitive" 2, "Clojure subtract function." 2}, :cardinality 29}, :inputs {:data-type "string", :distinct 60, :group-by? true, :commons {"[:open-input-1 :open-input]" 10, "[:value1 :value2]" 7, "[:open-input-1 :in-prompt :quality :open-input-2 :headers-map :url-str]" 7}, :cardinality 52}, :icon {:data-type "string", :distinct 21, :group-by? true, :commons {"zmdi-puzzle-piece" 80, "zmdi-pizza" 4, "zmdi-file-text" 3}, :cardinality 18}, :input_types {:data-type "string", :distinct 57, :group-by? true, :commons {"[:string]" 12, "[:integer :integer]" 8, "[:string :string :string :string :map :string]" 7}, :cardinality 49}, :output_types {:data-type "string", :distinct 14, :group-by? true, :commons {":any" 61, ":boolean" 12, "" 12}, :cardinality 12}, :category {:data-type "string", :distinct 4, :group-by? true, :commons {":sub-flows" 80, ":rabbit-base" 18, ":clojure-base" 16}, :cardinality 3}}, :rowcount 115}, :blocks-sys {:fields {:block_key {:data-type "string", :distinct 3, :group-by? true, :commons {":hello-there-brother" 1, "strategic grill locations" 1, ":*theme*" 1}, :cardinality 100}, :block_name {:data-type "string", :distinct 3, :group-by? true, :commons {"hello there!" 1, "board: strategic grill locations" 1, "(meta: this screen's theme)" 1}, :cardinality 100}, :queries {:data-type "integer", :distinct 1, :group-by? true, :commons {0 3}, :cardinality 33}, :views {:data-type "integer", :distinct 3, :group-by? true, :commons {1 1, 0 1, 27 1}, :cardinality 100}, :block_data {:data-type "string", :distinct 3, :group-by? true, :commons {"{:h 3, :w 12, :root [2 2], :name \"hello there!\", :tab \"strategic grill locations\", :views {:heya! [:box :align :center :justify :center :style {:font-size \"50px\", :font-weight 700, :color :theme/editor-outer-rim-color, :padding-top \"14px\", :opacity 1, :font-family :theme/base-font} :child \"hello! üêá üçÇ ü¶É\"]}, :queries {}}" 1, "{:panels {:hello-there-brother {:h 3, :w 12, :root [2 2], :name \"hello there!\", :tab \"strategic grill locations\", :views {:heya! [:box :align :center :justify :center :style {:font-size \"50px\", :font-weight 700, :color :theme/editor-outer-rim-color, :padding-top \"14px\", :opacity 1, :font-family :theme/base-font} :child \"hello! üêá üçÇ ü¶É\"]}, :queries {}}}, :click-param {:param {:selected-view [nil nil], :selected-view-data nil}}}" 1, "{:codemirror-theme \"ayu-dark\", :editor-param-background-color \"#000000\", :base-block-style {:backdrop-filter \"blur(2px) brightness(70%) \"}, :vega-defaults {:view {:stroke \"transparent\"}, :axis {:domainColor \"#ffffff22\", :grid true, :font \"Lato\", :labelColor \"#ffffff88\", :titleFont \"Lato\", :titleColor \"#ffffff99\", :labelFont \"Lato\", :domain false, :gridColor \"#ffffff22\", :tickColor \"#ffffff22\", :axisFont \"Lato\"}, :legend {:labelFont \"Lato\", :legendFont \"Lato\", :labelColor \"#ffffff99\", :titleColor \"#ffffff99\", :stroke \"#ffffff99\", :titleFont \"Lato\"}, :header {:labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}, :mark {:font \"Lato\"}, :title {:font \"Lato\", :subtitleFont \"Lato\", :labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}}, :grid-selected-column-css {:background-color \"#00000088\", :filter \"brightness(200%)\"}, :base-block-color-selected \"#00030a\", :block-title-font-color \"#ffffff\", :base-block-color \"#05041182\", :editor-rim-color \"#297fb8\", :base-block-filter-selected \"drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)\", :vega-default-color-scheme {:scheme \"pastel2\"}, :data-colors {\"float\" \"#2A3959\", \"boolean\" \"#13283E\", \"map\" \"#536D82\", \"list\" \"#1F374E\", \"string\" \"#484F71\", \"vector\" \"#6B6B87\", \"keyword\" \"#C6DDAE\", \"rabbit-code\" \"#3E5970\", \"datetime\" \"#94939A\", \"integer\" \"#2D485F\", \"unknown\" \"#D510BBB\", \"date\" \"#A2AFB7\", \"nil\" \"#13283E\"}, :editor-grid-selected-font-color \"#000000\", :monospaced-font \"JetBrains Mono\", :editor-grid-selected-background-color \"#b8b2bb\", :nivo-defaults {:font-family \"Instagram Sans\", :labels {:text {:fill \"#ffffff\", :font-size \"16px\", :font-family \"Instagram Sans\", :font-weight 700}}, :tooltip {:container {:background \"#000\", :color \"#ffffff\", :text {:fill \"#eeeeee\"}, :fontSize \"18px\", :borderRadius \"4px\", :boxShadow \"0 1px 2px rgba(0, 0, 0, 0.55)\", :padding \"5px 9px\"}, :basic {:whiteSpace \"pre\", :display \"flex\", :alignItems \"center\"}, :tableCell {:padding \"3px 5px\"}}, :axis {:legend {:text {:fill \"#ffffff\", :font-size \"14px\", :font-family \"Instagram Sans\", :font-weight 700}}, :ticks {:line {:stroke \"#ffffff60\"}, :text {:fill \"#ffffff60\", :font-weight 700}}}, :grid {:line {:stroke \"#ffffff\", :strokeWidth 0, :strokeDasharray \"0 0\"}}}, :editor-outer-rim-color \"#297fb8\", :grid-selected-font-color \"#000000\", :block-title-selected-font-color \"#ffffff\", :grid-selected-background-color \"#a3d3ff\", :grid-font-color \"#ffffff\", :canvas-background-css {:background-image \"url(images/b64-decoded-9884793-8k-4k.png)\", :transition \"all 0.8s ease-in-out\", :background-size \"cover\", :background-color \"#424f57\"}, :editor-font-color \"#ffffff\", :base-font \"Instagram Sans\", :block-tab-selected-font-color \"#c9d1ff\", :editor-background-color \"#000006\", :editor-grid-font-color \"#ffffff\"}" 1}, :cardinality 100}, :view_names {:data-type "string", :distinct 3, :group-by? true, :commons {":heya!" 1, "" 1, ":codemirror-theme :editor-param-background-color :base-block-style :vega-defaults :grid-selected-column-css :base-block-color-selected :block-title-font-color :base-block-color :editor-rim-color :base-block-filter-selected :vega-default-color-scheme :data-colors :editor-grid-selected-font-color :monospaced-font :editor-grid-selected-background-color :nivo-defaults :editor-outer-rim-color :grid-selected-font-color :block-title-selected-font-color :grid-selected-background-color :grid-font-color :canvas-background-css :editor-font-color :base-font :block-tab-selected-font-color :editor-background-color :editor-grid-font-color" 1}, :cardinality 100}, :query_names {:data-type "string", :distinct 1, :group-by? true, :commons {"" 3}, :cardinality 33}}, :rowcount 3}, :fields-sys {:fields {}, :rowcount 0}, :tables-sys {:fields {}, :rowcount 0}, :fflows-sys {:fields {:category {:data-type "string", :distinct 1, :group-by? true, :commons {":flow" 82}, :cardinality 1}, :description {:data-type "string", :distinct 1, :group-by? true, :commons {"" 82}, :cardinality 1}, :name {:data-type "string", :distinct 80, :group-by? true, :commons {"clam-flow-851" 3, "map-pull-test2" 1, "callie-3" 1}, :cardinality 97}, :file_path {:data-type "string", :distinct 82, :group-by? true, :commons {"./flows/stitches-math.edn" 1, "./flows/hey-rabbit-pathfinder.edn" 1, "./flows/dalle3-create-image-newengland-old.edn" 1}, :cardinality 100}, :full_map {:data-type "string", :distinct 81, :group-by? true, :commons {"{:flowmaps {:open-input {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :user-input \"feed me, seymour!!\"}, :z 0, :ports {:out {:out :string}}, :x 1169.1345454545453, :y 1210.6763636363637}}, :flow-id \"clam-flow-851\", :flowmaps-connections [[:open-input :done]]}" 2, "{:flowmaps {:kick-1 {:w 200, :h 100, :x 3449.707608604431, :y 1367.7343490600585, :z 0, :data {:flow-item {:description \"Push items to the client UI.\", :category \":rabbit-base\", :fn (fn [destination name sub-task & args] (rvbbit-backend.websockets/kick destination name sub-task args)), :name \":kick\", :type :kick, :icon \"images/pink-rabbit-head.png\", :defaults {:destination :client-name, :sub-task :flow-id, :name :flow-id}, :types {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :out :any}, :input_types \"[[:keyword :vector :list :set] :string [:string :keyword]]\", :style {:color \"#fc0fc0\"}, :selected-style {:color \"#fc0fc0\"}, :inputs [:destination :name :sub-task :value-3 :value-4], :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Push items to the client UI.\\\", :fn (fn [destination name sub-task & args] (rvbbit-backend.websockets/kick destination name sub-task args)), :type :kick, :icon \\\"images/pink-rabbit-head.png\\\", :defaults {:destination :client-name, :sub-task :flow-id, :name :flow-id}, :types {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :out :any}, :style {:color \\\"#fc0fc0\\\"}, :selected-style {:color \\\"#fc0fc0\\\"}, :inputs [:destination :name :sub-task], :expandable? true, :required [:destination :name :sub-task]}\", :required [:destination :name :sub-task]}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [357.3567810058594 157.34896850585938], :h 6, :connection-id nil, :queries {:name-drag-40 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :nn284]], :where [:= :name \":kick\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":kick\", :param-field :name, :source-panel-key :flow-fn-list*, :type :kick, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 6}}, :icon \"images/pink-rabbit-head.png\", :ports {:in {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :value-3 :any, :value-4 :any}, :out {:error :string, :* {:error \"java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long\"}}}}, :open-input-1 {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"feed me, seymour!\"}, :z 0, :ports {:in {}, :out {:out :string}}, :x 2736.8722753576326, :y 1370.837915698902}, :open-input-3 {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input :base}, :z 0, :ports {:out {:out :keyword}}, :x 2764.800122707993, :y 1561.5292232684237}, :kick-2 {:w 200, :h 100, :x 3412.0444202088465, :y 1642.0587967722038, :z 0, :data {:flow-item {:description \"Push items to the client UI.\", :category \":rabbit-base\", :fn (fn [destination name sub-task & args] (rvbbit-backend.websockets/kick destination name sub-task args)), :name \":kick\", :type :kick, :icon \"images/pink-rabbit-head.png\", :defaults {:destination :client-name, :sub-task :flow-id, :name :flow-id}, :types {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :out :any}, :input_types \"[[:keyword :vector :list :set] :string [:string :keyword]]\", :style {:color \"#fc0fc0\"}, :selected-style {:color \"#fc0fc0\"}, :inputs [:destination :name :sub-task :value-3 :value-4 :value-5 :value-6], :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Push items to the client UI.\\\", :fn (fn [destination name sub-task & args] (rvbbit-backend.websockets/kick destination name sub-task args)), :type :kick, :icon \\\"images/pink-rabbit-head.png\\\", :defaults {:destination :client-name, :sub-task :flow-id, :name :flow-id}, :types {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :out :any}, :style {:color \\\"#fc0fc0\\\"}, :selected-style {:color \\\"#fc0fc0\\\"}, :inputs [:destination :name :sub-task], :expandable? true, :required [:destination :name :sub-task]}\", :required [:destination :name :sub-task]}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [1096.4557304382324 275.4192810058594], :h 6, :connection-id nil, :queries {:name-drag-19 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :tt488]], :where [:= :name \":kick\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":kick\", :param-field :name, :source-panel-key :flow-fn-list*, :type :kick, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 6}}, :icon \"images/pink-rabbit-head.png\", :ports {:in {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :value-3 :any, :value-4 :any, :value-5 :any, :value-6 :any}, :out {:error :string, :* {:error \"java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long\"}}}}, :open-input-5 {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"nope!\"}, :z 0, :ports {:out {:out :string}}, :x 2720.677470934069, :y 1741.4885174725507}, :open-input {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"kick-test\"}, :z 0, :ports {:out {:out :string}}, :x 3004.6165799724517, :y 1592.9840098822297}, :open-input-4 {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input [:v-box :size \"auto\" :width \"490px\" :style {:font-size \"13px\", :opacity 0.33} :children [[:h-box :size \"auto\" :justify :between :children [[:box :child \":mean\"] [:box :child \"3853.75\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":standard-deviation\"] [:box :child \"1099.883942741233\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":sample-size\"] [:box :child \"4\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":fields\"] [:box :child \"[:YEAR]\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":calc-used\"] [:box :child \"[:percentiles [0.01 0.99]]\" :style {:font-weight 400}]]]]], :view-output? false, :width 350}, :z 0, :ports {:out {:idx7 :keyword, :idx5 :keyword, :* [:v-box :size \"auto\" :width \"490px\" :style {:font-size \"13px\", :opacity 0.33} :children [[:h-box :size \"auto\" :justify :between :children [[:box :child \":mean\"] [:box :child \"3853.75\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":standard-deviation\"] [:box :child \"1099.883942741233\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":sample-size\"] [:box :child \"4\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":fields\"] [:box :child \"[:YEAR]\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":calc-used\"] [:box :child \"[:percentiles [0.01 0.99]]\" :style {:font-weight 400}]]]]], :idx2 :string, :idx4 :string, :idx1 :keyword, :idx6 :map, :idx3 :keyword, :idx8 :vector, :idx0 :keyword}}, :x 3020.2006378998626, :y 1715.8480772276178}, :open-input-2 {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input :ufo-sightings-drag-44}, :z 0, :ports {:out {:out :keyword}}, :x 2759.2156427639634, :y 1475.5767468808303}}, :flow-id \"kick-test-1-3-24\", :flowmaps-connections [[:open-input-1 :kick-1/value-3] [:open-input :kick-1/name] [:kick-1 :done] [:open-input-3 :kick-1/sub-task] [:open-input-2 :kick-2/sub-task] [:open-input-4 :kick-2/value-3] [:open-input-5 :kick-2/value-4] [:open-input-1 :kick-2/value-5]]}" 1, "{:flowmaps {:open-fn-13 {:y 1824.6140314275567, :fn (fn [x] x), :w 200, :raw-fn (fn [hex-colors] (vec (let [hex-to-rgb (fn [hex] (map (fn [idx] (Integer/parseInt (subs hex idx (+ idx 2)) 16)) [1 3 5])) brightness (fn [rgb] (let [[r g b] rgb] (+ (* 0.299 r) (* 0.587 g) (* 0.114 b))))] (sort-by (comp brightness hex-to-rgb) hex-colors)))), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx8 :string, :idx0 :string}}, :h 100, :x 4508.6715997869305, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :second-lightest {:y 1972.8225287543403, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (last (drop-last x))), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 5305.513375289351, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-fn-8 {:y 1289.3273225170874, :fn (fn [x] x), :w 200, :raw-fn (fn [x y] (str (clojure.string/replace x \"/home/ryanr/rvbbit/frontend/resources/public/\" \"url(\") \")\")), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any, :value-1 :any}, :out {:out :any}}, :h 100, :x 4066.4052582891677, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :alert!-2 {:w 200, :h 100, :x 5313.887965339137, :y 1188.6692051877603, :z 0, :data {:flow-item {:description \"Send a pop-up notification to a client (or :all clients)\", :category \":rabbit-base\", :fn (fn [destination content w h duration] (rvbbit-backend.websockets/alert! destination content w h duration)), :name \":alert!\", :icon \"zmdi-alert-polygon\", :defaults {:destination :client-name, :content \"Alert!\", :w 10, :h 1, :duration 6}, :types {:destination :keyword, :content :any, :out :any, :w :integer, :h :integer, :duration :integer}, :input_types \"[:keyword :any :integer :integer :integer]\", :style {:color \"#FDFD96\"}, :selected-style {:color \"#FDFD96\"}, :inputs \"[:destination :content :w :h :duration]\", :output_types \":any\", :full_map \"{:description \\\"Send a pop-up notification to a client (or :all clients)\\\", :fn (fn [destination content w h duration] (rvbbit-backend.websockets/alert! destination content w h duration)), :inputs [:destination :content :w :h :duration], :icon \\\"zmdi-alert-polygon\\\", :style {:color \\\"#FDFD96\\\"}, :selected-style {:color \\\"#FDFD96\\\"}, :defaults {:destination :client-name, :content \\\"Alert!\\\", :w 10, :h 1, :duration 6}, :types {:destination :keyword, :content :any, :out :any, :w :integer, :h :integer, :duration :integer}}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [1154 188], :h 6, :connection-id nil, :queries {:name-drag-34 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :qq253]], :where [:= :name \":alert!\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":alert!\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 0}}, :icon \"zmdi-alert-polygon\", :ports {:in {:destination :keyword, :content :any, :w :integer, :h :integer, :duration :integer}, :out {:out :any}}}, :open-fn-7 {:y 1558.8995291537408, :fn (fn [x] x), :w 200, :raw-fn (fn [x y] (str \"convert \" x \" \" y)), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any, :value-1 :any}, :out {:out :any}}, :h 100, :x 3365.9914373132146, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :shell-command-1 {:w 200, :h 100, :x 3657.4198481531157, :y 1353.6626850116338, :z 0, :data {:flow-item {:description \"Execute shell command. WARNING: only use if you know what you're doing / have controlled inputs\", :category \":rabbit-base\", :fn (fn [command] (rvbbit-backend.websockets/run-shell-command command)), :name \":shell-command\", :icon \"zmdi-washing-machine\", :defaults {:command \"ls -la\"}, :types {:command :string, :out :any}, :input_types \"[:string]\", :style {:color \"#ffdd3c\"}, :selected-style {:color \"#ffdd3c\"}, :inputs \"[:command]\", :output_types \":any\", :full_map \"{:description \\\"Execute shell command. WARNING: only use if you know what you're doing / have controlled inputs\\\", :fn (fn [command] (rvbbit-backend.websockets/run-shell-command command)), :icon \\\"zmdi-washing-machine\\\", :defaults {:command \\\"ls -la\\\"}, :types {:command :string, :out :any}, :style {:color \\\"#ffdd3c\\\"}, :selected-style {:color \\\"#ffdd3c\\\"}, :inputs [:command], :required [:command]}\", :required [:command]}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [890 244], :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-37 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :vv683]], :where [:= :name \":shell-command\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":shell-command\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 7}}, :icon \"zmdi-washing-machine\", :ports {:in {:command :string}, :out {:output :vector, :exception :vector, :seconds :vector, :command :string, :* :map}}}, :lightest1 {:y 1798.000480143229, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (last x)), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 5290.254224537037, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :gradient1 {:y 1779.8277822989005, :fn (fn [x] x), :w 200, :raw-fn (fn [x y] (vec (rvbbit-backend.util/generate-gradient x y 8))), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any, :value-1 :any}, :out {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx0 :string}}, :h 100, :x 5737.372641782406, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-fn-1 {:y 1416.240407986111, :fn (fn [x] x), :w 200, :raw-fn (fn [x] x), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:headers :map, :method :keyword, :url :string, :body :map, :* :map}}, :h 100, :x 1314.2310474537035, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-fn-2 {:y 1472.904453412224, :fn (fn [x] x), :w 200, :raw-fn (fn [x] x), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:idx0 :map, :* :vector}}, :h 100, :x 1850.385489430147, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :darkest1 {:y 1499.4197961877892, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (first x)), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 5274.040574363425, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-input-1 {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"vivid\"}, :z 0, :ports {:out {:out :string}}, :x -113.35663248697915, :y 1226.1349690755208}, :open-input-3 {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input {:width 13, :height 8, :duration 9}}, :z 0, :ports {:out {:width :integer, :height :integer, :duration :integer, :* :map}}, :x 4554.520222267909, :y 1374.7628150627627}, :alert!-1 {:w 240, :h 100, :x 5282.577773321242, :y 1355.4901399717228, :z 0, :data {:flow-item {:description \"Send a pop-up notification to a client (or :all clients)\", :category \":rabbit-base\", :fn (fn [destination content w h duration] (rvbbit-backend.websockets/alert! destination content w h duration)), :name \":alert!\", :icon \"zmdi-alert-polygon\", :defaults {:destination :client-name, :content \"Alert!\", :w 10, :h 1, :duration 6}, :types {:destination :keyword, :content :any, :out :any, :w :integer, :h :integer, :duration :integer}, :input_types \"[:keyword :any :integer :integer :integer]\", :style {:color \"#FDFD96\"}, :selected-style {:color \"#FDFD96\"}, :inputs \"[:destination :content :w :h :duration]\", :output_types \":any\", :full_map \"{:description \\\"Send a pop-up notification to a client (or :all clients)\\\", :fn (fn [destination content w h duration] (rvbbit-backend.websockets/alert! destination content w h duration)), :inputs [:destination :content :w :h :duration], :icon \\\"zmdi-alert-polygon\\\", :style {:color \\\"#FDFD96\\\"}, :selected-style {:color \\\"#FDFD96\\\"}, :defaults {:destination :client-name, :content \\\"Alert!\\\", :w 10, :h 1, :duration 6}, :types {:destination :keyword, :content :any, :out :any, :w :integer, :h :integer, :duration :integer}}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [676 74], :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-17 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :yy463]], :where [:= :name \":alert!\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":alert!\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 0}}, :icon \"zmdi-alert-polygon\", :ports {:in {:destination :keyword, :content :any, :w :integer, :h :integer, :duration :integer}, :out {:out :any}}}, :make-data-colors {:y 1837.9007893880205, :fn (fn [x] x), :w 200, :raw-fn (fn [x y] (zipmap [\"float\" \"boolean\" \"map\" \"list\" \"string\" \"vector\" \"keyword\" \"rabbit-code\" \"datetime\" \"integer\" \"unknown\" \"date\" \"nil\"] (shuffle (into y x)))), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any, :value-1 :any}, :out {\"float\" :string, \"boolean\" :string, \"map\" :string, \"list\" :string, :* :map, \"string\" :string, \"vector\" :string, \"keyword\" :string, \"rabbit-code\" :string, \"datetime\" :string, \"integer\" :string, \"unknown\" :string, \"date\" :string, \"nil\" :string}}, :h 100, :x 6211.317592592592, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :in-prompt {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"A high-definition, hyperreal, vivid 16:9 image of a New England scene in America, just before dawn during a heavy snowstorm, blending traditional and cyberpunk elements. The scene has a slightly gritty atmosphere, with the town covered in snow and buildings emitting soft pink and neon light blue glows. On the left side of the frame, a young and beautiful Irish-looking woman, clearly in her late 20s, with pouty full lips (with the bottom lip being prominent) and a slightly upturned nose, poses with a pleased expression yet mischievious on her large mouth. Her long hair is slightly wet, with snow collecting on it and her face, emphasizing the heavy snowfall. She has intricate Celtic-style tattoos of rabbits and wilderness on her neck, collarbone, and shoulders. The pre-dawn light adds a serene yet mysterious feel to the scene, underscoring the fusion of the natural world and technological influence.\", :width 750}, :z 0, :ports {:out {:out :string}}, :x 727.2187565983952, :y 1028.1476308461783}, :open-fn-6 {:y 1360.8546035354202, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (clojure.string/replace (clojure.string/replace x \".webp\" \".png\") \"/home/ryanr/rvbbit-out\" \"/home/ryanr/rvbbit/frontend/resources/public/images/gen\")), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 3182.757763012036, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? true, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :ssecond-darkest {:y 1644.5442626953125, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (second x)), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 5294.654181134259, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :node-color-thief-js {:y 1781.755455824908, :sub-flow {:flow-id \"node-color-thief-js\", :file-path \"./flows/node-color-thief-js.edn\", :map {:image-path {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \" /home/ryanr/rvbbit/frontend/resources/public/images/shannon45.png\"}, :z 0, :ports {:out {:out :string}}, :x 948.9116738809121, :y 1074.148015202703}, :shell-command-1 {:w 200, :h 100, :x 1758.4411167689732, :y 1117.7292503720237, :z 0, :data {:flow-item {:description \"Execute shell command. WARNING: only use if you know what you're doing / have controlled inputs\", :category \":rabbit-base\", :fn (fn [command] (rvbbit-backend.websockets/run-shell-command command)), :name \":shell-command\", :icon \"zmdi-washing-machine\", :defaults {:command \"ls -la\"}, :types {:command :string, :out :any}, :input_types \"[:string]\", :style {:color \"#ffdd3c\"}, :selected-style {:color \"#ffdd3c\"}, :inputs \"[:command]\", :output_types \":any\", :full_map \"{:description \\\"Execute shell command. WARNING: only use if you know what you're doing / have controlled inputs\\\", :fn (fn [command] (rvbbit-backend.websockets/run-shell-command command)), :icon \\\"zmdi-washing-machine\\\", :defaults {:command \\\"ls -la\\\"}, :types {:command :string, :out :any}, :style {:color \\\"#ffdd3c\\\"}, :selected-style {:color \\\"#ffdd3c\\\"}, :inputs [:command], :required [:command]}\", :required [:command]}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [539.1770935058594 176.171875], :h 6, :connection-id nil, :queries {:name-drag-42 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :cc59]], :where [:= :name \":shell-command\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":shell-command\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 6}}, :icon \"zmdi-washing-machine\", :ports {:in {:command :string}, :out {:output :vector, :exception :vector, :seconds :vector, :command :string, :* :map}}}, :clojure-string-join-1 {:w 200, :h 100, :x 1348.4940418061756, :y 1136.4640299479165, :z 0, :data {:flow-item {:description \"Clojure.string's join function.\", :category \":clojure-base\", :fn (fn [delimiter & args] (clojure.string/join delimiter args)), :name \":clojure-string-join\", :icon \"zmdi-group\", :defaults {:delimiter \" \"}, :types {:delimiter :string, :out :string}, :input_types \"[:string]\", :inputs \"[:delimiter]\", :output_types \":string\", :expandable? true, :full_map \"{:description \\\"Clojure.string's join function.\\\", :fn (fn [delimiter & args] (clojure.string/join delimiter args)), :inputs [:delimiter], :required [:delimiter], :defaults {:delimiter \\\" \\\"}, :expandable? true, :icon \\\"zmdi-group\\\", :types {:delimiter :string, :out :string}}\", :required [:delimiter]}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [540.1770935058594 279.171875], :h 6, :connection-id nil, :queries {:name-drag-12 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ww526]], :where [:= :name \":clojure-string-join\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":clojure-string-join\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 15}}, :icon \"zmdi-group\", :ports {:in {:delimiter :string, :value-1 :any, :value-2 :any}, :out {:out :string}}}, :shell-command-in {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"cd /home/ryanr/color-thief-project ; node ./colorThief2.js\"}, :z 0, :ports {:out {:out :string}}, :x 960.0851863779922, :y 1224.4579849567817}, :join-output-as-string {:y 1158.848120777027, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (clojure.string/join \" \" x)), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 2212.3248878272807, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :json-to-edn {:w 200, :h 100, :x 2685.7088668823244, :y 1151.33984375, :z 0, :data {:flow-item {:description \"Convert a JSON string to Clojure EDN\", :category \":rabbit-base\", :fn (fn [json-string] (rvbbit-backend.util/json-to-edn json-string)), :name \":json-to-edn\", :icon \"zmdi-file-text\", :types {:json-string :string, :out :any}, :input_types \"[:string]\", :inputs \"[:json-string]\", :output_types \":any\", :full_map \"{:description \\\"Convert a JSON string to Clojure EDN\\\", :fn (fn [json-string] (rvbbit-backend.util/json-to-edn json-string)), :inputs [:json-string], :icon \\\"zmdi-file-text\\\", :types {:json-string :string, :out :any}}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [1297.1770935058594 207.171875], :h 6, :connection-id nil, :queries {:name-drag-41 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :uu284]], :where [:= :name \":json-to-edn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":json-to-edn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 7}}, :icon \"zmdi-file-text\", :ports {:in {:json-string :string}, :out {:dominantColor :string, :colorPalette :vector, :* :map}}}}, :connections [[:shell-command-in :clojure-string-join-1/value-1] [:image-path :clojure-string-join-1/value-2] [:clojure-string-join-1 :shell-command-1/command] [:shell-command-1/output :join-output-as-string/value] [:join-output-as-string :json-to-edn/json-string] [:json-to-edn :done]]}, :flow-id \"node-color-thief-js\", :w 200, :icon \"zmdi-puzzle-piece\", :z 0, :ports {:in {:image-path :string, :shell-command-in :string}, :out {:dominantColor :string, :colorPalette :vector, :* :map}}, :h 100, :file-path \"./flows/node-color-thief-js.edn\", :x 3288.9801815257347, :data {:flow-item nil, :name \"drag-from-\", :w 5, :source-panel :flow-list*, :root [678.71875 344.6979217529297], :h 6, :connection-id nil, :view-output? false, :queries {:flow-id-drag-5 {:select [:flow_id :file_path :last_modified], :from [[:query/flows-sys :cc208]], :where [:= :flow_id \"node-color-thief-js\"]}}, :drag-meta {:data-type \"string\", :done-block :json-to-edn, :source-query :flows-sys, :param-full \"node-color-thief-js\", :param-field :flow_id, :source-panel-key :flow-list*, :type :sub-flow, :param-table :flows-sys, :source-table :query/flows-sys, :connection-id nil, :target :flow_id, :row-num 4}}}, :open-fn-9 {:y 1308.2844527633101, :fn (fn [x] x), :w 200, :raw-fn (fn [& x] \"vivid\"), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any, :value-1 :any}, :out {:error :string, :* :map}}, :h 100, :x 343.7386610243055, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-input {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input {:headers :value-2, :method :post, :url :value-3, :body {:prompt :value-0, :n 1, :size \"1792x1024\", :style :value-4, :response_format \"b64_json\", :model \"dall-e-3\", :quality :value-1}}}, :z 0, :ports {:out {:headers :map, :method :keyword, :url :string, :body :map, :* :map}, :in {:value-0 :any, :value-1 :any, :value-2 :any, :value-3 :any, :value-4 :any}}, :x 1309.4404009650732, :y 1191.9339613970587}, :dom-color1 {:y 1627.0126651539522, :fn (fn [x] x), :w 200, :raw-fn (fn [x] x), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 4034.728400735294, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-fn-11 {:y 1794.0621538947612, :fn (fn [x] x), :w 200, :raw-fn (fn [x] x), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx8 :string, :idx0 :string}}, :h 100, :x 4061.411247702206, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-fn-3 {:y 1343.2759061925549, :fn (fn [x] x), :w 200, :raw-fn (fn [x] x), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:revised_prompt :string, :b64_json :string, :* :map}}, :h 100, :x 2270.161167279412, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :quality {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"hd\"}, :z 0, :ports {:out {:out :string}}, :x 734.1538809317127, :y 1194.2060836226851}, :open-fn-4 {:y 1246.006547277114, :fn (fn [x] x), :w 200, :raw-fn (fn [x] x), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 2784.174551930146, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-fn-12 {:y 1624.2565088104782, :fn (fn [x] x), :w 200, :raw-fn (fn [x] [:v-box :children [[:img {:src (str (clojure.string/replace x \"/home/ryanr/rvbbit/frontend/resources/public/\" \"\")), :width \"600px\", :style {:border-radius \"10px\"}}]]]), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:idx0 :keyword, :idx1 :keyword, :idx2 :vector, :* :vector}}, :h 100, :x 4505.923477619014, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-fn-5 {:y 1551.3756304572612, :fn (fn [x] x), :w 200, :raw-fn (fn [x] x), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 2821.4617187500003, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :upper-mid {:y 2136.9676296657985, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (get x 6)), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 5306.102387152777, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :http-call-1 {:w 200, :h 100, :x 1747.3439280790442, :y 1235.2979650160846, :z 0, :data {:flow-item {:description \"Basic HTTP call primitive\", :category \":rabbit-base\", :fn (fn [req-map] (rvbbit-backend.websockets/http-call req-map)), :name \":http-call\", :icon \"zmdi-http\", :defaults {:req-map {:url \"https://owen-wilson-wow-api.onrender.com/wows/random\", :query-params {:movie \"Wedding Crashers\", :results 40}}}, :types {:req-map :map, :out :any}, :input_types \"[:map]\", :style {:color \"#7BB696\"}, :selected-style {:color \"#7BB696\"}, :inputs \"[:req-map]\", :output_types \":any\", :expandable? false, :full_map \"{:description \\\"Basic HTTP call primitive\\\", :fn (fn [req-map] (rvbbit-backend.websockets/http-call req-map)), :icon \\\"zmdi-http\\\", :defaults {:req-map {:url \\\"https://owen-wilson-wow-api.onrender.com/wows/random\\\", :query-params {:movie \\\"Wedding Crashers\\\", :results 40}}}, :types {:req-map :map, :out :any}, :style {:color \\\"#7BB696\\\"}, :selected-style {:color \\\"#7BB696\\\"}, :inputs [:req-map], :expandable? false, :required [:req-map]}\", :required [:req-map]}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [864.1770935058594 199.171875], :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-27 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ff241]], :where [:= :name \":http-call\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":http-call\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}, :icon \"zmdi-http\", :ports {:in {:req-map :map}, :out {:created :integer, :data :rowset, :* :map}}}, :open-fn-14 {:y 1182.8275316519948, :fn (fn [x] x), :w 200, :raw-fn (fn [x] [:box :child (str x) :size \"none\" :width \"500px\" :style {:font-size \"9px\", :overflow \"auto\"}] nil), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 4444.901514382471, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :gradient2 {:y 2042.9487506763357, :fn (fn [x] x), :w 200, :raw-fn (fn [x y] (vec (rvbbit-backend.util/generate-gradient x y 8))), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any, :value-1 :any}, :out {:idx7 :string, :idx5 :string, :* :vector, :idx2 :string, :idx4 :string, :idx1 :string, :idx6 :string, :idx3 :string, :idx0 :string}}, :h 100, :x 5749.094478297879, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :mid-high {:y 2301.8376654547615, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (get x 4)), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 5740.51254354941, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :open-input-2 {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"natural\"}, :z 0, :ports {:out {:out :string}}, :x -111.46861165364578, :y 1444.116943359375}, :headers-map {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input {\"Authorization\" \"Bearer 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\", \"Content-Type\" \"application/json\"}}, :z 0, :ports {:out {\"Authorization\" :string, \"Content-Type\" :string, :* :map}}, :x 786.0028392650462, :y 1522.4280164930553}, :url-str {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"https://api.openai.com/v1/images/generations\", :view-output? true}, :z 0, :ports {:out {:out :string}}, :x 768.1744249131942, :y 1362.70009765625}, :open-fn-10 {:y 2127.723868324454, :fn (fn [x] x), :w 200, :raw-fn (fn [x] x), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:dominantColor :string, :colorPalette :vector, :* :map}}, :h 100, :x 4055.738221356873, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :view-output? false, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}}, :flow-id \"dalle3-create-image\", :flowmaps-connections [[:in-prompt :open-input/value-0] [:quality :open-input/value-1] [:headers-map/* :open-input/value-2] [:url-str :open-input/value-3] [:open-input/* :open-fn-1/value] [:open-fn-1/* :http-call-1/req-map] [:http-call-1/data :open-fn-2/value] [:open-fn-2/idx0 :open-fn-3/value] [:open-fn-3/revised_prompt :open-fn-4/value] [:open-fn-3/b64_json :open-fn-5/value] [:open-fn-5 :open-fn-6/value] [:open-fn-5 :open-fn-7/value] [:open-fn-6 :open-fn-7/value-1] [:open-fn-7 :shell-command-1/command] [:open-fn-6 :done] [:open-fn-6 :open-fn-8/value] [:open-input-1 :open-fn-9/value] [:open-input-2 :open-fn-9/value-1] [:open-fn-9 :open-input/value-4] [:open-fn-5 :node-color-thief-js/image-path] [:node-color-thief-js/* :open-fn-10/value] [:node-color-thief-js/colorPalette :open-fn-11/value] [:node-color-thief-js/dominantColor :dom-color1/value] [:open-fn-11 :open-fn-13/value] [:open-fn-13 :darkest1/value] [:open-fn-13 :lightest1/value] [:open-fn-13 :ssecond-darkest/value] [:open-fn-13 :second-lightest/value] [:open-fn-13 :mid-high/value] [:open-fn-13 :upper-mid/value] [:ssecond-darkest :gradient1/value] [:upper-mid :gradient1/value-1] [:lightest1 :gradient2/value] [:ssecond-darkest :gradient2/value-1] [:gradient1 :make-data-colors/value] [:gradient2 :make-data-colors/value-1] [:open-fn-6 :open-fn-12/value] [:open-fn-12 :alert!-1/content] [:open-input-3/width :alert!-1/w] [:open-input-3/height :alert!-1/h] [:open-input-3/duration :alert!-1/duration] [:open-fn-4 :open-fn-14/value] [:open-fn-14 :alert!-2/content] [:open-input-3/width :alert!-2/w] [:open-input-3/height :alert!-2/h] [:open-input-3/duration :alert!-2/duration] [:shell-command-1/* :open-fn-8/value-1]]}" 1}, :cardinality 98}, :icon {:data-type "string", :distinct 1, :group-by? true, :commons {"zmdi-developer-board" 82}, :cardinality 1}}, :rowcount 82}, :flows-sys {:fields {:flow_id {:data-type "string", :distinct 80, :group-by? true, :commons {"clam-flow-851" 3, "map-pull-test2" 1, "callie-3" 1}, :cardinality 97}, :file_path {:data-type "string", :distinct 82, :group-by? true, :commons {"./flows/stitches-math.edn" 1, "./flows/hey-rabbit-pathfinder.edn" 1, "./flows/dalle3-create-image-newengland-old.edn" 1}, :cardinality 100}, :last_modified {:data-type "string", :distinct 12, :group-by? true, :commons {"2024-03-12 02:37:43" 71, "2024-03-14 07:50:09" 1, "2024-03-13 13:00:03" 1}, :cardinality 14}}, :rowcount 82}, :files-sys {:fields {:file_path {:data-type "string", :distinct 133, :group-by? true, :commons {"./screens/weave-test122.edn" 1, "./screens/nightcity-cape-cod.edn" 1, "./screens/counting-lord-of-the-woods.edn" 1}, :cardinality 100}, :screen_name {:data-type "string", :distinct 127, :group-by? true, :commons {"unnamed-screen!" 6, "tallica-param-test2" 2, "the-generated-lassff" 1}, :cardinality 95}, :blocks {:data-type "integer", :distinct 38, :group-by? true, :commons {3 44, 14 6, 12 6}, :cardinality 28}, :queries {:data-type "integer", :distinct 32, :group-by? true, :commons {0 50, 5 9, 6 9}, :cardinality 24}, :ts {:data-type "string", :distinct 5, :group-by? true, :commons {"2024-03-16 18:13:08" 57, "2024-03-16 18:13:09" 53, "2024-03-16 18:13:10" 20}, :cardinality 3}}, :rowcount 133}, :fflowparts-sys {:fields {:category {:data-type "string", :distinct 4, :group-by? true, :commons {":sub-flows" 80, ":rabbit-base" 18, ":clojure-base" 16}, :cardinality 3}, :description {:data-type "string", :distinct 34, :group-by? true, :commons {"" 80, "Basic HTTP call primitive" 2, "Clojure subtract function." 2}, :cardinality 29}, :name {:data-type "string", :distinct 115, :group-by? true, :commons {":=" 1, ":>=" 1, "map-pull-test2" 1}, :cardinality 100}, :file_path {:data-type "string", :distinct 3, :group-by? true, :commons {"" 113, "./flows/a-random-wow.edn" 1, "./flows/node-color-thief-js.edn" 1}, :cardinality 2}, :full_map {:data-type "string", :distinct 115, :group-by? true, :commons {"{:flow-id \"callie-ufos\", :flow-path \"./flows/callie-ufos.edn\", :inputs [:open-input-1 :open-input-3 :open-input-2], :required [:open-input-1 :open-input-3 :open-input-2], :defaults {:open-input-1 [:h-box :size \"auto\" :width \"580px\" :justify :between :children [[:box :child \"UFOs please.\"] [:md-icon :style {:font-size \"13px\", :margin-top \"-3px\"} :md-icon-name \"zmdi-mic\"]]], :open-input-3 \"evening-ryan-3456\", :open-input-2 :free-pyramidal-goat-exiled-from-blowhole}, :description nil, :icon \"zmdi-puzzle-piece\", :types {:open-input-1 :vector, :open-input-3 :string, :open-input-2 :keyword, :out :any}}" 1, "{:flow-id \"shark-flow-494\", :flow-path \"./flows/divine-sapphire-mouse-hailing-from-moulin.edn\", :inputs [:open-input], :required [:open-input], :defaults {:open-input \"feed me, seymour!\"}, :description nil, :icon \"zmdi-puzzle-piece\", :types {:open-input :string, :out nil}}" 1, "{:flow-id \"crow-flow-201\", :flow-path \"./flows/crow-flow-201.edn\", :inputs [:open-input], :required [:open-input], :defaults {:open-input :go}, :description nil, :icon \"zmdi-puzzle-piece\", :types {:open-input :keyword, :out :any}}" 1}, :cardinality 100}, :icon {:data-type "string", :distinct 21, :group-by? true, :commons {"zmdi-puzzle-piece" 80, "zmdi-pizza" 4, "zmdi-file-text" 3}, :cardinality 18}}, :rowcount 115}, :flow-fn-categories-sys {:fields {:category {:data-type "string", :distinct 4, :group-by? true, :commons {":sub-flows" 1, ":rabbit-base" 1, ":owen-wilson" 1}, :cardinality 100}}, :rowcount 4}, :connections-sys {:fields {:database_name {:data-type "string", :distinct 3, :group-by? true, :commons {"*cache-db*" 5, "SQLite" 4, "*csv-import-db*" 1}, :cardinality 30}, :connection_id {:data-type "string", :distinct 10, :group-by? true, :commons {"imported" 1, "bigfoot-ufos" 1, "snifftmp1" 1}, :cardinality 100}}, :rowcount 10}, :reco-counts {:fields {}, :rowcount 0}, :flow-fn-all-sys {:fields {:name {:data-type "string", :distinct 115, :group-by? true, :commons {":=" 1, ":>=" 1, "map-pull-test2" 1}, :cardinality 100}}, :rowcount 115}}, :default-col-widths {:system-connections-list* {:connections-sys 111}, :system-tables-list* {:tables-sys ##Inf}, :system-fields-list* {:fields-sys ##Inf}, :files-list* {:files-sys 178}, :blocks-list* {:blocks-sys 127}}, :data-hash 1391525932, :tabs ["strategic grill locations"], :selected-cols {}, :server {:settings {:harvest-on-boot? true, :default "./screens/looking-glass-redux.edn", :eleven-labs-api-key nil, :kits {:buffy {:author {:name "Ryan Robitaille", :email "ryan.robitaille@gmail.com", :x "@ryrobes", :site "https://ryrob.es/"}, :kit-name :buffy, :package-name :grab-bag, :fn (rvbbit-backend.assistants/buffy :query-name), :name "Ask Buffy!", :icon "zmdi-cocktail", :run-on :queries, :description "What does Buffy think about this data? Who knows!"}, :outliers {:description "A basic multivariate outlier detection runstream. Highlight outliers in various dimensional groupings as a launch pad for further exploration.", :image-url "images/outliers-image.png", :fn (rabbit-kit-outliers.core/get-outliers :query-name :panel-name :query), :name "Outliers", :icon "zmdi-functions", :author {:name "Ryan Robitaille", :email "ryan.robitaille@gmail.com", :x "@ryrobes", :site "https://ryrob.es/"}, :run-on :queries, :repl {:host "127.0.0.1", :port 42999}, :kit-name :outliers, :package-name :query-basics-1}, :forecast {:description "WIP: basic timeseries forecasting based on previous values", :fn (rabbit-kit-outliers.core/get-forecast :query-name :panel-name :query), :name "Forecasting", :icon "zmdi-brightness-7", :author {:name "Ryan Robitaille", :email "ryan.robitaille@gmail.com", :x "@ryrobes", :site "https://ryrob.es/"}, :run-on :queries, :repl {:host "127.0.0.1", :port 42999}, :kit-name :forecast, :package-name :query-basics-1}}, :graphite-host "127.0.0.1", :openapi-org-id nil, :debug-level 1, :screens ["GGGeat-ochre-mole-exiled-from-abyssal-plain" "SSSSSSuccessful-oval-sea-urchin-of-mountain-range" "SSuccessful-oval-sea-urchin-of-mountain-range" "aaa-run-amok" "aaaaah-esday-the-day" "aaaaah-wednesday-the-day" "aaaah-wednesday-the-day" "alice-puzzle-1" "asdasdasdasd" "autumn-theme" "battle-mage" "bigfoot-snapshots" "bigfoot-snapshots2" "bigfoot-snapshots3" "blank-sizzle" "blank-sizzle2" "blue-pines" "boston-test-10-3-23" "broken-jacket" "bunch of bullshit" "bunch of bullshit2" "bunch of bullshit4" "caliope" "calliope" "canvas-scrubber-test1" "capecod-viking" "chaos simple" "chaos-views" "chompers" "claude-testing2" "clean-grey-defaults" "code-data-literal-stonks-test" "conifer-boughs" "counting-lord-of-the-woods" "crazy-alice" "dark-crested-jackelope" "data-literals-test-sunday" "data-literals-test-sundaydd" "demo-dark-pumpkin-bkgrd-sept23" "demo-light-bkgrd-sept23" "demo-lime-green-slime" "desktops-and-broomsticks" "error-monitor" "error-monitor-vanessa" "error-monitor-vanessa2" "error-monitor-vanessa3" "evil-main-street" "fake-books-1" "fetching-pentagonal-termite-of-tghe-submarine-canyon" "final-fantasy-dorchester" "fox-hills" "glass-fish-board-test" "green-storm-city" "hue-board-1" "late-winter-theme" "lavender-side-eye" "layout-test-1" "layout-test-12" "light-theme" "literal-data-test" "looking-glass-redux" "looking-glass-redux2" "luck-of-the-irish" "mapbox-test" "may-20" "my-goodness" "my-goodness-the-sequel" "neverwinter-amy" "night-city-never-sleeps" "nightcity-cape-cod" "nivo-getting-better!" "nivo-hacking-2023" "nivo-hacking-2023333" "nivo-hacking-october-2nd" "old-defaults" "old-fashioned-christmas" "old-town-snow-stars" "pensive-look" "pine-wood-dawn" "pink-and-green-elk" "pink-dusk-falls" "pinup-rabbit-fields" "poor-touring-me" "pres-sql-test-1" "purple-dusk-old-town" "purple-nightshades" "purple-techno-sunset" "recharts-test-blocks" "refresh-test" "retro-machines" "riffle-test" "sick-of-your-shit" "sizzle-board-1" "sneaky-swamp-creatures1" "stop-drawing-dead-dashboards" "swamp-nightgown" "swamp-reacher" "tallica-param-test2" "tangerine-dreams" "technicolor-shanny" "the-future-soon" "the-generated-lass" "the-generated-lass-glow" "the-generated-lass-ne" "the-generated-lass-sgt" "the-generated-lassff" "the-outer-blues" "trad-hybrid" "tweet-bigfoot-is-blurry" "tweet-demo-thing-bigfoot-is-blurry" "unnamed-screen!" "viking-pastels" "weave-test" "weave-test1" "weave-test122" "who ya gonna call?" "who ya gonna call? again" "winter-theme" "winter-theme-choom" "winter-theme2" "winter-theme33" "winter-theme45" "winter-theme47" "winter-twin-peaks" "witchy425" "wonderland-horror-interface" "wow-board"], :openapi-key "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"}}, :editor? false, :buffy? false, :memory [302541945 276876337 4294705152], :status-data {:heartbeat {:kick {:data [{:sent! :heartbeat, :to :all, :at "2024-03-17 16:27:24", :payload nil, :payload-kp [:heartbeat :heartbeat]} nil], :elapsed-ms nil, :reco-count nil}}, :alert1 {:alerts {:data [[[:> :ResponsiveContainer {:width "100%", :height :panel-height+50} [:> :ComposedChart {:data [{:mem 153, :tick 0, :threads 93, :subs 10, :load 1.26171875}], :margin {:top 5, :bottom 5, :right 30, :left 20}} [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}] [:> :Tooltip {:contentStyle {:backgroundColor "#00000099"}}] [:> :XAxis {:dataKey :tick, :hide true}] [:> :YAxis {:yAxisId "left", :hide true, :dataKey :mem}] [:> :YAxis {:yAxisId "right", :hide true, :dataKey :threads, :orientation "right"}] [:> :Bar {:yAxisId "left", :dataKey :mem, :isAnimationActive false, :stroke :theme/editor-outer-rim-color, :fill [:string :theme/editor-outer-rim-color "33"]}] [:> :Line {:yAxisId "right", :strokeWidth 4, :type "monotone", :dot false, :dataKey :threads, :isAnimationActive false, :stroke :theme/editor-grid-selected-background-color, :fill :theme/editor-grid-selected-background-color}] [:> :Line {:stroke :theme/block-tab-selected-font-color, :fill :theme/block-tab-selected-font-color, :type "monotone", :yAxisId "right", :dataKey :subs, :strokeWidth 3, :strokeDasharray "5 5", :dot false, :isAnimationActive false}]]] 10 4 5] nil], :elapsed-ms nil, :reco-count nil}}, "kick-test!" {:kick {:data [{:sent! "kick-test!", :to :spiritual-rectangular-sea-urchin-banned-from-ria, :at "2024-03-17 16:26:54", :payload {:query-log {:data [{:content ["2024-03-17 16:26:54 - query ran in 3 ms."], :name "query-log-:fflows-sys", :order 1710707214, :parameters {}, :forced-mutates {}, :step-mutates {}}], :description "query-log-:fflows-sys", :mutates {}, :options {:actions? false, :pages? false, :search? false}, :parameters {}}}, :payload-kp [:fflows-sys "kick-test!"]} nil], :elapsed-ms nil, :reco-count nil}}}, :flow-subs [:flow/live-scratch-flow>*running?], :client-name :spiritual-rectangular-sea-urchin-banned-from-ria, :alt-key-held? false, :flow-editor? false, :openai-api-key "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", :window {:w 2149, :h 1243}, :status {:heartbeat {:kick [:flow/live-scratch-flow>*running?]}, :alert1 {:alerts :alert2}, "kick-test!" {:kick :fflows-sys}}, :recos-page2 0, :selected-tab "strategic grill locations", :openai-org-id "org-YLngjih2M4oju0tnnZtKCAYg", :alerts [], :recos-page 0, :rs-overrides-hashmap {}, :panels-hash 1428528398, :sessions [["independent-pyramidal-pheasant-banned-from-stratocone.edn" "133 hours, 48 minutes, 45 seconds" 481725652] ["good-hexagonal-hummingbird-banned-from-ait.edn" "78 hours, 51 minutes, 41 seconds" 283901736] ["positive-raspberry-swallow-exiled-from-sound.edn" "35 hours, 36 minutes, 31 seconds" 128191640] ["intelligent-silver-swallow-banned-from-maar.edn" "76 hours, 3 minutes, 49 seconds" 273829208] ["whole-icosahedral-frog-hailing-from-thermokarst.edn" "133 hours, 48 minutes, 45 seconds" 481725648] ["special-globular-coyote-of-oceanic-trench.edn" "133 hours, 48 minutes, 45 seconds" 481725644] ["brilliant-linear-monkey-hailing-from-natural-arch.edn" "133 hours, 48 minutes, 45 seconds" 481725644] ["honest-icosahedral-boar-of-the-arroyo.edn" "81 hours, 3 minutes, 33 seconds" 291813690] ["trusting-cubic-eagle-hailing-from-salt-pan.edn" "133 hours, 48 minutes, 45 seconds" 481725644] ["bubbly-ovoid-bee-hailing-from-pull-apart-basin.edn" "133 hours, 48 minutes, 45 seconds" 481725632] ["open-crimson-bear-of-the-supervolcano.edn" "110 hours, 20 minutes, 3 seconds" 397203034] ["lovely-cyan-hummingbird-banned-from-stratovolcano.edn" "53 hours, 26 minutes, 23 seconds" 192383281] ["good-bulbous-woodpecker-banned-from-pingo.edn" "133 hours, 48 minutes, 45 seconds" 481725620] ["impressive-periwinkle-jay-banned-from-rock-formations.edn" "133 hours, 48 minutes, 45 seconds" 481725620] ["honest-orchid-fish-banned-from-volcanic-crater.edn" "133 hours, 48 minutes, 45 seconds" 481725616] ["clean-pyramidal-human-hailing-from-gulch.edn" "133 hours, 48 minutes, 45 seconds" 481725616] ["optimistic-carmine-mole-hailing-from-flat.edn" "133 hours, 48 minutes, 45 seconds" 481725612] ["energetic-plum-hyena-of-the-marine-terrace.edn" "81 hours, 6 minutes, 3 seconds" 291963714] ["stellar-oval-swan-of-salt-marsh.edn" "133 hours, 48 minutes, 45 seconds" 481725608] ["amazing-ochre-yellow-jacket-of-the-complex-volcano.edn" "49 hours, 52 minutes, 22 seconds" 179542590] ["upright-slate-gray-termite-of-the-central-peak.edn" "55 hours, 41 minutes, 49 seconds" 200509696] ["light-linear-hedgehog-of-confluence.edn" "133 hours, 48 minutes, 45 seconds" 481725604] ["refined-rhomboidal-hawk-banned-from-nivation-hollow.edn" "49 hours, 48 minutes, 7 seconds" 179287254] ["ethical-round-oyster-of-glacial-horn.edn" "133 hours, 48 minutes, 45 seconds" 481725604] ["ideal-long-oyster-banned-from-lava.edn" "133 hours, 48 minutes, 45 seconds" 481725604] ["accomplished-globular-dove-banned-from-swamp.edn" "73 hours, 18 minutes, 35 seconds" 263915055] ["supporting-narrow-beaver-banned-from-strath.edn" "133 hours, 48 minutes, 45 seconds" 481725604] ["remarkable-thin-wombat-banned-from-flyggberg.edn" "75 hours, 59 minutes, 42 seconds" 273582131] ["healthy-rhomboidal-grasshopper-of-drainage-basin.edn" "133 hours, 48 minutes, 45 seconds" 481725600] ["sunny-puce-grasshopper-of-dry-lake.edn" "133 hours, 48 minutes, 45 seconds" 481725600] ["reassuring-rectangular-locust-exiled-from-oceanic-trench.edn" "133 hours, 48 minutes, 45 seconds" 481725596] ["vibrant-champagne-gnat-of-the-volcanic-island.edn" "133 hours, 48 minutes, 45 seconds" 481725596] ["gorgeous-wide-wren-banned-from-etchplain.edn" "131 hours, 20 minutes, 12 seconds" 472812685] ["terrific-round-pheasant-hailing-from-honeycomb-weathering.edn" "110 hours, 21 minutes, 36 seconds" 397296190] ["ready-cerise-badger-of-the-ria.edn" "133 hours, 48 minutes, 45 seconds" 481725596] ["friendly-turquoise-yak-exiled-from-pseudocrater.edn" "81 hours, 14 minutes, 12 seconds" 292452987] ["victorious-plum-locust-exiled-from-watershed.edn" "36 hours, 48 minutes, 25 seconds" 132505006] ["attractive-magenta-turtle-exiled-from-hillock.edn" "133 hours, 48 minutes, 45 seconds" 481725588] ["positive-circular-platypus-exiled-from-pit-crater.edn" "133 hours, 48 minutes, 45 seconds" 481725588] ["seemly-carmine-skunk-banned-from-outwash-plain.edn" "133 hours, 48 minutes, 45 seconds" 481725580] ["fine-hexagonal-kangaroo-hailing-from-lava-spine.edn" "2 minutes, 25 seconds" 145863] ["healing-rectangular-pig-of-salt-pan.edn" "133 hours, 48 minutes, 45 seconds" 481725576] ["earnest-puce-squirrel-of-flared-slope.edn" "99 hours, 37 minutes, 58 seconds" 358678649] ["friendly-bulbous-hippopotamus-exiled-from-erg.edn" "32 hours, 28 minutes, 54 seconds" 116934784] ["luminous-black-codfish-of-the-dale.edn" "133 hours, 48 minutes, 45 seconds" 481725572] ["affluent-baby-blue-kangaroo-hailing-from-hoodoo.edn" "133 hours, 48 minutes, 45 seconds" 481725568] ["prepared-circular-tiger-of-tidal-marsh.edn" "133 hours, 48 minutes, 45 seconds" 481725568] ["brilliant-copper-toad-of-the-proglacial-lake.edn" "133 hours, 48 minutes, 45 seconds" 481725564] ["kind-turquoise-parrot-banned-from-machair.edn" "45 hours, 39 minutes, 30 seconds" 164370239] ["genuine-elliptic-wolf-of-the-oasis.edn" "133 hours, 48 minutes, 45 seconds" 481725564] ["moving-fat-hamster-banned-from-oxbow-lake.edn" "133 hours, 48 minutes, 45 seconds" 481725564] ["green-periwinkle-gnat-of-shoal.edn" "133 hours, 48 minutes, 45 seconds" 481725560] ["fair-long-mule-exiled-from-watershed.edn" "49 hours, 47 minutes, 55 seconds" 179275382] ["remarkable-orchid-gull-hailing-from-somma-volcano.edn" "133 hours, 48 minutes, 45 seconds" 481725552] ["genuine-slate-gray-gerbil-banned-from-strait.edn" "133 hours, 48 minutes, 45 seconds" 481725552] ["instinctive-square-nightingale-of-the-hoodoo.edn" "133 hours, 48 minutes, 45 seconds" 481725552] ["brilliant-maroon-otter-banned-from-entrenched-meander.edn" "133 hours, 48 minutes, 45 seconds" 481725548] ["ethical-orange-buffalo-exiled-from-hornito.edn" "127 hours, 6 minutes, 11 seconds" 457571012] ["healthy-orchid-otter-of-pseudocrater.edn" "45 hours, 39 minutes, 21 seconds" 164361235] ["plentiful-pyramidal-sand-dollar-of-arroyo.edn" "133 hours, 48 minutes, 45 seconds" 481725544] ["constant-star-shaped-echidna-banned-from-towhead.edn" "110 hours, 19 minutes, 58 seconds" 397198634] ["soulful-red-termite-exiled-from-backswamp.edn" "133 hours, 48 minutes, 45 seconds" 481725532] ["adorable-fat-swan-hailing-from-moraine.edn" "133 hours, 48 minutes, 45 seconds" 481725524] ["kind-lemon-mallard-hailing-from-supervolcano.edn" "133 hours, 48 minutes, 45 seconds" 481725524] ["agreeable-orchid-dove-of-palsa.edn" "133 hours, 48 minutes, 45 seconds" 481725520] ["distinguished-harlequin-cheetah-of-the-drumlin.edn" "133 hours, 48 minutes, 45 seconds" 481725520] ["thrilling-rhomboidal-eagle-of-the-v-shaped-valley.edn" "133 hours, 48 minutes, 45 seconds" 481725516] ["quick-narrow-jay-of-ria.edn" "133 hours, 48 minutes, 45 seconds" 481725516] ["encouraging-octohedral-spider-banned-from-col.edn" "1 minute, 12 seconds" 72466] ["grin-fat-wren-of-thalweg.edn" "133 hours, 48 minutes, 45 seconds" 481725508] ["honest-wide-mouse-exiled-from-subglacial-mound.edn" "133 hours, 48 minutes, 45 seconds" 481725508] ["refreshing-thin-dolphin-of-the-cuesta.edn" "83 hours, 16 minutes, 10 seconds" 299770943] ["meaningful-rhomboidal-kangaroo-banned-from-volcanic-dam.edn" "81 hours, 13 minutes, 17 seconds" 292397823] ["lucky-indigo-bear-of-hornito.edn" "133 hours, 48 minutes, 45 seconds" 481725508] ["rejoiceful-burgundy-wasp-banned-from-sand-boil.edn" "133 hours, 48 minutes, 45 seconds" 481725508] ["instinctive-lilac-chicken-of-the-scree.edn" "33 hours, 7 minutes, 51 seconds" 119271255] ["affluent-chocolate-hawk-exiled-from-volcanic-island.edn" "133 hours, 48 minutes, 45 seconds" 481725504] ["honorable-amethyst-skunk-of-the-calanque.edn" "133 hours, 48 minutes, 45 seconds" 481725504] ["zealous-linear-raven-banned-from-lava-spine.edn" "133 hours, 48 minutes, 45 seconds" 481725504] ["spiritual-rectangular-sea-urchin-banned-from-ria.edn" "14 minutes, 22 seconds" 862583] ["proud-thin-elk-of-r√¥che-moutonn√©e.edn" "133 hours, 48 minutes, 45 seconds" 481725496] ["plentiful-cylindrical-grasshopper-banned-from-gulch.edn" "133 hours, 48 minutes, 45 seconds" 481725492] ["upbeat-fat-dove-exiled-from-marine-terrace.edn" "133 hours, 48 minutes, 45 seconds" 481725492] ["sunny-mauve-tiger-hailing-from-permafrost-plateau.edn" "133 hours, 48 minutes, 45 seconds" 481725488] ["gorgeous-spring-bud-wallaby-of-the-permafrost-plateau.edn" "133 hours, 48 minutes, 45 seconds" 481725484] ["accepted-icosahedral-hedgehog-exiled-from-tuff-cone.edn" "133 hours, 48 minutes, 45 seconds" 481725484] ["poised-tan-seal-of-the-potrero.edn" "75 hours, 10 minutes, 44 seconds" 270644235] ["earnest-ultramarine-serval-exiled-from-landforms-by-shape.edn" "133 hours, 48 minutes, 45 seconds" 481725480] ["wholesome-thin-bee-hailing-from-tuya.edn" "133 hours, 48 minutes, 45 seconds" 481725472] ["cute-amethyst-opossum-hailing-from-cirque.edn" "133 hours, 48 minutes, 45 seconds" 481725364] ["secure-taupe-heron-banned-from-tepui.edn" "131 hours, 22 minutes, 3 seconds" 472923553] ["spirited-bulbous-clam-of-the-towhead.edn" "83 hours, 4 minutes, 57 seconds" 299097597] ["independent-fat-koala-banned-from-tuya.edn" "133 hours, 48 minutes, 45 seconds" 481725344] ["novel-viridian-magpie-banned-from-moraine.edn" "25 hours, 46 minutes, 1 second" 92761630] ["glowing-long-grasshopper-of-playa-lake.edn" "133 hours, 48 minutes, 45 seconds" 481725344] ["fine-orange-louse-of-bluff.edn" "133 hours, 48 minutes, 45 seconds" 481725336] ["marvelous-sapphire-mosquito-hailing-from-dirt-cone.edn" "133 hours, 48 minutes, 45 seconds" 481725336] ["meaningful-turquoise-fly-hailing-from-lithalsa.edn" "133 hours, 48 minutes, 45 seconds" 481725336] ["safe-conical-bat-exiled-from-marine-terrace.edn" "133 hours, 48 minutes, 45 seconds" 481725328] ["vigorous-square-serval-banned-from-thalweg.edn" "128 hours, 26 minutes, 26 seconds" 462386794] ["vivacious-rectangular-penguin-hailing-from-lacustrine-terrace.edn" "133 hours, 48 minutes, 45 seconds" 481725328] ["keen-bronze-skunk-of-the-salt-pan.edn" "127 hours, 43 minutes, 30 seconds" 459810647] ["classic-round-mole-exiled-from-dirt-cone.edn" "33 hours, 57 seconds" 118857432] ["open-wide-dog-of-the-bluff.edn" "133 hours, 48 minutes, 45 seconds" 481725328] ["famous-burgundy-eel-of-glacier.edn" "133 hours, 48 minutes, 45 seconds" 481725328] ["courageous-amber-buffalo-exiled-from-barrier-bar.edn" "133 hours, 48 minutes, 45 seconds" 481725324] ["attractive-baby-blue-hummingbird-of-lagoon.edn" "31 hours, 29 minutes, 56 seconds" 113396226] ["satisfactory-narrow-donkey-banned-from-tea-table.edn" "133 hours, 48 minutes, 45 seconds" 481725320] ["honest-sapphire-eagle-exiled-from-escarpment.edn" "133 hours, 48 minutes, 45 seconds" 481725320] ["spirited-crimson-weasel-hailing-from-lithalsa.edn" "33 hours, 5 minutes, 23 seconds" 119123153] ["reassuring-fat-dog-banned-from-flat.edn" "133 hours, 48 minutes, 45 seconds" 481725316] ["satisfactory-navy-blue-fly-exiled-from-bar.edn" "74 hours, 46 minutes, 19 seconds" 269179067] ["favorable-baby-blue-wasp-hailing-from-Carolina-bay.edn" "133 hours, 48 minutes, 45 seconds" 481725316] ["fresh-electric-blue-seal-of-gulch.edn" "133 hours, 48 minutes, 45 seconds" 481725316] ["protected-linear-owl-hailing-from-raised-beach.edn" "25 hours, 53 minutes, 2 seconds" 93182160] ["gorgeous-elliptic-pronghorn-banned-from-rock-formations.edn" "133 hours, 48 minutes, 45 seconds" 481725312] ["beneficial-spherical-ostrich-hailing-from-volcanic-cone.edn" "133 hours, 48 minutes, 45 seconds" 481725312] ["instantaneous-rectangular-bird-of-lava.edn" "133 hours, 48 minutes, 45 seconds" 481725312] ["exciting-globular-mouse-banned-from-maar.edn" "25 hours, 44 minutes, 36 seconds" 92676001] ["dazzling-blush-badger-banned-from-plunge-pool.edn" "133 hours, 48 minutes, 45 seconds" 481725312] ["kind-rhomboidal-lion-of-the-floodplain.edn" "133 hours, 48 minutes, 45 seconds" 481725312] ["secure-elliptic-locust-hailing-from-badlands.edn" "1 hour, 19 minutes, 57 seconds" 4797169] ["meritorious-long-mule-of-pediplain.edn" "133 hours, 48 minutes, 45 seconds" 481725308] ["fantastic-magenta-hyena-of-the-scarp.edn" "133 hours, 48 minutes, 45 seconds" 481725304] ["effortless-gray-monkey-exiled-from-monadnock.edn" "30 minutes, 36 seconds" 1836856] ["worthy-cyan-rat-of-the-tea-table.edn" "58 hours, 12 minutes, 18 seconds" 209538330] ["genuine-bulbous-hedgehog-banned-from-cratered-landscape.edn" "25 hours, 43 minutes, 0 second" 92580624] ["refined-carmine-crow-exiled-from-ejecta-blanket.edn" "133 hours, 48 minutes, 45 seconds" 481725284] ["engaging-spring-green-antelope-of-the-table.edn" "133 hours, 48 minutes, 45 seconds" 481725281] ["robust-mauve-ox-of-the-cave.edn" "133 hours, 48 minutes, 45 seconds" 481725281] ["keen-periwinkle-butterfly-of-trim-line.edn" "133 hours, 48 minutes, 45 seconds" 481725281] ["famous-square-sand-dollar-hailing-from-yazoo-stream.edn" "131 hours, 17 minutes, 31 seconds" 472651614] ["favorable-icosahedral-opossum-banned-from-archipelago.edn" "55 hours, 11 minutes, 30 seconds" 198690588]], :last-run-throwaway "16:26:54", :elevenlabs-api-key "f74e20dec69741c2d51663cbd8cd4cf6", :user-params-hash 278685043, :grid-recos? true, :session-hash -589201141, :panels {:hello-there-brother {:h 3, :w 12, :root [2 2], :name "hello there!", :tab "strategic grill locations", :views {:heya! [:box :align :center :justify :center :style {:font-size "50px", :font-weight 700, :color :theme/editor-outer-rim-color, :padding-top "14px", :opacity 1, :font-family :theme/base-font} :child "hello! üêá üçÇ ü¶É"]}, :queries {}}}, :theme-colors-hashmap {"float" "#2A3959", "boolean" "#13283E", "map" "#536D82", "list" "#1F374E", "string" "#484F71", "vector" "#6B6B87", "keyword" "#C6DDAE", "rabbit-code" "#3E5970", "datetime" "#94939A", "integer" "#2D485F", "unknown" "#D510BBB", "date" "#A2AFB7", "nil" "#13283E"}, :click-param {:theme {:codemirror-theme "ayu-dark", :editor-param-background-color "#000000", :base-block-style {:backdrop-filter "blur(2px) brightness(70%) "}, :vega-defaults {:view {:stroke "transparent"}, :axis {:domainColor "#ffffff22", :grid true, :font "Lato", :labelColor "#ffffff88", :titleFont "Lato", :titleColor "#ffffff99", :labelFont "Lato", :domain false, :gridColor "#ffffff22", :tickColor "#ffffff22", :axisFont "Lato"}, :legend {:labelFont "Lato", :legendFont "Lato", :labelColor "#ffffff99", :titleColor "#ffffff99", :stroke "#ffffff99", :titleFont "Lato"}, :header {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"}, :mark {:font "Lato"}, :title {:font "Lato", :subtitleFont "Lato", :labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"}}, :grid-selected-column-css {:background-color "#00000088", :filter "brightness(200%)"}, :base-block-color-selected "#00030a", :block-title-font-color "#ffffff", :base-block-color "#05041182", :editor-rim-color "#297fb8", :base-block-filter-selected "drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)", :vega-default-color-scheme {:scheme "pastel2"}, :data-colors {"float" "#2A3959", "boolean" "#13283E", "map" "#536D82", "list" "#1F374E", "string" "#484F71", "vector" "#6B6B87", "keyword" "#C6DDAE", "rabbit-code" "#3E5970", "datetime" "#94939A", "integer" "#2D485F", "unknown" "#D510BBB", "date" "#A2AFB7", "nil" "#13283E"}, :editor-grid-selected-font-color "#000000", :monospaced-font "JetBrains Mono", :editor-grid-selected-background-color "#b8b2bb", :nivo-defaults {:font-family "Instagram Sans", :labels {:text {:fill "#ffffff", :font-size "16px", :font-family "Instagram Sans", :font-weight 700}}, :tooltip {:container {:background "#000", :color "#ffffff", :text {:fill "#eeeeee"}, :fontSize "18px", :borderRadius "4px", :boxShadow "0 1px 2px rgba(0, 0, 0, 0.55)", :padding "5px 9px"}, :basic {:whiteSpace "pre", :display "flex", :alignItems "center"}, :tableCell {:padding "3px 5px"}}, :axis {:legend {:text {:fill "#ffffff", :font-size "14px", :font-family "Instagram Sans", :font-weight 700}}, :ticks {:line {:stroke "#ffffff60"}, :text {:fill "#ffffff60", :font-weight 700}}}, :grid {:line {:stroke "#ffffff", :strokeWidth 0, :strokeDasharray "0 0"}}}, :editor-outer-rim-color "#297fb8", :grid-selected-font-color "#000000", :block-title-selected-font-color "#ffffff", :grid-selected-background-color "#a3d3ff", :grid-font-color "#ffffff", :canvas-background-css {:background-image "url(images/large/b64-decoded-9884793-8k-4k.png)", :transition "all 0.8s ease-in-out", :background-size "cover", :background-color "#424f57"}, :editor-font-color "#ffffff", :base-font "Instagram Sans", :block-tab-selected-font-color "#c9d1ff", :editor-background-color "#000006", :editor-grid-font-color "#ffffff"}, :flow {:live-scratch-flow>*running? false}, :param {:selected-view [nil nil], :selected-view-data nil}, :files-sys {:file_path "./screens/blue-pines.edn", :screen_name "blue-pines", :blocks 3, :queries 0, :ts "2024-03-16 18:13:08"}, :blocks-sys {:block_key ":*theme*", :block_name "(meta: this screen's theme)", :queries 0, :views 27, :block_data "{:codemirror-theme \"ayu-dark\", :editor-param-background-color \"#000000\", :base-block-style {:backdrop-filter \"blur(2px) brightness(70%) \"}, :vega-defaults {:view {:stroke \"transparent\"}, :axis {:domainColor \"#ffffff22\", :grid true, :font \"Lato\", :labelColor \"#ffffff88\", :titleFont \"Lato\", :titleColor \"#ffffff99\", :labelFont \"Lato\", :domain false, :gridColor \"#ffffff22\", :tickColor \"#ffffff22\", :axisFont \"Lato\"}, :legend {:labelFont \"Lato\", :legendFont \"Lato\", :labelColor \"#ffffff99\", :titleColor \"#ffffff99\", :stroke \"#ffffff99\", :titleFont \"Lato\"}, :header {:labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}, :mark {:font \"Lato\"}, :title {:font \"Lato\", :subtitleFont \"Lato\", :labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}}, :grid-selected-column-css {:background-color \"#00000088\", :filter \"brightness(200%)\"}, :base-block-color-selected \"#00030a\", :block-title-font-color \"#ffffff\", :base-block-color \"#05041182\", :editor-rim-color \"#297fb8\", :base-block-filter-selected \"drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)\", :vega-default-color-scheme {:scheme \"pastel2\"}, :data-colors {\"float\" \"#2A3959\", \"boolean\" \"#13283E\", \"map\" \"#536D82\", \"list\" \"#1F374E\", \"string\" \"#484F71\", \"vector\" \"#6B6B87\", \"keyword\" \"#C6DDAE\", \"rabbit-code\" \"#3E5970\", \"datetime\" \"#94939A\", \"integer\" \"#2D485F\", \"unknown\" \"#D510BBB\", \"date\" \"#A2AFB7\", \"nil\" \"#13283E\"}, :editor-grid-selected-font-color \"#000000\", :monospaced-font \"JetBrains Mono\", :editor-grid-selected-background-color \"#b8b2bb\", :nivo-defaults {:font-family \"Instagram Sans\", :labels {:text {:fill \"#ffffff\", :font-size \"16px\", :font-family \"Instagram Sans\", :font-weight 700}}, :tooltip {:container {:background \"#000\", :color \"#ffffff\", :text {:fill \"#eeeeee\"}, :fontSize \"18px\", :borderRadius \"4px\", :boxShadow \"0 1px 2px rgba(0, 0, 0, 0.55)\", :padding \"5px 9px\"}, :basic {:whiteSpace \"pre\", :display \"flex\", :alignItems \"center\"}, :tableCell {:padding \"3px 5px\"}}, :axis {:legend {:text {:fill \"#ffffff\", :font-size \"14px\", :font-family \"Instagram Sans\", :font-weight 700}}, :ticks {:line {:stroke \"#ffffff60\"}, :text {:fill \"#ffffff60\", :font-weight 700}}}, :grid {:line {:stroke \"#ffffff\", :strokeWidth 0, :strokeDasharray \"0 0\"}}}, :editor-outer-rim-color \"#297fb8\", :grid-selected-font-color \"#000000\", :block-title-selected-font-color \"#ffffff\", :grid-selected-background-color \"#a3d3ff\", :grid-font-color \"#ffffff\", :canvas-background-css {:background-image \"url(images/b64-decoded-9884793-8k-4k.png)\", :transition \"all 0.8s ease-in-out\", :background-size \"cover\", :background-color \"#424f57\"}, :editor-font-color \"#ffffff\", :base-font \"Instagram Sans\", :block-tab-selected-font-color \"#c9d1ff\", :editor-background-color \"#000006\", :editor-grid-font-color \"#ffffff\"}", :view_names ":codemirror-theme :editor-param-background-color :base-block-style :vega-defaults :grid-selected-column-css :base-block-color-selected :block-title-font-color :base-block-color :editor-rim-color :base-block-filter-selected :vega-default-color-scheme :data-colors :editor-grid-selected-font-color :monospaced-font :editor-grid-selected-background-color :nivo-defaults :editor-outer-rim-color :grid-selected-font-color :block-title-selected-font-color :grid-selected-background-color :grid-font-color :canvas-background-css :editor-font-color :base-font :block-tab-selected-font-color :editor-background-color :editor-grid-font-color", :query_names ""}}, :selected-flow "live-scratch-flow", :flow-statuses {"openai-image-gen-ladder" {:blocks_finished 23, :channels 0, :channels-open 0, :*started-by :encouraging-octohedral-spider-banned-from-col, :time-running "-1 second", :*running? false, :tracker-events 0, :channels-open? false, :retries-left 2}}}