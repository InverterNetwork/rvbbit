{:orders
 {:end-drag-43 [:end_max],
  :run-id-drag-36 [:run_id :rowcnt :mend],
  :new-query (:query_error),
  :fn_history
  [:flow_id
   :run_id
   :base_flow_id
   :channel
   :block
   :data_type
   :end_ts
   :start_ts
   :dbgn
   :elapsed_ms
   :from_block
   :dest
   :end
   :path
   :start
   :type
   :value
   :ts],
  :fn-history-drag-20
  [:base_flow_id
   :block
   :channel
   :data_type
   :dbgn
   :dest
   :elapsed_ms
   :end
   :end_ts
   :flow_id
   :from_block
   :path
   :run_id
   :start
   :start_ts
   :ts
   :type
   :value],
  :rowcnt-drag-33 [:rowcnt_sum],
  :base-flow-id-drag-26 [:base_flow_id :rowcnt],
  :gen-viz-715 [:elapsed_ms_sum_205 :block],
  :start-drag-26 [:start_min],
  :reco-counts [:table_name :cnt],
  :block-drag-34
  [:block :rowcnt :elapsed_ms_sum_205 :start :end :end_plus :run_id]},
 :reco-preview nil,
 :sql-source
 {:end-drag-43
  {:select [[[:max :end] :end_max]],
   :from
   [[{:select
      [:block
       [[:count 1] :rowcnt]
       [[:sum :elapsed_ms] :elapsed_ms_sum_205]
       :start
       :end
       [[:+ :end 1] :end_plus]
       :run_id],
      :from
      [[{:select
         [:base_flow_id
          :block
          :channel
          :data_type
          :dbgn
          :dest
          :elapsed_ms
          :end
          :end_ts
          :flow_id
          :from_block
          :path
          :run_id
          :start
          :start_ts
          :ts
          :type
          :value],
         :from [[:fn_history :qq205]],
         :where
         [:*when "quick-maths-v2" [:= :base_flow_id "quick-maths-v2"]]}
        :xx662]],
      :group-by [:block :start :end :run_id],
      :order-by [[:rowcnt :desc]],
      :where
      [:and
       [:not [:like :block "%/%"]]
       [:*when
        "ef82fc87-9495-415c-aafc-1cfa84b83501"
        [:= :run_id "ef82fc87-9495-415c-aafc-1cfa84b83501"]]]}
     :nn569]]},
  :run-id-drag-36
  {:select [:run_id [[:count 1] :rowcnt] [[:max :end] :mend]],
   :from
   [[{:select
      [:base_flow_id
       :block
       :channel
       :data_type
       :dbgn
       :dest
       :elapsed_ms
       :end
       :end_ts
       :flow_id
       :from_block
       :path
       :run_id
       :start
       :start_ts
       :ts
       :type
       :value],
      :from [[:fn_history :qq205]],
      :where
      [:*when "quick-maths-v2" [:= :base_flow_id "quick-maths-v2"]]}
     :ee568]],
   :group-by [:run_id],
   :order-by [[3 :desc]],
   :_last-run "02:25:05"},
  :new-query
  {:select [:*],
   :from
   [{:data
     (vec
       (filter
         (fn [x] (not (clojure.string/includes? (get x :block) "/")))
         (for
           [row
            (get (deref flowmaps.db/fn-history) "butterfly-flow-638")]
           {:start (get row :start),
            :end (get row :end),
            :block (str (get row :block))})))}],
   :_last-run "02:25:27"},
  :fn_history {:select [:*], :from [:fn_history], :limit 111},
  :fn-history-drag-20
  {:select
   [:base_flow_id
    :block
    :channel
    :data_type
    :dbgn
    :dest
    :elapsed_ms
    :end
    :end_ts
    :flow_id
    :from_block
    :path
    :run_id
    :start
    :start_ts
    :ts
    :type
    :value],
   :from [[:fn_history :qq205]],
   :where
   [:*when "quick-maths-v2" [:= :base_flow_id "quick-maths-v2"]],
   :_last-run "03:51:14"},
  :rowcnt-drag-33
  {:select [[[:sum :rowcnt] :rowcnt_sum]],
   :from
   [[{:select [:base_flow_id [[:count 1] :rowcnt]],
      :from
      [[{:select
         [:base_flow_id
          :block
          :channel
          :data_type
          :dbgn
          :dest
          :elapsed_ms
          :end
          :end_ts
          :flow_id
          :from_block
          :path
          :run_id
          :start
          :start_ts
          :ts
          :type
          :value],
         :from [[:fn_history :qq205]],
         :where [:*when nil [:= :base_flow_id nil]]}
        :pp244]],
      :group-by [:base_flow_id],
      :order-by [[:rowcnt :desc]]}
     :gg590]]},
  :base-flow-id-drag-26
  {:select [:base_flow_id [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:base_flow_id
       :block
       :channel
       :data_type
       :dbgn
       :dest
       :elapsed_ms
       :end
       :end_ts
       :flow_id
       :from_block
       :path
       :run_id
       :start
       :start_ts
       :ts
       :type
       :value],
      :from [[:fn_history :qq205]],
      :where [:*when nil [:= :base_flow_id nil]]}
     :pp244]],
   :group-by [:base_flow_id],
   :order-by [[:rowcnt :desc]],
   :_last-run "02:25:38"},
  :gen-viz-715
  {:select [[[[:sum :elapsed_ms_sum_205]] :elapsed_ms_sum_205] :block],
   :from
   [{:select
     [:block
      [[:count 1] :rowcnt]
      [[:sum :elapsed_ms] :elapsed_ms_sum_205]
      :start
      :end
      [[:+ :end 1] :end_plus]
      :run_id],
     :from
     [[{:select
        [:base_flow_id
         :block
         :channel
         :data_type
         :dbgn
         :dest
         :elapsed_ms
         :end
         :end_ts
         :flow_id
         :from_block
         :path
         :run_id
         :start
         :start_ts
         :ts
         :type
         :value],
        :from [[:fn_history :qq205]],
        :where
        [:*when "quick-maths-v2" [:= :base_flow_id "quick-maths-v2"]]}
       :xx662]],
     :group-by [:block :start :end :run_id],
     :order-by [[:rowcnt :desc]],
     :where
     [:and
      [:not [:like :block "%/%"]]
      [:*when
       "ef82fc87-9495-415c-aafc-1cfa84b83501"
       [:= :run_id "ef82fc87-9495-415c-aafc-1cfa84b83501"]]]}],
   :group-by [:block],
   :where
   [:*when
    "ef82fc87-9495-415c-aafc-1cfa84b83501"
    [:= :run_id "ef82fc87-9495-415c-aafc-1cfa84b83501"]]},
  :start-drag-26
  {:select [[[:min :start] :start_min]],
   :from
   [[{:select
      [:block
       [[:count 1] :rowcnt]
       [[:sum :elapsed_ms] :elapsed_ms_sum_205]
       :start
       :end
       [[:+ :end 1] :end_plus]
       :run_id],
      :from
      [[{:select
         [:base_flow_id
          :block
          :channel
          :data_type
          :dbgn
          :dest
          :elapsed_ms
          :end
          :end_ts
          :flow_id
          :from_block
          :path
          :run_id
          :start
          :start_ts
          :ts
          :type
          :value],
         :from [[:fn_history :qq205]],
         :where
         [:*when "quick-maths-v2" [:= :base_flow_id "quick-maths-v2"]]}
        :xx662]],
      :group-by [:block :start :end :run_id],
      :order-by [[:rowcnt :desc]],
      :where
      [:and
       [:not [:like :block "%/%"]]
       [:*when
        "ef82fc87-9495-415c-aafc-1cfa84b83501"
        [:= :run_id "ef82fc87-9495-415c-aafc-1cfa84b83501"]]]}
     :yy750]]},
  :block-drag-34
  {:select
   [:block
    [[:count 1] :rowcnt]
    [[:sum :elapsed_ms] :elapsed_ms_sum_205]
    :start
    :end
    [[:+ :end 1] :end_plus]
    :run_id],
   :from
   [[{:select
      [:base_flow_id
       :block
       :channel
       :data_type
       :dbgn
       :dest
       :elapsed_ms
       :end
       :end_ts
       :flow_id
       :from_block
       :path
       :run_id
       :start
       :start_ts
       :ts
       :type
       :value],
      :from [[:fn_history :qq205]],
      :where
      [:*when "quick-maths-v2" [:= :base_flow_id "quick-maths-v2"]]}
     :xx662]],
   :group-by [:block :start :end :run_id],
   :order-by [[:rowcnt :desc]],
   :where
   [:and
    [:not [:like :block "%/%"]]
    [:*when
     "ef82fc87-9495-415c-aafc-1cfa84b83501"
     [:= :run_id "ef82fc87-9495-415c-aafc-1cfa84b83501"]]],
   :_last-run "02:25:31"}},
 :meta
 {:flow-fn-sys
  {:fields
   {:name
    {:data-type "string",
     :distinct 29,
     :group-by? true,
     :commons {":=" 1, ":>=" 1, ":write-file" 1},
     :cardinality 100},
    :full_map
    {:data-type "string",
     :distinct 29,
     :group-by? true,
     :commons
     {"{:file-path \"./flows/a-random-wow.edn\", :icon \"zmdi-pizza\", :description \"A random Owen Wilson quote from the Wedding Crashers movie.\"}"
      1,
      "{:description \"Clojure greater-than-or-equal function.\", :fn >, :inputs [:value1 :value2], :icon \"zmdi-chevron-right\", :types {:value1 [:integer :float], :value2 [:integer :float], :out :boolean}}"
      1,
      "{:description \"Clojure subtract function.\", :fn =, :inputs [:value1 :value2], :icon \"zmdi-swap\", :types {:value1 :any, :value2 :any, :out :boolean}}"
      1},
     :cardinality 100},
    :description
    {:data-type "string",
     :distinct 28,
     :group-by? true,
     :commons
     {"Clojure subtract function." 2,
      "Get top 50 color frequencies from an image in hex form." 1,
      "Clojure.string's join function." 1},
     :cardinality 96},
    :inputs
    {:data-type "string",
     :distinct 16,
     :group-by? true,
     :commons {"[:value1 :value2]" 8, "[:value]" 6, "" 2},
     :cardinality 55},
    :icon
    {:data-type "string",
     :distinct 18,
     :group-by? true,
     :commons {"zmdi-pizza" 4, "zmdi-file-text" 3, "zmdi-dns" 2},
     :cardinality 62},
    :input_types
    {:data-type "string",
     :distinct 14,
     :group-by? true,
     :commons
     {"[[:integer :float] [:integer :float]]" 7,
      "[:string]" 5,
      "[:any]" 3},
     :cardinality 48},
    :output_types
    {:data-type "string",
     :distinct 8,
     :group-by? true,
     :commons {":boolean" 11, ":any" 6, ":string" 4},
     :cardinality 27},
    :category
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {":clojure-base" 16, ":rabbit-base" 12, ":owen-wilson" 1},
     :cardinality 10}},
   :rowcount 29},
  :end-drag-43
  {:fields
   {:end_max
    {:data-type "unknown",
     :distinct 1,
     :group-by? false,
     :commons {nil 1},
     :cardinality 100}},
   :rowcount 1},
  :fields-sys
  {:fields
   {:field_name
    {:data-type "string",
     :distinct 18,
     :group-by? true,
     :commons {"end" 1, "base_flow_id" 1, "flow_id" 1},
     :cardinality 100},
    :field_type
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons {"TEXT" 14, "NUMBER" 2, "TIMESTAMP" 1},
     :cardinality 22},
    :data_type
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {"string" 14, "integer" 3, "datetime" 1},
     :cardinality 16}},
   :rowcount 18},
  :run-id-drag-36
  {:fields
   {:run_id
    {:data-type "string",
     :distinct 7,
     :group-by? true,
     :commons
     {"2bd885f2-725b-44a5-be66-d04974778f2e" 1,
      "dbb1daf7-6ba1-48ba-a2d2-3bfdb6648ca3" 1,
      "2f469579-6e1e-4ff3-b583-ccdb7d1f8527" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 2,
     :group-by? false,
     :commons {25 4, 24 3},
     :cardinality 28},
    :mend
    {:data-type "integer",
     :distinct 7,
     :group-by? false,
     :commons {1707107685211 1, 1707107691853 1, 1707107718306 1},
     :cardinality 100}},
   :rowcount 7},
  :tables-sys
  {:fields
   {:db_schema
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"none" 7},
     :cardinality 14},
    :db_catalog
    {:data-type "unknown",
     :distinct 1,
     :group-by? true,
     :commons {nil 7},
     :cardinality 14},
    :connection_id
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"flows-db" 7},
     :cardinality 14},
    :schema_cat
    {:data-type "unknown",
     :distinct 1,
     :group-by? false,
     :commons {nil 7},
     :cardinality 14},
    :table_name
    {:data-type "string",
     :distinct 7,
     :group-by? true,
     :commons {"live_schedules" 1, "fn_history" 1, "flows" 1},
     :cardinality 100},
    :fields
    {:data-type "integer",
     :distinct 7,
     :group-by? false,
     :commons {7 1, 19 1, 8 1},
     :cardinality 100}},
   :rowcount 7},
  :new-query
  {:fields
   {:query_error
    {:data-type "string",
     :distinct 2,
     :group-by? true,
     :commons
     {"(from database connection)" 1,
      "[SQLITE_ERROR] SQL error or missing database (no such table: new_query___rowcount)"
      1},
     :cardinality 100}},
   :rowcount 2},
  :fn_history
  {:fields
   {:from_block
    {:data-type "string",
     :distinct 109,
     :group-by? true,
     :commons {":static" 66, ":open-input-3" 12, ":open-fn-6" 11},
     :cardinality 21},
    :path
    {:data-type "string",
     :distinct 55,
     :group-by? true,
     :commons
     {"[:open-input-2 :open-fn-9/value-1 :open-fn-9 :open-input/value-4 :open-input :open-fn-1/value :open-fn-1 :http-call-1/req-map :http-call-1 :http-call-1-data/in :http-call-1-data :open-fn-2/value :open-fn-2 :open-fn-2-idx0/in :open-fn-2-idx0 :open-fn-3/value :open-fn-3 :open-fn-3-b64_json/in :open-fn-3-b64_json :open-fn-5/value :open-fn-5 :node-color-thief-js/image-path :node-color-thief-js :node-color-thief-js-colorPalette/in :node-color-thief-js-colorPalette :open-fn-11/value :open-fn-11 :open-fn-13/value :open-fn-13 :ssecond-darkest/value :ssecond-darkest :gradient1/value :gradient1 :make-data-colors/value :make-data-colors]"
      109,
      "[:error-path-issue!]" 36,
      "[:open-input-1 :open-fn-9/value :open-fn-9 :open-input/value-4 :open-input :open-fn-1/value :open-fn-1 :http-call-1/req-map :http-call-1 :http-call-1-data/in :http-call-1-data :open-fn-2/value :open-fn-2 :open-fn-2-idx0/in :open-fn-2-idx0 :open-fn-3/value :open-fn-3 :open-fn-3-b64_json/in :open-fn-3-b64_json :open-fn-5/value :open-fn-5 :open-fn-6/value :open-fn-6 :open-fn-7/value-1 :open-fn-7 :shell-command-1/command :shell-command-1 :open-fn-8/value-1 :open-fn-8]"
      28},
     :cardinality 10},
    :block
    {:data-type "string",
     :distinct 143,
     :group-by? true,
     :commons
     {":done" 9, ":shell-command-1/command" 7, ":shell-command-1" 6},
     :cardinality 28},
    :elapsed_ms
    {:data-type "integer",
     :distinct 24,
     :group-by? true,
     :commons {0 432, 1 39, 2 5},
     :cardinality 4},
    :end_ts
    {:data-type "string",
     :distinct 20,
     :group-by? true,
     :commons
     {"2024-02-05 04:34:37" 74,
      "2024-02-05 04:31:35" 38,
      "2024-02-05 04:37:45" 38},
     :cardinality 3},
    :run_id
    {:data-type "string",
     :distinct 12,
     :group-by? true,
     :commons
     {"0c16a041-2aa2-4519-a275-e9e09830995a" 94,
      "0c5ded6b-0784-44be-9d68-71b156ab620d" 92,
      "6bd7a15b-fae0-4e7c-9573-326cf3d8a28c" 91},
     :cardinality 2},
    :value
    {:data-type "string",
     :distinct 132,
     :group-by? true,
     :commons
     {"{:headers {\"Authorization\" \"Bearer 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\", \"Content-Type\" \"application/json\"}, :method :post, :url \"https://api.openai.com/v1/images/generations\", :body {:prompt \"A high-definition, hyperreal, vivid 16:9 highly stylized & exaggerated illustration of a New England scene in America, just before dawn during a heavy snowstorm, blending traditional and cyberpunk elements. The scene carries a slightly gritty atmosphere, with the town blanketed in snow and buildings emitting gentle pink and neon light blue illuminations. On the left side of the frame, a young and beautiful Irish woman, clearly in her early 30s, with full pouty lips (the bottom one being prominent) and a slightly upturned nose, offers a pleased yet sultry expression on her large mouth - buxom and robust. Pin-up. Her long hair, slightly dampened with snow accumulated on it and her face, amplifies the intensity of the snowfall. She is adorned with intricate Celtic-style tattoos of rabbits and wilderness over her neck, collarbone, and shoulders. The pre-dawn light instills a serene yet enigmatic ambiance to the scene, emphasizing the synergy between the natural world and technological influence. As the sun rises, its light gleams off her body radiantly.\", :n 1, :size \"1792x1024\", :style \"vivid\", :response_format \"b64_json\", :model \"dall-e-3\", :quality \"hd\"}}"
      20,
      "vivid" 19,
      ":vital-globular-sheep-exiled-from-crater-lake" 19},
     :cardinality 26},
    :start
    {:data-type "integer",
     :distinct 391,
     :group-by? true,
     :commons {1707107865790 5, 1707107677264 5, 1707107638108 4},
     :cardinality 78},
    :channel
    {:data-type "string",
     :distinct 143,
     :group-by? true,
     :commons
     {"[:done]" 9,
      "[:shell-command-1/command]" 7,
      "[:shell-command-1]" 6},
     :cardinality 28},
    :type
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":function" 500},
     :cardinality 0},
    :base_flow_id
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"dalle3-create-image" 377,
      "quick-maths-v2" 74,
      "dalle3-create-image/node-color-thief-js" 49},
     :cardinality 0},
    :ts
    {:data-type "string",
     :distinct 13,
     :group-by? true,
     :commons
     {"2024-02-05 04:34:39" 77,
      "2024-02-05 04:37:49" 76,
      "2024-02-05 04:31:39" 75},
     :cardinality 2},
    :flow_id
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"dalle3-create-image" 377,
      "quick-maths-v2" 74,
      "dalle3-create-image/node-color-thief-js" 49},
     :cardinality 0},
    :start_ts
    {:data-type "string",
     :distinct 19,
     :group-by? true,
     :commons
     {"2024-02-05 04:34:37" 74,
      "2024-02-05 04:37:45" 40,
      "2024-02-05 04:31:34" 39},
     :cardinality 3},
    :data_type
    {:data-type "string",
     :distinct 9,
     :group-by? true,
     :commons {"string" 184, "map" 123, "integer" 62},
     :cardinality 1},
    :end
    {:data-type "integer",
     :distinct 405,
     :group-by? true,
     :commons {1707107865788 5, 1707107677264 5, 1707107828616 4},
     :cardinality 81},
    :dest
    {:data-type "string",
     :distinct 143,
     :group-by? true,
     :commons
     {":done" 9, ":shell-command-1/command" 7, ":shell-command-1" 6},
     :cardinality 28},
    :dbgn
    {:data-type "string",
     :distinct 2,
     :group-by? true,
     :commons {"" 434, nil 66},
     :cardinality 0}},
   :rowcount 500},
  :fn-history-drag-20
  {:fields
   {:from_block
    {:data-type "string",
     :distinct 20,
     :group-by? true,
     :commons
     {":static" 28, ":start-with-a-bang" 13, ":static-value-2" 13},
     :cardinality 11},
    :path
    {:data-type "string",
     :distinct 13,
     :group-by? true,
     :commons
     {"[:start-with-a-bang :get-random-integer/_ :get-random-integer :random-vector-full-of-stuff/rando2* :random-vector-full-of-stuff :random-vector-full-of-stuff-idx4/in :random-vector-full-of-stuff-idx4 :grab-an-item/x :grab-an-item :java-uid-test-string/x :java-uid-test-string]"
      50,
      "[:start-with-a-bang :get-random-integer/_ :get-random-integer :some-quick-maths-yo/z :some-quick-maths-yo :divisive-2/x :divisive-2 :done]"
      32,
      "[:start-with-a-bang :get-random-integer/_ :get-random-integer :divider/x :divider :divisive-2/y1 :divisive-2 :done]"
      15},
     :cardinality 7},
    :block
    {:data-type "string",
     :distinct 27,
     :group-by? true,
     :commons
     {":some-quick-maths-yo" 7,
      ":random-vector-full-of-stufftest1*" 7,
      ":static-value-1" 7},
     :cardinality 15},
    :elapsed_ms
    {:data-type "integer",
     :distinct 9,
     :group-by? true,
     :commons {0 134, 1 17, 200 7},
     :cardinality 5},
    :end_ts
    {:data-type "string",
     :distinct 13,
     :group-by? true,
     :commons
     {"2024-02-05 04:34:51" 25,
      "2024-02-05 05:34:01" 21,
      "2024-02-05 04:35:17" 21},
     :cardinality 7},
    :run_id
    {:data-type "string",
     :distinct 7,
     :group-by? true,
     :commons
     {"84d96976-f7b6-448e-a5d2-7b73252c1354" 25,
      "7b7348d6-c5fb-4c43-977c-7a16c0ec77e9" 25,
      "2f469579-6e1e-4ff3-b583-ccdb7d1f8527" 25},
     :cardinality 4},
    :value
    {:data-type "string",
     :distinct 57,
     :group-by? true,
     :commons
     {":go" 20,
      "123323" 14,
      "{:fook true, :bite 984, :goo \"bar\"}" 12},
     :cardinality 33},
    :start
    {:data-type "integer",
     :distinct 119,
     :group-by? true,
     :commons {1707111241643 4, 1707117091839 4, 1707107691147 3},
     :cardinality 69},
    :channel
    {:data-type "string",
     :distinct 27,
     :group-by? true,
     :commons
     {"[:divisive-2]" 7, "[:grab-an-item]" 7, "[:static-value-1]" 7},
     :cardinality 15},
    :type
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {":function" 172},
     :cardinality 0},
    :base_flow_id
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"quick-maths-v2" 172},
     :cardinality 0},
    :ts
    {:data-type "string",
     :distinct 8,
     :group-by? true,
     :commons
     {"2024-02-05 07:11:34" 25,
      "2024-02-05 05:34:04" 25,
      "2024-02-05 04:35:19" 25},
     :cardinality 4},
    :flow_id
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"quick-maths-v2" 172},
     :cardinality 0},
    :start_ts
    {:data-type "string",
     :distinct 13,
     :group-by? true,
     :commons
     {"2024-02-05 04:34:51" 25,
      "2024-02-05 05:34:01" 22,
      "2024-02-05 04:35:17" 22},
     :cardinality 7},
    :data_type
    {:data-type "string",
     :distinct 7,
     :group-by? true,
     :commons {"integer" 63, "map" 28, "unknown" 26},
     :cardinality 4},
    :end
    {:data-type "integer",
     :distinct 133,
     :group-by? true,
     :commons {1707116138601 3, 1707116129304 3, 1707117091839 3},
     :cardinality 77},
    :dest
    {:data-type "string",
     :distinct 27,
     :group-by? true,
     :commons
     {":some-quick-maths-yo" 7,
      ":random-vector-full-of-stufftest1*" 7,
      ":static-value-1" 7},
     :cardinality 15},
    :dbgn
    {:data-type "string",
     :distinct 2,
     :group-by? true,
     :commons {"" 144, nil 28},
     :cardinality 1}},
   :rowcount 172},
  :rowcnt-drag-33
  {:fields
   {:rowcnt_sum
    {:data-type "integer",
     :distinct 1,
     :group-by? false,
     :commons {9523 1},
     :cardinality 100}},
   :rowcount 1},
  :flows-sys
  {:fields
   {:flow_id
    {:data-type "string",
     :distinct 56,
     :group-by? true,
     :commons {"clam-flow-851" 3, "map-pull-test2" 1, "callie-3" 1},
     :cardinality 96},
    :file_path
    {:data-type "string",
     :distinct 58,
     :group-by? true,
     :commons
     {"./flows/hey-rabbit-pathfinder.edn" 1,
      "./flows/dalle3-create-image-newengland-old.edn" 1,
      "./flows/hue-change-group-color.edn" 1},
     :cardinality 100},
    :last_modified
    {:data-type "string",
     :distinct 58,
     :group-by? true,
     :commons
     {"2023-12-31 20:10:21" 1,
      "2024-01-24 13:20:30" 1,
      "2024-01-06 18:53:33" 1},
     :cardinality 100}},
   :rowcount 58},
  :base-flow-id-drag-26
  {:fields
   {:base_flow_id
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons
     {"quick-maths-v2" 1,
      "dalle3-create-image/node-color-thief-js" 1,
      "dalle3-create-image" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 3,
     :group-by? false,
     :commons {172 1, 1319 1, 8032 1},
     :cardinality 100}},
   :rowcount 3},
  :gen-viz-715 {:fields {}, :rowcount 0},
  :flow-fn-categories-sys
  {:fields
   {:category
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {":rabbit-base" 1, ":owen-wilson" 1, ":clojure-base" 1},
     :cardinality 100}},
   :rowcount 3},
  :connections-sys
  {:fields
   {:database_name
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {"*cache-db*" 5, "SQLite" 4, "*csv-import-db*" 1},
     :cardinality 30},
    :connection_id
    {:data-type "string",
     :distinct 10,
     :group-by? true,
     :commons {"imported" 1, "bigfoot-ufos" 1, "snifftmp1" 1},
     :cardinality 100}},
   :rowcount 10},
  :start-drag-26
  {:fields
   {:start_min
    {:data-type "unknown",
     :distinct 1,
     :group-by? false,
     :commons {nil 1},
     :cardinality 100}},
   :rowcount 1},
  :reco-counts {:fields {}, :rowcount 0},
  :block-drag-34 {:fields {}, :rowcount 0},
  :flow-fn-all-sys
  {:fields
   {:name
    {:data-type "string",
     :distinct 29,
     :group-by? true,
     :commons {":=" 1, ":>=" 1, ":write-file" 1},
     :cardinality 100}},
   :rowcount 29}},
 :default-col-widths
 {:block-4550 {:start-drag-26 161},
  :block-6104 {:block-drag-34 ##Inf},
  :block-5296 {:fn-history-drag-20 100},
  :block-3365 {:run-id-drag-36 120},
  :block-6931 {:rowcnt-drag-33 161},
  :block-2817 {:new-query 561},
  :block-405 {:base-flow-id-drag-26 180},
  :block-5649 {:end-drag-43 161}},
 :data-hash 1050857029,
 :tabs ["cape-cod-vikings" "spherical dog"],
 :selected-cols {},
 :server
 {:settings
  {:harvest-on-boot? true,
   :default "./screens/winter-theme.edn",
   :eleven-labs-api-key nil,
   :kits
   {:buffy
    {:author
     {:name "Ryan Robitaille",
      :email "ryan.robitaille@gmail.com",
      :x "@ryrobes",
      :site "https://ryrob.es/"},
     :kit-name :buffy,
     :package-name :grab-bag,
     :fn (rvbbit-backend.assistants/buffy :query-name),
     :name "Ask Buffy!",
     :icon "zmdi-cocktail",
     :run-on :queries,
     :description "What does Buffy think about this data? Who knows!"},
    :outliers
    {:description
     "A basic multivariate outlier detection runstream. Highlight outliers in various dimensional groupings as a launch pad for further exploration.",
     :image-url "images/outliers-image.png",
     :fn
     (rabbit-kit-outliers.core/get-outliers
       :query-name
       :panel-name
       :query),
     :name "Outliers",
     :icon "zmdi-functions",
     :author
     {:name "Ryan Robitaille",
      :email "ryan.robitaille@gmail.com",
      :x "@ryrobes",
      :site "https://ryrob.es/"},
     :run-on :queries,
     :repl {:host "127.0.0.1", :port 42999},
     :kit-name :outliers,
     :package-name :query-basics-1},
    :forecast
    {:description
     "WIP: basic timeseries forecasting based on previous values",
     :fn
     (rabbit-kit-outliers.core/get-forecast
       :query-name
       :panel-name
       :query),
     :name "Forecasting",
     :icon "zmdi-brightness-7",
     :author
     {:name "Ryan Robitaille",
      :email "ryan.robitaille@gmail.com",
      :x "@ryrobes",
      :site "https://ryrob.es/"},
     :run-on :queries,
     :repl {:host "127.0.0.1", :port 42999},
     :kit-name :forecast,
     :package-name :query-basics-1}},
   :graphite-host "127.0.0.1",
   :openapi-org-id nil,
   :debug-level 1,
   :screens
   ["GGGeat-ochre-mole-exiled-from-abyssal-plain"
    "SSSSSSuccessful-oval-sea-urchin-of-mountain-range"
    "SSuccessful-oval-sea-urchin-of-mountain-range"
    "aaa-run-amok"
    "aaaaah-esday-the-day"
    "aaaaah-wednesday-the-day"
    "aaaah-wednesday-the-day"
    "asdasdasdasd"
    "autumn-theme"
    "battle-mage"
    "bigfoot-snapshots"
    "bigfoot-snapshots2"
    "bigfoot-snapshots3"
    "blank-sizzle"
    "blank-sizzle2"
    "boston-test-10-3-23"
    "broken-jacket"
    "bunch of bullshit"
    "bunch of bullshit2"
    "bunch of bullshit4"
    "caliope"
    "calliope"
    "canvas-scrubber-test1"
    "capecod-viking"
    "chaos simple"
    "chaos-views"
    "clean-grey-defaults"
    "code-data-literal-stonks-test"
    "conifer-boughs"
    "crazy-alice"
    "dark-crested-jackelope"
    "data-literals-test-sunday"
    "data-literals-test-sundaydd"
    "demo-dark-pumpkin-bkgrd-sept23"
    "demo-light-bkgrd-sept23"
    "demo-lime-green-slime"
    "desktops-and-broomsticks"
    "error-monitor"
    "error-monitor-vanessa"
    "error-monitor-vanessa2"
    "evil-main-street"
    "fake-books-1"
    "fetching-pentagonal-termite-of-tghe-submarine-canyon"
    "final-fantasy-dorchester"
    "fox-hills"
    "glass-fish-board-test"
    "green-storm-city"
    "hue-board-1"
    "late-winter-theme"
    "layout-test-1"
    "layout-test-12"
    "light-theme"
    "literal-data-test"
    "luck-of-the-irish"
    "mapbox-test"
    "neverwinter-amy"
    "night-city-never-sleeps"
    "nightcity-cape-cod"
    "nivo-getting-better!"
    "nivo-hacking-2023"
    "nivo-hacking-2023333"
    "nivo-hacking-october-2nd"
    "old-defaults"
    "old-fashioned-christmas"
    "old-town-snow-stars"
    "pine-wood-dawn"
    "pink-dusk-falls"
    "pinup-rabbit-fields"
    "poor-touring-me"
    "pres-sql-test-1"
    "purple-dusk-old-town"
    "purple-techno-sunset"
    "recharts-test-blocks"
    "refresh-test"
    "riffle-test"
    "sick-of-your-shit"
    "sizzle-board-1"
    "sneaky-swamp-creatures1"
    "swamp-nightgown"
    "swamp-reacher"
    "tallica-param-test2"
    "the-future-soon"
    "the-generated-lass"
    "the-generated-lass-glow"
    "the-generated-lass-ne"
    "the-generated-lass-sgt"
    "the-outer-blues"
    "trad-hybrid"
    "tweet-bigfoot-is-blurry"
    "tweet-demo-thing-bigfoot-is-blurry"
    "unnamed-screen!"
    "weave-test"
    "weave-test1"
    "weave-test122"
    "who ya gonna call?"
    "who ya gonna call? again"
    "winter-theme"
    "winter-theme-choom"
    "winter-theme2"
    "winter-theme33"
    "winter-theme45"
    "winter-theme47"
    "winter-twin-peaks"
    "wow-board"],
   :openapi-key
   "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"}},
 :runstreams
 {"quick-maths-v2" {:open? true, :open-outputs? true},
  "simple-python-exec" {:open? true, :open-outputs? true}},
 :editor? false,
 :buffy? false,
 :status-data
 {"kick-test!"
  {:kick
   {:data
    [{:sent! "kick-test!",
      :to :successful-bulbous-bird-exiled-from-karst,
      :at "2024-02-06 01:30:28",
      :payload
      {:query-log
       {:data
        [{:content ["2024-02-06 01:30:28 - query ran in 5 ms."],
          :name "query-log-:fn-history-drag-20",
          :order 1707201028,
          :parameters {},
          :forced-mutates {},
          :step-mutates {}}],
        :description "query-log-:fn-history-drag-20",
        :mutates {},
        :options {:actions? false, :pages? false, :search? false},
        :parameters {}}},
      :payload-kp [:fn-history-drag-20 "kick-test!"]}
     nil],
    :elapsed-ms nil,
    :reco-count nil}},
  :heartbeat
  {:kick
   {:data
    [{:sent! :heartbeat,
      :to :all,
      :at "2024-02-06 01:30:17",
      :payload nil,
      :payload-kp [:heartbeat :heartbeat]}
     nil],
    :elapsed-ms nil,
    :reco-count nil}}},
 :re-pressed.core/keydown
 {:keys nil,
  :event-keys
  [[[:viz-yard.bricks/esc-unselect-current] [{:keyCode 27}]]
   [[:viz-yard.bricks/redo-one]
    [{:keyCode 90, :ctrlKey true, :shiftKey true}]]
   [[:viz-yard.bricks/undo-one]
    [{:keyCode 90, :ctrlKey true, :shiftKey false}]]
   [[:viz-yard.bricks/toggle-buffy]
    [{:keyCode 32, :shiftKey true, :ctrlKey false}]]
   [[:viz-yard.bricks/toggle-editor]
    [{:keyCode 32, :shiftKey false, :ctrlKey false}]]
   [[:viz-yard.bricks/toggle-flow]
    [{:keyCode 32, :shiftKey false, :ctrlKey true}]]
   [[:viz-yard.bricks/next-panel] [{:keyCode 9}]]
   [[:viz-yard.bricks/toggle-kick-alert] [{:keyCode 75}]]
   [[:viz-yard.bricks/toggle-peek] [{:keyCode 80}]]
   [[:viz-yard.bricks/toggle-lines] [{:keyCode 76}]]
   [[:viz-yard.bricks/toggle-auto-run] [{:keyCode 79}]]
   [[:viz-yard.bricks/delete-selected-panel]
    [{:keyCode 46, :shiftKey true}]]
   [[:viz-yard.bricks/cycle-column-select false] [{:keyCode 81}]]
   [[:viz-yard.bricks/cycle-column-select true] [{:keyCode 69}]]
   [[:viz-yard.audio/start-recording] [{:keyCode 84}]]
   [[:viz-yard.audio/stop-recording] [{:keyCode 89}]]
   [[:viz-yard.bricks/stretch-panel :wider]
    [{:keyCode 68, :shiftKey true}]]
   [[:viz-yard.bricks/stretch-panel :longer]
    [{:keyCode 83, :shiftKey true}]]
   [[:viz-yard.bricks/stretch-panel :narrower]
    [{:keyCode 65, :shiftKey true}]]
   [[:viz-yard.bricks/stretch-panel :shorter]
    [{:keyCode 87, :shiftKey true}]]
   [[:viz-yard.bricks/panel-depth-up] [{:keyCode 82, :shiftKey true}]]
   [[:viz-yard.bricks/panel-depth-down]
    [{:keyCode 70, :shiftKey true}]]
   [[:viz-yard.bricks/save]
    [{:keyCode 83, :shiftKey false, :ctrlKey true}]]
   [[:viz-yard.bricks/nudge-panel :up] [{:keyCode 87}]]
   [[:viz-yard.bricks/nudge-panel :down] [{:keyCode 83}]]
   [[:viz-yard.bricks/nudge-panel :left] [{:keyCode 65}]]
   [[:viz-yard.bricks/nudge-panel :right] [{:keyCode 68}]]
   [[:viz-yard.core/alt-key-toggle] [{:keyCode 86}]]
   [[:viz-yard.core/alt-key-down] [{:keyCode 67}]]],
  :clear-keys nil,
  :always-listen-keys nil,
  :prevent-default-keys
  [{:keyCode 32}
   {:keyCode 86}
   {:keyCode 46, :shiftKey true}
   {:keyCode 83, :ctrlKey true}
   {:keyCode 83, :shiftKey false, :ctrlKey true}
   {:keyCode 9}
   {:keyCode 70, :ctrlKey true}]},
 :flow-subs
 [:flow/quick-maths-v2>*running? :flow/simple-python-exec>*running?],
 :client-name :successful-bulbous-bird-exiled-from-karst,
 :openai-api-key "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",
 :window {:w 2076, :h 1192},
 :post-meta
 {:end-drag-43 {:* {:rowcount 1}},
  :run-id-drag-36 {:* {:rowcount 96}},
  :new-query
  {:*
   {:rowcount
    "[SQLITE_ERROR] SQL error or missing database (no such table: new_query___rowcount)"}},
  :fn-history-drag-20 {:* {:rowcount 172}},
  :rowcnt-drag-33 {:* {:rowcount 1}},
  :base-flow-id-drag-26 {:* {:rowcount 3}},
  :gen-viz-715 {:* {:rowcount 0}},
  :start-drag-26 {:* {:rowcount 1}},
  :block-drag-34 {:* {:rowcount 0}}},
 :status
 {"kick-test!" {:kick :fn-history-drag-20},
  :heartbeat
  {:kick
   [:flow/quick-maths-v2>*running?
    :flow/simple-python-exec>*running?]}},
 :screen-name "capecod-viking",
 :recos-page2 0,
 :selected-tab "cape-cod-vikings",
 :snapshots nil,
 :openai-org-id "org-YLngjih2M4oju0tnnZtKCAYg",
 :alerts [],
 :recos-page 0,
 :re-pollsive.core/polling
 {:rules
  [{:interval 10,
    :event [:viz-yard.bricks/dispatch-auto-queries],
    :poll-when [:viz-yard.bricks/auto-run-and-connected?],
    :dispatch-event-on-start? false}
   {:interval 5,
    :event [:viz-yard.bricks/update-metadata],
    :dispatch-event-on-start? false,
    :started-at 0,
    :stopped-time-since-last-poll nil,
    :started-before? true}
   {:interval 120,
    :event [:viz-yard.bricks/clean-up-reco-previews],
    :dispatch-event-on-start? false,
    :started-at 0,
    :stopped-time-since-last-poll nil,
    :started-before? true}
   {:interval 2,
    :event [:viz-yard.bricks/prune-alerts],
    :dispatch-event-on-start? false,
    :started-at 0,
    :stopped-time-since-last-poll nil,
    :started-before? true}
   {:interval 1,
    :event [:viz-yard.bricks/refresh-runstreams],
    :poll-when [:viz-yard.bricks/runstream-running?],
    :dispatch-event-on-start? false}
   {:interval 1,
    :event [:viz-yard.bricks/sub-to-flows],
    :poll-when [:viz-yard.bricks/new-flow-subs?],
    :dispatch-event-on-start? false,
    :started-at nil,
    :stopped-time-since-last-poll -1,
    :started-before? true}
   {:interval 1000,
    :event [:viz-yard.bricks/update-metadata-tabs],
    :dispatch-event-on-start? false,
    :started-at 0,
    :stopped-time-since-last-poll nil,
    :started-before? true}
   {:interval 1,
    :event [:viz-yard.bricks/update-conditionals],
    :dispatch-event-on-start? false,
    :started-at 0,
    :stopped-time-since-last-poll nil,
    :started-before? true}
   {:interval 4,
    :event [:viz-yard.bricks/refresh-status],
    :poll-when [:viz-yard.bricks/bg-status?],
    :dispatch-event-on-start? false}],
  :counter 21},
 :repl-output
 {:new-query
  {:ns "rabbit-board.user",
   :value [[]],
   :status #{"done"},
   :meta {:nrepl-conn {:host "127.0.0.1", :port 8181}},
   :out [""],
   :output-lines 0,
   :values 0}},
 :base-sniff-queries {:fn_history -521895456},
 :re-pressed.core/keyup
 {:keys nil,
  :event-keys [[[:viz-yard.core/alt-key-up] [{:keyCode 67}]]],
  :clear-keys nil,
  :always-listen-keys nil},
 :panels-hash 847734073,
 :elevenlabs-api-key "f74e20dec69741c2d51663cbd8cd4cf6",
 :websocket-fx.core/sockets
 {:default
  {:status :connected,
   :options
   {:url "ws://localhost:3030/ws",
    :format :edn,
    :on-disconnect
    [:websocket-fx.core/unsubscribe :default :server-push2],
    :on-connect
    [:websocket-fx.core/subscribe
     :default
     :server-push2
     {:message
      {:kind :server-push2,
       :client-name :successful-bulbous-bird-exiled-from-karst,
       :ui-keypath [:server],
       :extras {:hello? true}},
      :on-message [:viz-yard.http/simple-response]}]},
   :requests
   {#uuid "4553ec56-ce34-44cc-bb7b-ebba4440cbb9"
    {:message
     {:kind :honey-xcall,
      :ui-keypath [:start-drag-26 :* :rowcount],
      :honey-sql
      {:select [[[:count 1] :rowcnt]],
       :from
       [[{:select [[[:min :start] :start_min]],
          :from
          [[{:select
             [:block
              [[:count 1] :rowcnt]
              [[:sum :elapsed_ms] :elapsed_ms_sum_205]
              :start
              :end
              [[:+ :end 1] :end_plus]
              :run_id],
             :from
             [[{:select
                [:base_flow_id
                 :block
                 :channel
                 :data_type
                 :dbgn
                 :dest
                 :elapsed_ms
                 :end
                 :end_ts
                 :flow_id
                 :from_block
                 :path
                 :run_id
                 :start
                 :start_ts
                 :ts
                 :type
                 :value],
                :from [[:fn_history :qq205]],
                :where
                [:*when
                 "quick-maths-v2"
                 [:= :base_flow_id "quick-maths-v2"]]}
               :xx662]],
             :group-by [:block :start :end :run_id],
             :order-by [[:rowcnt :desc]],
             :where
             [:and
              [:not [:like :block "%/%"]]
              [:*when
               "ef82fc87-9495-415c-aafc-1cfa84b83501"
               [:= :run_id "ef82fc87-9495-415c-aafc-1cfa84b83501"]]]}
            :yy750]]}
         :subq]]},
      :connection-id "flows-db",
      :client-name :successful-bulbous-bird-exiled-from-karst},
     :on-response [:viz-yard.http/socket-response-post-meta],
     :on-timeout
     [:viz-yard.http/timeout-response [:start-drag-26 :* :rowcount]],
     :timeout 15000000},
    #uuid "9ddc46f6-0929-468d-814f-bdde65c01923"
    {:message
     {:kind :honey-xcall,
      :ui-keypath [:block-drag-34 :* :rowcount],
      :honey-sql
      {:select [[[:count 1] :rowcnt]],
       :from
       [[{:select
          [:block
           [[:count 1] :rowcnt]
           [[:sum :elapsed_ms] :elapsed_ms_sum_205]
           :start
           :end
           [[:+ :end 1] :end_plus]
           :run_id],
          :from
          [[{:select
             [:base_flow_id
              :block
              :channel
              :data_type
              :dbgn
              :dest
              :elapsed_ms
              :end
              :end_ts
              :flow_id
              :from_block
              :path
              :run_id
              :start
              :start_ts
              :ts
              :type
              :value],
             :from [[:fn_history :qq205]],
             :where
             [:*when
              "quick-maths-v2"
              [:= :base_flow_id "quick-maths-v2"]]}
            :xx662]],
          :group-by [:block :start :end :run_id],
          :order-by [[:rowcnt :desc]],
          :where
          [:and
           [:not [:like :block "%/%"]]
           [:*when
            "ef82fc87-9495-415c-aafc-1cfa84b83501"
            [:= :run_id "ef82fc87-9495-415c-aafc-1cfa84b83501"]]]}
         :subq]]},
      :connection-id "flows-db",
      :client-name :successful-bulbous-bird-exiled-from-karst},
     :on-response [:viz-yard.http/socket-response-post-meta],
     :on-timeout
     [:viz-yard.http/timeout-response [:block-drag-34 :* :rowcount]],
     :timeout 15000000},
    #uuid "72db19db-adae-4951-9f1f-e0e6c0c3bf28"
    {:message
     {:kind :honey-xcall,
      :ui-keypath [:run-id-drag-36 :* :rowcount],
      :honey-sql
      {:select [[[:count 1] :rowcnt]],
       :from
       [[{:select [:run_id [[:count 1] :rowcnt] [[:max :end] :mend]],
          :from
          [[{:select
             [:base_flow_id
              :block
              :channel
              :data_type
              :dbgn
              :dest
              :elapsed_ms
              :end
              :end_ts
              :flow_id
              :from_block
              :path
              :run_id
              :start
              :start_ts
              :ts
              :type
              :value],
             :from [[:fn_history :qq205]],
             :where
             [:*when
              "quick-maths-v2"
              [:= :base_flow_id "quick-maths-v2"]]}
            :ee568]],
          :group-by [:run_id],
          :order-by [[3 :desc]]}
         :subq]]},
      :connection-id "flows-db",
      :client-name :successful-bulbous-bird-exiled-from-karst},
     :on-response [:viz-yard.http/socket-response-post-meta],
     :on-timeout
     [:viz-yard.http/timeout-response [:run-id-drag-36 :* :rowcount]],
     :timeout 15000000},
    #uuid "37de49cc-7731-465a-9526-d26f1a6780a9"
    {:message
     {:kind :honey-xcall,
      :ui-keypath [:gen-viz-715 :* :rowcount],
      :honey-sql
      {:select [[[:count 1] :rowcnt]],
       :from
       [[{:select
          [[[[:sum :elapsed_ms_sum_205]] :elapsed_ms_sum_205] :block],
          :from
          [{:select
            [:block
             [[:count 1] :rowcnt]
             [[:sum :elapsed_ms] :elapsed_ms_sum_205]
             :start
             :end
             [[:+ :end 1] :end_plus]
             :run_id],
            :from
            [[{:select
               [:base_flow_id
                :block
                :channel
                :data_type
                :dbgn
                :dest
                :elapsed_ms
                :end
                :end_ts
                :flow_id
                :from_block
                :path
                :run_id
                :start
                :start_ts
                :ts
                :type
                :value],
               :from [[:fn_history :qq205]],
               :where
               [:*when
                "quick-maths-v2"
                [:= :base_flow_id "quick-maths-v2"]]}
              :xx662]],
            :group-by [:block :start :end :run_id],
            :order-by [[:rowcnt :desc]],
            :where
            [:and
             [:not [:like :block "%/%"]]
             [:*when
              "ef82fc87-9495-415c-aafc-1cfa84b83501"
              [:= :run_id "ef82fc87-9495-415c-aafc-1cfa84b83501"]]]}],
          :group-by [:block],
          :where
          [:*when
           "ef82fc87-9495-415c-aafc-1cfa84b83501"
           [:= :run_id "ef82fc87-9495-415c-aafc-1cfa84b83501"]]}
         :subq]]},
      :connection-id "flows-db",
      :client-name :successful-bulbous-bird-exiled-from-karst},
     :on-response [:viz-yard.http/socket-response-post-meta],
     :on-timeout
     [:viz-yard.http/timeout-response [:gen-viz-715 :* :rowcount]],
     :timeout 15000000},
    #uuid "dc55852a-2052-44ff-b598-7b16330ebd7b"
    {:message
     {:kind :ack,
      :client-name :successful-bulbous-bird-exiled-from-karst},
     :timeout 500000}},
   :subscriptions
   {:server-push2
    {:message
     {:kind :server-push2,
      :client-name :successful-bulbous-bird-exiled-from-karst,
      :ui-keypath [:server],
      :extras {:hello? true}},
     :on-message [:viz-yard.http/simple-response]}}}},
 :user-params-hash -1403323326,
 :grid-recos? true,
 :panels
 {:block-4550
  {:h 4,
   :w 4,
   :connection-id "flows-db",
   :name "drag-from-drag-from-select-all-fn_history",
   :queries
   {:start-drag-26
    {:select [[[:min :start] :start_min]],
     :from [[:query/block-drag-34 :yy750]]}},
   :root [35 8],
   :tab "cape-cod-vikings"},
  :block-6104
  {:h 5,
   :w 16,
   :connection-id "flows-db",
   :name "drag-from-select-all-fn_history",
   :queries
   {:block-drag-34
    {:select
     [:block
      [[:count 1] :rowcnt]
      [[:sum :elapsed_ms] :elapsed_ms_sum_205]
      :start
      :end
      [[:+ :end 1] :end_plus]
      :run_id],
     :from [[:query/fn-history-drag-20 :xx662]],
     :group-by [:block :start :end :run_id],
     :order-by [[:rowcnt :desc]],
     :where
     [:and
      [:not [:like :block "%/%"]]
      [:*when
       :run-id-drag-36/run_id
       [:= :run_id :run-id-drag-36/run_id]]],
     :_last-run "02:25:31"}},
   :root [19 8],
   :tab "cape-cod-vikings",
   :selected-view :block-drag-34},
  :block-5296
  {:h 7,
   :w 30,
   :connection-id "flows-db",
   :name "select-all-fn_history",
   :queries
   {:fn-history-drag-20
    {:select
     [:base_flow_id
      :block
      :channel
      :data_type
      :dbgn
      :dest
      :elapsed_ms
      :end
      :end_ts
      :flow_id
      :from_block
      :path
      :run_id
      :start
      :start_ts
      :ts
      :type
      :value],
     :from [[:fn_history :qq205]],
     :where
     [:*when
      :base-flow-id-drag-26/base_flow_id
      [:= :base_flow_id :base-flow-id-drag-26/base_flow_id]],
     :_last-run "03:51:14"}},
   :root [5 1],
   :tab "cape-cod-vikings",
   :selected-view :fn-history-drag-20},
  :block-2068
  {:name "block-2068",
   :w 5,
   :selected-view :hi,
   :root [10 10],
   :h 4,
   :queries {},
   :tab "cape-cod-vikings",
   :minimized? true,
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-2068.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"],
    :stack
    [:layout
     {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}},
  :block-3365
  {:h 6,
   :w 8,
   :connection-id "flows-db",
   :name "drag-from-select-all-fn_history",
   :queries
   {:run-id-drag-36
    {:select [:run_id [[:count 1] :rowcnt] [[:max :end] :mend]],
     :from [[:query/fn-history-drag-20 :ee568]],
     :group-by [:run_id],
     :order-by [[3 :desc]],
     :_last-run "02:25:05"}},
   :root [9 13],
   :tab "cape-cod-vikings"},
  :block-6931
  {:h 6,
   :w 4,
   :connection-id "flows-db",
   :name "drag-from-drag-from-select-all-fn_history",
   :queries
   {:rowcnt-drag-33
    {:select [[[:sum :rowcnt] :rowcnt_sum]],
     :from [[:query/base-flow-id-drag-26 :gg590]]}},
   :root [5 13],
   :tab "cape-cod-vikings"},
  :block-2817
  {:h 4,
   :w 12,
   :root [5 19],
   :tab "cape-cod-vikings",
   :selected-view :new-query,
   :name "block-2817",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-2817.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"],
    :stack
    [:layout
     {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries
   {:new-query
    {:select [:*],
     :from
     [{:data
       (vec
         (filter
           (fn [x] (not (clojure.string/includes? (get x :block) "/")))
           (for
             [row
              (get
                (deref flowmaps.db/fn-history)
                "butterfly-flow-638")]
             {:start (get row :start),
              :end (get row :end),
              :block (str (get row :block))})))}],
     :_last-run "02:25:27"}}},
  :block-405
  {:h 5,
   :w 8,
   :connection-id "flows-db",
   :name "drag-from-select-all-fn_history",
   :queries
   {:base-flow-id-drag-26
    {:select [:base_flow_id [[:count 1] :rowcnt]],
     :from
     [[{:select
        [:base_flow_id
         :block
         :channel
         :data_type
         :dbgn
         :dest
         :elapsed_ms
         :end
         :end_ts
         :flow_id
         :from_block
         :path
         :run_id
         :start
         :start_ts
         :ts
         :type
         :value],
        :from [[:fn_history :qq205]],
        :where [:*when nil [:= :base_flow_id nil]]}
       :pp244]],
     :group-by [:base_flow_id],
     :order-by [[:rowcnt :desc]],
     :_last-run "02:25:38"}},
   :root [5 8],
   :tab "cape-cod-vikings"},
  :block-647
  {:mad-libs-combo-hash ["-236156710" "block_drag_34"],
   :name " - block, elapsed_ms_sum_205 - 391",
   :w 18,
   :selected-view :new-view,
   :root [17 13],
   :h 10,
   :connection-id "flows-db",
   :queries
   {:gen-viz-715
    {:select
     [[[[:sum :elapsed_ms_sum_205]] :elapsed_ms_sum_205] :block],
     :from [:query/block-drag-34],
     :group-by [:block],
     :where
     [:*when
      :run-id-drag-36/run_id
      [:= :run_id :run-id-drag-36/run_id]]}},
   :tab "cape-cod-vikings",
   :views
   {:oz
    [:vega-lite
     {:layer
      [{:encoding
        {:y {:field :block, :type "ordinal"},
         :x
         {:aggregate "sum",
          :field :elapsed_ms_sum_205,
          :type "quantitative"},
         :row {:field nil, :legend nil},
         :size {:legend nil},
         :shape {:legend nil},
         :column {:field nil, :legend nil},
         :color
         {:scale :theme/vega-default-color-scheme,
          :legend nil,
          :field :block,
          :type "ordinal"}},
        :mark {:type "bar", :tooltip {:content "encoding"}}}],
      :data {:values :block-drag-34},
      :config :theme/vega-defaults,
      :width "container",
      :height :panel-height,
      :padding 4,
      :background "transparent"}
     {:actions false}],
    :new-view
    [:vega-lite
     {:data {:values :block-drag-34},
      :mark "bar",
      :encoding
      {:x
       {:field :start,
        :type "quantitative",
        :scale
        {:domain [:start-drag-26/start_min.0 :end-drag-43/end_max.0]},
        :axis {:title "Start Time"}},
       :x2
       {:field :end_plus,
        :scale
        {:domain [:start-drag-26/start_min.0 :end-drag-43/end_max.0]}},
       :y {:field :block, :type "ordinal", :axis {:title "Task"}},
       :tooltip
       [{:field "start",
         :type "temporal",
         :timeUnit "utcyearmonthdatehoursminutessecondsmilliseconds"}
        {:field "value"}
        {:field "ms",
         :type "temporal",
         :timeUnit "minutessecondsmilliseconds"}
        {:field "type"}
        {:field "path"}
        {:field "dest"}
        {:field "end",
         :type "temporal",
         :timeUnit "utcyearmonthdatehoursminutessecondsmilliseconds"}],
       :color
       {:scale :theme/vega-default-color-scheme,
        :legend nil,
        :field :block,
        :type "ordinal"}},
      :config :theme/vega-defaults,
      :width "container",
      :height :panel-height,
      :padding 4,
      :background "transparent"}
     {:actions false}]}},
  :block-5649
  {:h 4,
   :w 4,
   :connection-id "flows-db",
   :name "drag-from-drag-from-select-all-fn_history",
   :queries
   {:end-drag-43
    {:select [[[:max :end] :end_max]],
     :from [[:query/block-drag-34 :nn569]]}},
   :root [35 12],
   :tab "cape-cod-vikings"}},
 :selected-block "none!",
 :click-param
 {nil {nil nil},
  :recos-sys
  {:query_map
   "[{:select [[[[:sum :elapsed_ms_sum_205]] :elapsed_ms_sum_205] :block], :from [\"query/block_drag_34\"], :group-by [:block]}]",
   :shape_name nil,
   :w nil,
   :combo_edn "block, elapsed_ms_sum_205",
   :selected_view nil,
   :combo_hash "-236156710",
   :h nil,
   :condis nil,
   :viz_map
   "[:vega-lite {:layer [{:encoding {:y {:field :block, :type \"ordinal\"}, :x {:aggregate \"sum\", :field :elapsed_ms_sum_205, :type \"quantitative\"}, :row {:field nil, :legend nil}, :size {:legend nil}, :shape {:legend nil}, :column {:field nil, :legend nil}, :color {:scale :theme/vega-default-color-scheme, :legend nil, :field 1, :type \"ordinal\"}}, :mark {:type \"bar\", :tooltip {:content \"encoding\"}}}], :data {:values \"query/block_drag_34\"}} {:actions false}]"},
  :fields-sys
  {:field_name "country_abbrev",
   :field_type "TEXT",
   :data_type "string"},
  :run-id-drag-36
  {:run_id "ef82fc87-9495-415c-aafc-1cfa84b83501",
   :rowcnt 174,
   :mend 1707085750801},
  :viz-shapes-sys {:combo_edn nil},
  :tables-sys
  {:db_schema "none",
   :db_catalog nil,
   :connection_id "flows-db",
   :schema_cat nil,
   :table_name "fn_history",
   :fields 19},
  :flow
  {:quick-maths-v2>*running? nil,
   :simple-python-exec>write-file-1
   {:status :ok, :file-path "/tmp/scratch.py"},
   :simple-python-exec>*running? nil},
  :flows-sys
  {:flow_id "quick-maths-v2",
   :file_path "./flows/quick-maths-v2.edn",
   :last_modified "2024-02-03 22:54:07"},
  :viz-tables-sys2 {:table_name :block-drag-34},
  :user-dropdown-sys {:req-field nil},
  :base-flow-id-drag-26 {:base_flow_id "quick-maths-v2", :rowcnt 172},
  :viz-tables-sys {:table_name "block_drag_34"},
  :param
  {:selected-view [nil nil],
   :selected-view-data nil,
   :selected-block :block-3366},
  :viz-shapes0-sys {:shape "basic_v_bar", :recos 5},
  :theme
  {:codemirror-theme "ayu-dark",
   :editor-param-background-color "#000000",
   :base-block-style {:backdrop-filter "blur(2px) brightness(70%) "},
   :vega-defaults
   {:view {:stroke "transparent"},
    :axis
    {:domainColor "#ffffff22",
     :grid true,
     :font "Lato",
     :labelColor "#ffffff88",
     :titleFont "Lato",
     :titleColor "#ffffff99",
     :labelFont "Lato",
     :domain false,
     :gridColor "#ffffff22",
     :tickColor "#ffffff22",
     :axisFont "Lato"},
    :legend
    {:labelFont "Lato",
     :legendFont "Lato",
     :labelColor "#ffffff99",
     :titleColor "#ffffff99",
     :stroke "#ffffff99",
     :titleFont "Lato"},
    :header
    {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"},
    :mark {:font "Lato"},
    :title
    {:font "Lato",
     :subtitleFont "Lato",
     :labelFont "Lato",
     :titleFont "Lato",
     :titleColor "#ffffff99"}},
   :grid-selected-column-css
   {:background-color "#00000088", :filter "brightness(200%)"},
   :base-block-color-selected "#00030a",
   :block-title-font-color "#ffffff",
   :base-block-color "#04041e82",
   :editor-rim-color "#379fb5",
   :base-block-filter-selected
   "drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)",
   :vega-default-color-scheme {:scheme "pastel2"},
   :data-colors
   {"float" "#ff2050",
    "boolean" "#8EA2A8",
    "map" "#379fb5",
    "list" "#D4118EE",
    "string" "#CEEFD1",
    "any" "#eeeeee",
    "vector" "#2C4761",
    "keyword" "#006666",
    "rabbit-code" "#9F93AE",
    "datetime" "#A7B2B4",
    "integer" "#723c5f",
    "unknown" "#77919B",
    "date" "#6A6391",
    "nil" "#3B5A71"},
   :editor-grid-selected-font-color "#000000",
   :monospaced-font "Nova Mono",
   :editor-grid-selected-background-color "#dc9cb0",
   :nivo-defaults
   {:font-family "Instagram Sans",
    :labels
    {:text
     {:fill "#ffffff",
      :font-size "16px",
      :font-family "Instagram Sans",
      :font-weight 700}},
    :tooltip
    {:container
     {:background "#000",
      :color "#ffffff",
      :text {:fill "#eeeeee"},
      :fontSize "18px",
      :borderRadius "4px",
      :boxShadow "0 1px 2px rgba(0, 0, 0, 0.55)",
      :padding "5px 9px"},
     :basic {:whiteSpace "pre", :display "flex", :alignItems "center"},
     :tableCell {:padding "3px 5px"}},
    :axis
    {:legend
     {:text
      {:fill "#ffffff",
       :font-size "14px",
       :font-family "Instagram Sans",
       :font-weight 700}},
     :ticks
     {:line {:stroke "#ffffff60"},
      :text {:fill "#ffffff60", :font-weight 700}}},
    :grid
    {:line
     {:stroke "#ffffff", :strokeWidth 0, :strokeDasharray "0 0"}}},
   :editor-outer-rim-color "#379fb5",
   :grid-selected-font-color "#000000",
   :block-title-selected-font-color "#ffffff",
   :grid-selected-background-color "#a3d3ff",
   :grid-font-color "#ffffff",
   :canvas-background-css
   {:background-image "url(images/capecod-viking234-8k-4k.png)",
    :transition "all 0.8s ease-in-out",
    :background-size "cover",
    :background-color "#424f57"},
   :editor-font-color "#ffffff",
   :base-font "Nova Square",
   :block-tab-selected-font-color "#c9d1ff",
   :editor-background-color "#000006",
   :editor-grid-font-color "#ffffff"},
  :connections-sys
  {:database_name "*cache-db*", :connection_id "flows-db"},
  :sys {:selected-tab "cape-cod-vikings", :selected-tab-idx 0}},
 :selected-flow "live-scratch-flow"}