{:orders
 {:kke192 (:query_error),
  :gen-viz-553 (:thread_count :clients :ts),
  :new-query (:diff :mem_used :ts_hour),
  :cpu-query1 (:diff :used_memory_mb :cpu_usage :mps :ts1),
  :new-query-1
  [:used_memory_mb
   :thread_count
   :messages
   :batches
   :recent_batches
   :recent_batches_per_second
   :batches_per_second
   :unix_ms
   :messages_per_second
   :recent_messages
   :recent_messages_per_second
   :recent_queries_run
   :recent_queries_per_second
   :queries_per_second
   :sql_cache_size
   :ws_peers
   :subscriptions
   :open_flow_channels
   :uptime_seconds
   :seconds_since_last_update
   :queries_run
   :internal_queries_run
   :sniffs_run
   :sys_load
   :ts
   :styler_heatmap_7696
   :styler_heatmap_2888],
  :client-stats-drag-33
  [:ack
   :client_latency
   :client_name
   :client_subs
   :last_seen
   :last_seen_seconds
   :push
   :recent_messages_per_second
   :server_subs
   :memory
   :ts
   :styler_highlight_8717],
  :jvm-stats-drag-40
  [:sql_cache_size
   :thread_count
   :ts1
   :ts
   :queries_run
   :sniffs_run
   :batches
   :messages
   :recent_batches_per_second
   :recent_messages_per_second
   :recent_queries_per_second
   :internal_queries_run
   :open_flow_channels
   :sys_load
   :used_memory_mb
   :ws_peers],
  :gen-viz-1002 (:diff :used_memory_mb :cpu_usage :mps :ts1),
  :jvm_stats
  [:used_memory_mb
   :thread_count
   :messages
   :batches
   :recent_batches
   :recent_batches_per_second
   :batches_per_second
   :unix_ms
   :messages_per_second
   :recent_messages
   :recent_messages_per_second
   :recent_queries_run
   :recent_queries_per_second
   :queries_per_second
   :sql_cache_size
   :ws_peers
   :subscriptions
   :open_flow_channels
   :uptime_seconds
   :seconds_since_last_update
   :queries_run
   :internal_queries_run
   :sniffs_run
   :sys_load
   :ts],
  :client_stats
  [:client_name
   :ack
   :client_latency
   :client_subs
   :last_seen
   :memory
   :push
   :queue_size
   :server_subs
   :last_seen_seconds
   :booted_ts
   :queue_distro
   :uptime_seconds
   :uptime
   :messages_per_second
   :recent_messages_per_second
   :ts],
  :gen-viz-1002-clone-38 (:diff :used_memory_mb :ts1)},
 :reco-preview nil,
 :sql-source
 {:kke192 {:select [:*], :connection-id "system-db", :from [:kke192], :limit 111},
  :gen-viz-553
  {:cache? false,
   :limit 18,
   :group-by [3],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [{:select
     [:sql_cache_size
      :thread_count
      [:ts :ts1]
      [[:substr :ts 0 16] :ts]
      :queries_run
      :sniffs_run
      :batches
      :messages
      :recent_batches_per_second
      :recent_messages_per_second
      :recent_queries_per_second
      :internal_queries_run
      :open_flow_channels
      :sys_load
      :used_memory_mb
      :ws_peers],
     :from [[:jvm_stats :kke192]],
     :order-by [[3 :desc]],
     :where [:>= :recent_batches_per_second 0]}],
   :order-by [[:ts :desc]],
   :select
   [[[:avg :thread_count] :thread_count]
    [[:round [:avg :ws_peers] 0] :clients]
    [[:substring :ts 1 15] :ts]],
   :post-process-fn reverse},
  :new-query
  {:cache? false,
   :where [:= :client_name :*client-name-str],
   :limit 45,
   :group-by [2],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [{:select
     [:client_name
      :recent_messages_per_second
      :messages_per_second
      :mem_used
      :batches
      :packets
      :ts],
     :where [:= :client_name :*client-name-str],
     :from [[:client_memory :ee183]],
     :order-by [[:mem_time :desc]]}],
   :order-by [[:ts :desc]],
   :connection-id "system-db",
   :select [[[[:avg :mem_used]] :mem_used] [[:substring :ts 1 15] :ts_hour]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:mem_used 0})
           row
           (get rx idx {:mem_used 0})
           pre-mb
           (/ (get prev-row :mem_used) 1048576)
           mb
           (/ (get row :mem_used) 1048576)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))},
  :cpu-query1
  {:cache? false,
   :limit 180,
   :group-by [4],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [{:select
     [:sql_cache_size
      :thread_count
      [:ts :ts1]
      [[:substr :ts 0 16] :ts]
      :queries_run
      :sniffs_run
      :batches
      :messages
      :recent_batches_per_second
      :recent_messages_per_second
      :recent_queries_per_second
      :internal_queries_run
      :open_flow_channels
      :sys_load
      :used_memory_mb
      :ws_peers],
     :from [[:jvm_stats :kke192]],
     :order-by [[3 :desc]],
     :where [:>= :recent_batches_per_second 0]}],
   :order-by [[4 :desc]],
   :select
   [[[:round [:avg :used_memory_mb] 2] :used_memory_mb]
    [[:round [:avg :sys_load] 2] :cpu_usage]
    [[:round [:avg :recent_messages_per_second] 2] :mps]
    [[:substring :ts1 1 16] :ts1]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:used_memory_mb 0})
           row
           (get rx idx {:used_memory_mb 0})
           pre-mb
           (get prev-row :used_memory_mb)
           mb
           (get row :used_memory_mb)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))},
  :new-query-1
  {:cache? false,
   :limit 50,
   :style-rules
   {[:sys_load :heatmap-7696]
    {:logic true,
     :style
     {:background-color [:heatmap ["#c8ccc3" "#101421"] 20 :desc],
      :border "1px solid #00000000",
      :color "#ffffff"}},
    [:recent_messages_per_second :heatmap-2888]
    {:logic true,
     :style
     {:background-color [:heatmap ["#101421" "#bfc2be"] 20 :desc],
      :border "1px solid #00000000",
      :color "#ffffff"}}},
   :_last-run "15:27:24",
   :refresh-every 45,
   :from [[:jvm_stats :zz596]],
   :order-by [[:ts :desc]],
   :connection-id "system-db",
   :select [:*]},
  :client-stats-drag-33
  {:select
   [:ack
    :client_latency
    :client_name
    :client_subs
    :last_seen
    :last_seen_seconds
    :push
    :recent_messages_per_second
    :server_subs
    :memory
    :ts],
   :cache? false,
   :refresh-every 20,
   :order-by [[:client_name :asc]],
   :from [[:client_stats :ww254]],
   :_last-run "15:27:45",
   :style-rules
   {[:* :highlight-8717]
    {:logic [:= :client_name :*client-name-str],
     :style {:border "1px solid #cac18255"}}},
   :col-widths
   {:server_subs 111,
    :push 91,
    :client_subs 111,
    :recent_messages_per_second 251,
    :memory 111,
    :ts 151,
    :client_latency 141,
    :ack 81,
    :client_name 231}},
  :jvm-stats-drag-40
  {:select
   [:sql_cache_size
    :thread_count
    [:ts :ts1]
    [[:substr :ts 0 16] :ts]
    :queries_run
    :sniffs_run
    :batches
    :messages
    :recent_batches_per_second
    :recent_messages_per_second
    :recent_queries_per_second
    :internal_queries_run
    :open_flow_channels
    :sys_load
    :used_memory_mb
    :ws_peers],
   :refresh-every 45,
   :cache? false,
   :from [[:jvm_stats :kke192]],
   :order-by [[3 :desc]],
   :_last-run "15:27:23",
   :where [:>= :recent_batches_per_second 0]},
  :gen-viz-1002
  {:cache? false,
   :limit 18,
   :group-by [4],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [{:select
     [:sql_cache_size
      :thread_count
      [:ts :ts1]
      [[:substr :ts 0 16] :ts]
      :queries_run
      :sniffs_run
      :batches
      :messages
      :recent_batches_per_second
      :recent_messages_per_second
      :recent_queries_per_second
      :internal_queries_run
      :open_flow_channels
      :sys_load
      :used_memory_mb
      :ws_peers],
     :from [[:jvm_stats :kke192]],
     :order-by [[3 :desc]],
     :where [:>= :recent_batches_per_second 0]}],
   :order-by [[4 :desc]],
   :select
   [[[:round [:avg :used_memory_mb] 2] :used_memory_mb]
    [[:round [:avg :sys_load] 2] :cpu_usage]
    [[:round [:avg :recent_messages_per_second] 2] :mps]
    [[:substring :ts 1 15] :ts1]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:used_memory_mb 0})
           row
           (get rx idx {:used_memory_mb 0})
           pre-mb
           (get prev-row :used_memory_mb)
           mb
           (get row :used_memory_mb)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))},
  :jvm_stats
  {:select [:*], :connection-id "system-db", :from [:jvm_stats], :limit 111},
  :client_stats
  {:select [:*], :connection-id "system-db", :from [:client_stats], :limit 111},
  :gen-viz-1002-clone-38
  {:cache? false,
   :limit 24,
   :group-by [2],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [[{:group-by [:ts1],
      :from
      [{:select
        [:sql_cache_size
         :thread_count
         [:ts :ts1]
         [[:substr :ts 0 16] :ts]
         :queries_run
         :sniffs_run
         :internal_queries_run
         :used_memory_mb
         :ws_peers],
        :from [[:jvm_stats :kke192]],
        :order-by [[3 :desc]]}],
      :order-by [[:ts1 :asc]],
      :select [[[[:avg :used_memory_mb]] :used_memory_mb] :ts1]}
     :mm308]],
   :order-by [[2 :desc]],
   :select
   [[[:round [:avg :used_memory_mb]] :used_memory_mb]
    [[:raw "strftime('%d-%H', ts1)"] :ts1]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:used_memory_mb 0})
           row
           (get rx idx {:used_memory_mb 0})
           pre-mb
           (get prev-row :used_memory_mb)
           mb
           (get row :used_memory_mb)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))}},
 :alert-mute? false,
 :meta
 {:kke192
  {:fields
   {:query_error
    {:min "",
     :data-type "string",
     :commons
     {nil 1,
      "{:datasource #object[com.zaxxer.hikari.HikariDataSource 0x5701d51c \"HikariDataSource (system-db)\"]}"
      1,
      "(from database connection)" 1},
     :distinct 4,
     :group-by? true,
     :median "(from database connection)",
     :max
     "{:datasource #object[com.zaxxer.hikari.HikariDataSource 0x5701d51c \"HikariDataSource (system-db)\"]}",
     :avg
     "[SQLITE_ERROR] SQL error or missing database (no such table: kke192) (non-numeric average)",
     :cardinality 100}},
   :rowcount 4},
  :gen-viz-553
  {:fields
   {:thread_count
    {:min 213.4,
     :data-type "float",
     :commons {218.175 2, 216.76923076923077 1, 219.21428571428572 1},
     :distinct 17,
     :group-by? true,
     :median 215.125,
     :max 219.21428571428572,
     :avg 215.7218762718763,
     :cardinality 94},
    :clients
    {:min 5,
     :data-type "float",
     :commons {5 18},
     :distinct 1,
     :group-by? true,
     :median 5,
     :max 5,
     :avg 5,
     :cardinality 5},
    :ts
    {:min "2024-08-23 12:3",
     :data-type "string",
     :commons {"2024-08-23 13:3" 1, "2024-08-23 13:0" 1, "2024-08-23 15:0" 1},
     :distinct 18,
     :group-by? true,
     :median "2024-08-23 13:5",
     :max "2024-08-23 15:2",
     :avg "2024-08-23 12:3 (non-numeric average)",
     :cardinality 100}},
   :rowcount 18},
  :status-drag-0
  {:fields
   {:queries_run
    {:data-type "integer",
     :distinct 500,
     :group-by? true,
     :commons {1706 1, 1609 1, 2700 1},
     :cardinality 100},
    :recent_messages_per_second
    {:data-type "float",
     :distinct 457,
     :group-by? true,
     :commons {258.68 3, 253.33 3, 252.4 3},
     :cardinality 91},
    :uptime_seconds
    {:data-type "integer",
     :distinct 500,
     :group-by? true,
     :commons {2700 1, 390 1, 3930 1},
     :cardinality 100},
    :queries_per_second
    {:data-type "float",
     :distinct 3,
     :group-by? true,
     :commons {0 498, 1 1, -16 1},
     :cardinality 0},
    :recent_batches
    {:data-type "integer",
     :distinct 500,
     :group-by? true,
     :commons {56182 1, 166926 1, 10120 1},
     :cardinality 100},
    :sql_cache_size
    {:data-type "integer",
     :distinct 2,
     :group-by? true,
     :commons {1 458, 0 42},
     :cardinality 0},
    :ts
    {:data-type "string",
     :distinct 500,
     :group-by? true,
     :commons
     {"2024-07-03 10:56:00" 1, "2024-07-03 11:05:30" 1, "2024-07-03 10:19:45" 1},
     :cardinality 100},
    :subscriptions
    {:data-type "integer",
     :distinct 6,
     :group-by? true,
     :commons {757 491, 754 3, 741 2},
     :cardinality 1},
    :messages_per_second
    {:data-type "float",
     :distinct 162,
     :group-by? true,
     :commons {258.86 20, 258.75 17, 259.21 15},
     :cardinality 32},
    :messages
    {:data-type "integer",
     :distinct 500,
     :group-by? true,
     :commons {1258303 1, 1607076 1, 98065 1},
     :cardinality 100},
    :sniffs_run
    {:data-type "integer",
     :distinct 477,
     :group-by? true,
     :commons {161 2, 1158 2, 147 2},
     :cardinality 95},
    :sys_load
    {:data-type "float",
     :distinct 410,
     :group-by? true,
     :commons {16.48 3, 10.66 3, 11.16 3},
     :cardinality 81},
    :recent_batches_per_second
    {:data-type "float",
     :distinct 227,
     :group-by? true,
     :commons {23.04 7, 23.41 6, 23.73 6},
     :cardinality 45},
    :batches
    {:data-type "integer",
     :distinct 500,
     :group-by? true,
     :commons {56182 1, 166926 1, 10120 1},
     :cardinality 100},
    :unix_ms
    {:data-type "integer",
     :distinct 500,
     :group-by? true,
     :commons {1720017405556 1, 1720014120570 1, 1720020900660 1},
     :cardinality 100},
    :used_memory_mb
    {:data-type "integer",
     :distinct 483,
     :group-by? true,
     :commons {5664 2, 4433 2, 6611 2},
     :cardinality 96},
    :recent_queries_run
    {:data-type "integer",
     :distinct 18,
     :group-by? true,
     :commons {3 79, 4 77, 5 63},
     :cardinality 3},
    :thread_count
    {:data-type "integer",
     :distinct 82,
     :group-by? true,
     :commons {612 18, 606 18, 614 17},
     :cardinality 16},
    :internal_queries_run
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {0 500},
     :cardinality 0},
    :open_flow_channels
    {:data-type "integer",
     :distinct 8,
     :group-by? true,
     :commons {11 289, 0 130, 104 53},
     :cardinality 1},
    :ws_peers
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {35 500},
     :cardinality 0},
    :recent_messages
    {:data-type "integer",
     :distinct 500,
     :group-by? true,
     :commons {1258303 1, 98065 1, 327260 1},
     :cardinality 100},
    :recent_queries_per_second
    {:data-type "float",
     :distinct 27,
     :group-by? true,
     :commons {0.2 79, 0.27 76, 0.33 60},
     :cardinality 5},
    :batches_per_second
    {:data-type "float",
     :distinct 50,
     :group-by? true,
     :commons {23.34 62, 23.26 44, 23.27 43},
     :cardinality 10},
    :seconds_since_last_update
    {:data-type "integer",
     :distinct 3,
     :group-by? true,
     :commons {15 258, 14 241, -1 1},
     :cardinality 0}},
   :rowcount 500},
  :new-query
  {:fields
   {:diff
    {:min "+17",
     :data-type "string",
     :commons {"+62" 3, "+63" 3, "+66" 3},
     :distinct 32,
     :group-by? true,
     :median "+66",
     :max "425 MB",
     :avg "425 MB (non-numeric average)",
     :cardinality 71},
    :mem_used
    {:min 2.46195316925E8,
     :data-type "float",
     :commons {3.192143243E8 1, 3.82116949475E8 1, 3.757764376E8 1},
     :distinct 45,
     :group-by? true,
     :median 4.51217125275E8,
     :max 6.01445061925E8,
     :avg 4.514408776191189E8,
     :cardinality 100},
    :ts_hour
    {:min "2024-08-23 08:0",
     :data-type "string",
     :commons {"2024-08-23 10:3" 1, "2024-08-23 13:3" 1, "2024-08-23 13:0" 1},
     :distinct 45,
     :group-by? true,
     :median "2024-08-23 11:4",
     :max "2024-08-23 15:2",
     :avg "2024-08-23 08:0 (non-numeric average)",
     :cardinality 100}},
   :rowcount 45},
  :cpu-query1
  {:fields
   {:diff
    {:min "+1001",
     :data-type "string",
     :commons {"+989" 2, "+112" 2, "-131" 2},
     :distinct 177,
     :group-by? true,
     :median "-1028",
     :max "13381 MB",
     :avg "13381 MB (non-numeric average)",
     :cardinality 98},
    :used_memory_mb
    {:min 10434.25,
     :data-type "float",
     :commons {12199.25 2, 12243.25 2, 12799.67 1},
     :distinct 178,
     :group-by? true,
     :median 12593.25,
     :max 14882.5,
     :avg 12593.223166666667,
     :cardinality 98},
    :cpu_usage
    {:min 1.36,
     :data-type "float",
     :commons {1.73 5, 2.03 5, 2.17 4},
     :distinct 110,
     :group-by? true,
     :median 2.045,
     :max 5.38,
     :avg 2.4321666666666655,
     :cardinality 61},
    :mps
    {:min 24.59,
     :data-type "float",
     :commons {25.57 9, 25.47 9, 25.6 9},
     :distinct 86,
     :group-by? true,
     :median 25.7,
     :max 27.71,
     :avg 25.86344444444445,
     :cardinality 47},
    :ts1
    {:min "2024-08-23 12:27",
     :data-type "string",
     :commons {"2024-08-23 14:26" 1, "2024-08-23 12:28" 1, "2024-08-23 14:55" 1},
     :distinct 180,
     :group-by? true,
     :median "2024-08-23 13:56",
     :max "2024-08-23 15:26",
     :avg "2024-08-23 12:27 (non-numeric average)",
     :cardinality 100}},
   :rowcount 180},
  :new-query-1
  {:fields
   {:queries_run
    {:min 8405,
     :data-type "integer",
     :commons {8519 2, 8453 2, 8472 2},
     :distinct 42,
     :group-by? true,
     :median 8472,
     :max 8538,
     :avg 8474.4,
     :cardinality 83},
    :recent_messages_per_second
    {:min 23.6,
     :data-type "float",
     :commons {25.27 4, 25.13 4, 25.4 4},
     :distinct 33,
     :group-by? true,
     :median 25.369999999999997,
     :max 30.2,
     :avg 25.7232,
     :cardinality 66},
    :uptime_seconds
    {:min 43304,
     :data-type "integer",
     :commons {43844 1, 43964 1, 43364 1},
     :distinct 50,
     :group-by? true,
     :median 43671.5,
     :max 44039,
     :avg 43671.5,
     :cardinality 100},
    :queries_per_second
    {:min 0,
     :data-type "float",
     :commons {0 50},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 1},
    :recent_batches
    {:min 135036,
     :data-type "integer",
     :commons {136187 1, 136731 1, 136647 1},
     :distinct 50,
     :group-by? true,
     :median 136209.5,
     :max 137188,
     :avg 136168.56,
     :cardinality 100},
    :sql_cache_size
    {:min 0,
     :data-type "integer",
     :commons {0 50},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 1},
    :styler_heatmap_2888
    {:min 1,
     :data-type "integer",
     :commons {1 50},
     :distinct 1,
     :group-by? true,
     :median 1,
     :max 1,
     :avg 1,
     :cardinality 1},
    :ts
    {:min "2024-08-23 15:14:40",
     :data-type "string",
     :commons
     {"2024-08-23 15:19:40" 1, "2024-08-23 15:23:55" 1, "2024-08-23 15:17:55" 1},
     :distinct 50,
     :group-by? true,
     :median "2024-08-23 15:20:40",
     :max "2024-08-23 15:26:55",
     :avg "2024-08-23 15:26:55 (non-numeric average)",
     :cardinality 100},
    :subscriptions
    {:min 82,
     :data-type "integer",
     :commons {82 50},
     :distinct 1,
     :group-by? true,
     :median 82,
     :max 82,
     :avg 82,
     :cardinality 1},
    :messages_per_second
    {:min 26.2,
     :data-type "float",
     :commons {26.2 33, 26.21 17},
     :distinct 2,
     :group-by? true,
     :median 26.2,
     :max 26.21,
     :avg 26.20340000000002,
     :cardinality 3},
    :messages
    {:min 1134856,
     :data-type "integer",
     :commons {1138398 1, 1145751 1, 1148071 1},
     :distinct 50,
     :group-by? true,
     :median 1144393,
     :max 1153819,
     :avg 1144393.04,
     :cardinality 100},
    :sniffs_run
    {:min 125,
     :data-type "integer",
     :commons {125 50},
     :distinct 1,
     :group-by? true,
     :median 125,
     :max 125,
     :avg 125,
     :cardinality 1},
    :sys_load
    {:min 1.46,
     :data-type "float",
     :commons {1.67 4, 1.7 3, 1.78 2},
     :distinct 42,
     :group-by? true,
     :median 2.295,
     :max 8.49,
     :avg 2.8198000000000003,
     :cardinality 83},
    :recent_batches_per_second
    {:min 2.33,
     :data-type "float",
     :commons {2.67 6, 2.93 6, 3.33 5},
     :distinct 16,
     :group-by? true,
     :median 2.9000000000000004,
     :max 3.6,
     :avg 2.9174000000000007,
     :cardinality 31},
    :batches
    {:min 135086,
     :data-type "integer",
     :commons {136187 1, 136731 1, 136647 1},
     :distinct 50,
     :group-by? true,
     :median 136253,
     :max 137224,
     :avg 136212.32,
     :cardinality 100},
    :unix_ms
    {:min 1724440480334,
     :data-type "integer",
     :commons {1724440885334 1, 1724440705334 1, 1724440900334 1},
     :distinct 50,
     :group-by? true,
     :median 1724440847834,
     :max 1724441215334,
     :avg 1.7244408478341E12,
     :cardinality 100},
    :used_memory_mb
    {:min 8333,
     :data-type "integer",
     :commons {14649 1, 14901 1, 12942 1},
     :distinct 50,
     :group-by? true,
     :median 13784,
     :max 17170,
     :avg 12755.2,
     :cardinality 100},
    :styler_heatmap_7696
    {:min 1,
     :data-type "integer",
     :commons {1 50},
     :distinct 1,
     :group-by? true,
     :median 1,
     :max 1,
     :avg 1,
     :cardinality 1},
    :recent_queries_run
    {:min 0,
     :data-type "integer",
     :commons {1 27, 0 9, 8 8},
     :distinct 4,
     :group-by? true,
     :median 1,
     :max 8,
     :avg 2.66,
     :cardinality 7},
    :thread_count
    {:min 197,
     :data-type "integer",
     :commons {201 8, 202 7, 200 5},
     :distinct 20,
     :group-by? true,
     :median 202,
     :max 303,
     :avg 216.1,
     :cardinality 40},
    :internal_queries_run
    {:min 0,
     :data-type "integer",
     :commons {0 50},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 1},
    :open_flow_channels
    {:min -1,
     :data-type "integer",
     :commons {-1 50},
     :distinct 1,
     :group-by? true,
     :median -1,
     :max -1,
     :avg -1,
     :cardinality 1},
    :ws_peers
    {:min 5,
     :data-type "integer",
     :commons {5 50},
     :distinct 1,
     :group-by? true,
     :median 5,
     :max 5,
     :avg 5,
     :cardinality 1},
    :recent_messages
    {:min 1134484,
     :data-type "integer",
     :commons {1138398 1, 1145751 1, 1151961 1},
     :distinct 50,
     :group-by? true,
     :median 1144028.5,
     :max 1153465,
     :avg 1144007.2,
     :cardinality 100},
    :recent_queries_per_second
    {:min 0,
     :data-type "float",
     :commons {0.07 27, 0 9, 0.53 8},
     :distinct 4,
     :group-by? true,
     :median 0.07,
     :max 0.53,
     :avg 0.17900000000000005,
     :cardinality 7},
    :batches_per_second
    {:min 3.12,
     :data-type "float",
     :commons {3.12 50},
     :distinct 1,
     :group-by? true,
     :median 3.12,
     :max 3.12,
     :avg 3.1200000000000023,
     :cardinality 1},
    :seconds_since_last_update
    {:min 14,
     :data-type "integer",
     :commons {15 34, 14 16},
     :distinct 2,
     :group-by? true,
     :median 15,
     :max 15,
     :avg 14.68,
     :cardinality 3}},
   :rowcount 50},
  :client-stats-drag-33
  {:fields
   {:server_subs
    {:min 4,
     :data-type "integer",
     :commons {18 1, 6 1, 27 1},
     :distinct 5,
     :group-by? true,
     :median 4,
     :max 27,
     :avg 12.8,
     :cardinality 100},
    :push
    {:min 14588,
     :data-type "integer",
     :commons {59032 1, 20546 1, 342776 1},
     :distinct 5,
     :group-by? true,
     :median 342776,
     :max 342776,
     :avg 102436.4,
     :cardinality 100},
    :client_subs
    {:min 4,
     :data-type "integer",
     :commons {18 1, 6 1, 27 1},
     :distinct 5,
     :group-by? true,
     :median 4,
     :max 27,
     :avg 12.8,
     :cardinality 100},
    :recent_messages_per_second
    {:min 0.33,
     :data-type "float",
     :commons {1.27 1, 0.47 1, 7.27 1},
     :distinct 5,
     :group-by? true,
     :median 1.27,
     :max 7.27,
     :avg 2.202,
     :cardinality 100},
    :last_seen_seconds
    {:min 12,
     :data-type "integer",
     :commons {14 4, 12 1},
     :distinct 2,
     :group-by? true,
     :median 14,
     :max 14,
     :avg 13.6,
     :cardinality 40},
    :memory
    {:min "183.8533",
     :data-type "string",
     :commons {"638.5062" 1, "2197.4866" 1, "639.8271" 1},
     :distinct 5,
     :group-by? true,
     :median "530.1456",
     :max "639.8271",
     :avg "183.8533 (non-numeric average)",
     :cardinality 100},
    :ts
    {:min "2024-08-23 15:27:10",
     :data-type "string",
     :commons {"2024-08-23 15:27:10" 5},
     :distinct 1,
     :group-by? true,
     :median "2024-08-23 15:27:10",
     :max "2024-08-23 15:27:10",
     :avg "2024-08-23 15:27:10 (non-numeric average)",
     :cardinality 20},
    :styler_highlight_8717
    {:min 0,
     :data-type "integer",
     :commons {0 4, 1 1},
     :distinct 2,
     :group-by? true,
     :median 0,
     :max 1,
     :avg 0.2,
     :cardinality 40},
    :client_latency
    {:min 129,
     :data-type "integer",
     :commons {132 1, 152 1, 1085 1},
     :distinct 5,
     :group-by? true,
     :median 132,
     :max 1085,
     :avg 331.4,
     :cardinality 100},
    :ack
    {:min 2653,
     :data-type "integer",
     :commons {2937 2, 2938 2, 2653 1},
     :distinct 3,
     :group-by? true,
     :median 2937,
     :max 2938,
     :avg 2880.6,
     :cardinality 60},
    :client_name
    {:min ":accomplished-mauve-serval-33",
     :data-type "string",
     :commons
     {":spirited-hexagonal-llama-31" 1,
      ":instantaneous-ovoid-goat-4" 1,
      ":fit-square-wallaby-16" 1},
     :distinct 5,
     :group-by? true,
     :median ":fit-square-wallaby-16",
     :max ":spirited-hexagonal-llama-31",
     :avg ":accomplished-mauve-serval-33 (non-numeric average)",
     :cardinality 100},
    :last_seen
    {:min "12 seconds",
     :data-type "string",
     :commons {"14 seconds" 4, "12 seconds" 1},
     :distinct 2,
     :group-by? true,
     :median "14 seconds",
     :max "14 seconds",
     :avg "14 seconds (non-numeric average)",
     :cardinality 40}},
   :rowcount 5},
  :query-4704
  {:fields
   {:test_name
    {:data-type "string",
     :distinct 7,
     :group-by? true,
     :commons {"total_rows" 1, "sum_val" 1, "min_val" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 3,
     :group-by? false,
     :commons {8 4, 2 2, 1 1},
     :cardinality 42}},
   :rowcount 7},
  :jvm-stats-drag-40
  {:fields
   {:ts1
    {:min "2024-08-23 13:21:40",
     :data-type "string",
     :commons
     {"2024-08-23 14:38:10" 1, "2024-08-23 14:28:10" 1, "2024-08-23 15:19:40" 1},
     :distinct 500,
     :group-by? true,
     :median "2024-08-23 14:24:10",
     :max "2024-08-23 15:26:55",
     :avg "2024-08-23 15:26:55 (non-numeric average)",
     :cardinality 100},
    :queries_run
    {:min 7136,
     :data-type "integer",
     :commons {7682 2, 7293 2, 7388 2},
     :distinct 393,
     :group-by? true,
     :median 7842,
     :max 8538,
     :avg 7840.142,
     :cardinality 78},
    :recent_messages_per_second
    {:min 22.27,
     :data-type "float",
     :commons {25.14 40, 25.13 38, 25.27 30},
     :distinct 98,
     :group-by? true,
     :median 25.27,
     :max 32.13,
     :avg 25.858639999999987,
     :cardinality 19},
    :sql_cache_size
    {:min 0,
     :data-type "integer",
     :commons {0 500},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 0},
    :ts
    {:min "2024-08-23 13:2",
     :data-type "string",
     :commons {"2024-08-23 13:3" 40, "2024-08-23 15:0" 40, "2024-08-23 14:1" 40},
     :distinct 13,
     :group-by? true,
     :median "2024-08-23 14:2",
     :max "2024-08-23 15:2",
     :avg "2024-08-23 15:2 (non-numeric average)",
     :cardinality 2},
    :messages
    {:min 959201,
     :data-type "integer",
     :commons {1028874 1, 981800 1, 1138398 1},
     :distinct 500,
     :group-by? true,
     :median 1097541,
     :max 1153819,
     :avg 1056579.074,
     :cardinality 100},
    :sniffs_run
    {:min 125,
     :data-type "integer",
     :commons {125 500},
     :distinct 1,
     :group-by? true,
     :median 125,
     :max 125,
     :avg 125,
     :cardinality 0},
    :sys_load
    {:min 1.33,
     :data-type "float",
     :commons {1.52 25, 1.63 25, 1.59 23},
     :distinct 171,
     :group-by? true,
     :median 1.86,
     :max 8.49,
     :avg 2.488619999999999,
     :cardinality 34},
    :recent_batches_per_second
    {:min 2.2,
     :data-type "float",
     :commons {3.27 81, 2.93 58, 2.87 54},
     :distinct 24,
     :group-by? true,
     :median 3.07,
     :max 3.73,
     :avg 3.0516599999999996,
     :cardinality 4},
    :batches
    {:min 114288,
     :data-type "integer",
     :commons {124656 1, 126217 1, 115004 1},
     :distinct 500,
     :group-by? true,
     :median 125904.5,
     :max 137224,
     :avg 125838.45,
     :cardinality 100},
    :used_memory_mb
    {:min 7637,
     :data-type "integer",
     :commons {12289 2, 15456 2, 16953 2},
     :distinct 491,
     :group-by? true,
     :median 14526,
     :max 17223,
     :avg 12692.012,
     :cardinality 98},
    :thread_count
    {:min 197,
     :data-type "integer",
     :commons {201 52, 202 48, 200 43},
     :distinct 52,
     :group-by? true,
     :median 204,
     :max 311,
     :avg 215.606,
     :cardinality 10},
    :internal_queries_run
    {:min 0,
     :data-type "integer",
     :commons {0 500},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 0},
    :open_flow_channels
    {:min -1,
     :data-type "integer",
     :commons {-1 500},
     :distinct 1,
     :group-by? true,
     :median -1,
     :max -1,
     :avg -1,
     :cardinality 0},
    :ws_peers
    {:min 5,
     :data-type "integer",
     :commons {5 500},
     :distinct 1,
     :group-by? true,
     :median 5,
     :max 5,
     :avg 5,
     :cardinality 0},
    :recent_queries_per_second
    {:min 0,
     :data-type "float",
     :commons {0.07 244, 0.53 116, 0 107},
     :distinct 7,
     :group-by? true,
     :median 0.07,
     :max 0.8,
     :avg 0.18875999999999915,
     :cardinality 1}},
   :rowcount 500},
  :gen-viz-1002
  {:fields
   {:diff
    {:min "+129",
     :data-type "string",
     :commons {"-562" 1, "+129" 1, "+507" 1},
     :distinct 18,
     :group-by? true,
     :median "+566",
     :max "12045 MB",
     :avg "12045 MB (non-numeric average)",
     :cardinality 100},
    :used_memory_mb
    {:min 12045.45,
     :data-type "float",
     :commons {12578.33 1, 12459.33 1, 12787.33 1},
     :distinct 18,
     :group-by? true,
     :median 12592.15,
     :max 13693.52,
     :avg 12598.412222222221,
     :cardinality 100},
    :cpu_usage
    {:min 2.1,
     :data-type "float",
     :commons {2.29 2, 2.53 2, 2.39 2},
     :distinct 15,
     :group-by? true,
     :median 2.41,
     :max 3.04,
     :avg 2.4455555555555555,
     :cardinality 83},
    :mps
    {:min 25.66,
     :data-type "float",
     :commons {25.96 2, 25.83 2, 25.87 2},
     :distinct 14,
     :group-by? true,
     :median 25.855,
     :max 26,
     :avg 25.860555555555557,
     :cardinality 77},
    :ts1
    {:min "2024-08-23 12:3",
     :data-type "string",
     :commons {"2024-08-23 13:3" 1, "2024-08-23 13:0" 1, "2024-08-23 15:0" 1},
     :distinct 18,
     :group-by? true,
     :median "2024-08-23 13:5",
     :max "2024-08-23 15:2",
     :avg "2024-08-23 12:3 (non-numeric average)",
     :cardinality 100}},
   :rowcount 18},
  :jvm_stats
  {:fields
   {:queries_run
    {:min 8,
     :data-type "integer",
     :commons {199 2, 67 2, 96 2},
     :distinct 85,
     :group-by? true,
     :median 242,
     :max 332,
     :avg 163.36936936936937,
     :cardinality 76},
    :recent_messages_per_second
    {:min -93,
     :data-type "float",
     :commons {23.53 7, 24.53 5, 25 5},
     :distinct 60,
     :group-by? true,
     :median 24.47,
     :max 30.8,
     :avg 23.714864864864857,
     :cardinality 54},
    :uptime_seconds
    {:min -1,
     :data-type "integer",
     :commons {1259 1, 1364 1, 1004 1},
     :distinct 111,
     :group-by? true,
     :median 239,
     :max 1649,
     :avg 824,
     :cardinality 100},
    :queries_per_second
    {:min -8,
     :data-type "float",
     :commons {0 110, -8 1},
     :distinct 2,
     :group-by? true,
     :median 0,
     :max 0,
     :avg -0.07207207207207207,
     :cardinality 1},
    :recent_batches
    {:min 0,
     :data-type "integer",
     :commons {858 1, 5202 1, 1434 1},
     :distinct 111,
     :group-by? true,
     :median 3291,
     :max 5202,
     :avg 2628.018018018018,
     :cardinality 100},
    :sql_cache_size
    {:min 0,
     :data-type "integer",
     :commons {0 111},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 0},
    :ts
    {:min "2024-08-23 03:12:55",
     :data-type "string",
     :commons
     {"2024-08-23 03:39:55" 1, "2024-08-23 03:38:40" 1, "2024-08-23 03:32:55" 1},
     :distinct 111,
     :group-by? true,
     :median "2024-08-23 03:26:40",
     :max "2024-08-23 03:40:25",
     :avg "2024-08-23 03:12:55 (non-numeric average)",
     :cardinality 100},
    :subscriptions
    {:min 27,
     :data-type "integer",
     :commons {71 70, 76 21, 73 9},
     :distinct 8,
     :group-by? true,
     :median 71,
     :max 76,
     :avg 71.63063063063063,
     :cardinality 7},
    :messages_per_second
    {:min -93,
     :data-type "float",
     :commons {25.12 9, 25.09 5, 25.23 4},
     :distinct 55,
     :group-by? true,
     :median 25.15,
     :max 29.41,
     :avg 24.240090090090085,
     :cardinality 49},
    :messages
    {:min 93,
     :data-type "integer",
     :commons {6586 1, 36152 1, 21480 1},
     :distinct 111,
     :group-by? true,
     :median 28880,
     :max 41553,
     :avg 20740.477477477478,
     :cardinality 100},
    :sniffs_run
    {:min 2,
     :data-type "integer",
     :commons {13 79, 14 20, 8 6},
     :distinct 6,
     :group-by? true,
     :median 13,
     :max 14,
     :avg 12.531531531531531,
     :cardinality 5},
    :sys_load
    {:min 0.38,
     :data-type "float",
     :commons {0.63 6, 0.96 5, 0.59 5},
     :distinct 83,
     :group-by? true,
     :median 1.33,
     :max 32.8,
     :avg 2.5286486486486486,
     :cardinality 74},
    :recent_batches_per_second
    {:min -4,
     :data-type "float",
     :commons {3.27 17, 2.87 13, 3.33 10},
     :distinct 23,
     :group-by? true,
     :median 3.27,
     :max 3.93,
     :avg 3.1103603603603625,
     :cardinality 20},
    :batches
    {:min 4,
     :data-type "integer",
     :commons {858 1, 5202 1, 1434 1},
     :distinct 111,
     :group-by? true,
     :median 3340,
     :max 5242,
     :avg 2675.2432432432433,
     :cardinality 100},
    :unix_ms
    {:min 1724397175338,
     :data-type "integer",
     :commons {1724397445333 1, 1724398360333 1, 1724398720333 1},
     :distinct 111,
     :group-by? true,
     :median 1724398000333,
     :max 1724398825332,
     :avg 1.724398000333063E12,
     :cardinality 100},
    :used_memory_mb
    {:min 4166,
     :data-type "integer",
     :commons {12400 2, 9482 1, 10678 1},
     :distinct 110,
     :group-by? true,
     :median 5686,
     :max 15267,
     :avg 8073.639639639639,
     :cardinality 99},
    :recent_queries_run
    {:min 0,
     :data-type "integer",
     :commons {1 44, 8 27, 0 26},
     :distinct 8,
     :group-by? true,
     :median 1,
     :max 10,
     :avg 2.990990990990991,
     :cardinality 7},
    :thread_count
    {:min 180,
     :data-type "integer",
     :commons {190 13, 189 11, 194 9},
     :distinct 33,
     :group-by? true,
     :median 193,
     :max 384,
     :avg 204.6936936936937,
     :cardinality 29},
    :internal_queries_run
    {:min 0,
     :data-type "integer",
     :commons {0 111},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 0},
    :open_flow_channels
    {:min -1,
     :data-type "integer",
     :commons {-1 111},
     :distinct 1,
     :group-by? true,
     :median -1,
     :max -1,
     :avg -1,
     :cardinality 0},
    :ws_peers
    {:min 5,
     :data-type "integer",
     :commons {5 111},
     :distinct 1,
     :group-by? true,
     :median 5,
     :max 5,
     :avg 5,
     :cardinality 0},
    :recent_messages
    {:min 0,
     :data-type "integer",
     :commons {30356 1, 38433 1, 8802 1},
     :distinct 111,
     :group-by? true,
     :median 28505,
     :max 41171,
     :avg 20372.81081081081,
     :cardinality 100},
    :recent_queries_per_second
    {:min -8,
     :data-type "float",
     :commons {0.07 44, 0.53 26, 0 26},
     :distinct 9,
     :group-by? true,
     :median 0.07,
     :max 0.67,
     :avg 0.12315315315315319,
     :cardinality 8},
    :batches_per_second
    {:min -4,
     :data-type "float",
     :commons {3.22 14, 3.2 12, 3.19 9},
     :distinct 36,
     :group-by? true,
     :median 3.24,
     :max 3.64,
     :avg 3.2427027027027013,
     :cardinality 32},
    :seconds_since_last_update
    {:min -1,
     :data-type "integer",
     :commons {14 85, 15 25, -1 1},
     :distinct 3,
     :group-by? true,
     :median 14,
     :max 15,
     :avg 14.09009009009009,
     :cardinality 2}},
   :rowcount 111},
  :status-drag-28
  {:fields
   {:server_subs
    {:data-type "integer",
     :distinct 6,
     :group-by? true,
     :commons {16 4, 29 1, 12 1},
     :cardinality 66},
    :queue_size
    {:data-type "integer",
     :distinct 4,
     :group-by? true,
     :commons {0 4, 2 3, 4 1},
     :cardinality 44},
    :push
    {:data-type "integer",
     :distinct 9,
     :group-by? true,
     :commons {2042 1, 109782 1, 551075 1},
     :cardinality 100},
    :client_subs
    {:data-type "integer",
     :distinct 6,
     :group-by? true,
     :commons {16 4, 29 1, 12 1},
     :cardinality 66},
    :recent_messages_per_second
    {:data-type "float",
     :distinct 6,
     :group-by? true,
     :commons {1.1 4, 2.14 1, 6.15 1},
     :cardinality 66},
    :uptime_seconds
    {:data-type "float",
     :distinct 9,
     :group-by? true,
     :commons {102118.711 1, 102121.355 1, 102121.735 1},
     :cardinality 100},
    :uptime
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons
     {"28 hours, 21 minutes, 44 seconds" 3,
      "28 hours, 21 minutes, 45 seconds" 2,
      "28 hours, 21 minutes, 43 seconds" 1},
     :cardinality 66},
    :last_seen_seconds
    {:data-type "integer",
     :distinct 4,
     :group-by? true,
     :commons {13 3, 12 3, 14 2},
     :cardinality 44},
    :memory
    {:data-type "string",
     :distinct 9,
     :group-by? true,
     :commons {"465" 1, "1185" 1, "377" 1},
     :cardinality 100},
    :queue_distro
    {:data-type "string",
     :distinct 9,
     :group-by? true,
     :commons {"{0 109853}" 1, "{0 109783}" 1, "{0 755319}" 1},
     :cardinality 100},
    :ts
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"2024-07-04 13:53:32" 9},
     :cardinality 11},
    :messages_per_second
    {:data-type "float",
     :distinct 7,
     :group-by? true,
     :commons {1.08 3, 2.22 1, 7.5 1},
     :cardinality 77},
    :client_latency
    {:data-type "integer",
     :distinct 9,
     :group-by? true,
     :commons {1214 1, 162 1, 2102 1},
     :cardinality 100},
    :ack
    {:data-type "integer",
     :distinct 4,
     :group-by? true,
     :commons {6807 5, 6808 2, 49 1},
     :cardinality 44},
    :booted_ts
    {:data-type "integer",
     :distinct 9,
     :group-by? true,
     :commons {1720013491697 1, 1720013491906 1, 1720098700191 1},
     :cardinality 100},
    :client_name
    {:data-type "string",
     :distinct 9,
     :group-by? true,
     :commons
     {":cheery-pear-pig-5" 1,
      ":amazing-turquoise-opossum-26" 1,
      ":upright-bronze-ostrich-37" 1},
     :cardinality 100},
    :last_seen
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons {"13 seconds" 3, "12 seconds" 3, "14 seconds" 2},
     :cardinality 44}},
   :rowcount 9},
  :tests-drag-12
  {:fields
   {:db_type
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"SQLite" 37},
     :cardinality 2},
    :key_hash
    {:data-type "string",
     :distinct 9,
     :group-by? true,
     :commons {"-1203575133" 6, "1009678323" 6, "-4715355" 4},
     :cardinality 24},
    :db_schema
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"none" 37},
     :cardinality 2},
    :test_name
    {:data-type "string",
     :distinct 7,
     :group-by? true,
     :commons {"min_val" 8, "max_val" 8, "example_value" 8},
     :cardinality 18},
    :table_type
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"TABLE" 37},
     :cardinality 2},
    :test_sql
    {:data-type "string",
     :distinct 37,
     :group-by? true,
     :commons
     {"\nSELECT MAX((SUBSTR(ts, 0, 5))) AS maxval\nFROM setlists_drag_2\n" 1,
      "\nSELECT MAX(song_name) AS maxval\nFROM setlists_drag_2\n" 1,
      "\nSELECT (SUBSTR(ts, 0, 11)) AS example_value\nFROM setlists_drag_2\nWHERE (SUBSTR(ts, 0, 11)) IS NOT NULL\nLIMIT 1\n"
      1},
     :cardinality 100},
    :run_id
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {8689 37},
     :cardinality 2},
    :updated
    {:data-type "string",
     :distinct 2,
     :group-by? true,
     :commons {"2024-07-04 05:53:10" 23, "2024-07-04 05:53:11" 14},
     :cardinality 5},
    :test_val_float
    {:data-type "unknown",
     :distinct 3,
     :group-by? true,
     :commons {nil 35, 1 1, 8.64 1},
     :cardinality 8},
    :db_catalog
    {:data-type "unknown",
     :distinct 1,
     :group-by? true,
     :commons {nil 37},
     :cardinality 2},
    :field_name
    {:data-type "string",
     :distinct 6,
     :group-by? true,
     :commons {"ts" 16, "rows" 6, "song_order" 6},
     :cardinality 16},
    :derived_calc
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons {"" 25, "[:substr :field 0 11]" 4, "[:substr :field 6 2]" 4},
     :cardinality 10},
    :is_sample
    {:data-type "integer",
     :distinct 1,
     :group-by? true,
     :commons {0 37},
     :cardinality 2},
    :derived_name
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons {"" 25, "day_sqlite_ts" 4, "by_month_sqlite_ts" 4},
     :cardinality 10},
    :data_type
    {:data-type "string",
     :distinct 3,
     :group-by? true,
     :commons {"unknown" 13, "integer" 12, "string" 12},
     :cardinality 8},
    :field_type
    {:data-type "string",
     :distinct 4,
     :group-by? true,
     :commons {"INTEGER" 12, "derived" 12, "VARCHAR" 12},
     :cardinality 10},
    :test_raw_val
    {:data-type "string",
     :distinct 20,
     :group-by? true,
     :commons {"1" 8, "2023-09-24" 3, "2023" 3},
     :cardinality 54},
    :test_val_integer
    {:data-type "unknown",
     :distinct 9,
     :group-by? true,
     :commons {nil 20, 1 8, 200 2},
     :cardinality 24},
    :table_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"setlists_drag_2" 37},
     :cardinality 2},
    :connection_id
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"cache.db" 37},
     :cardinality 2},
    :test_val_string
    {:data-type "unknown",
     :distinct 11,
     :group-by? true,
     :commons {nil 19, "2023-09-24" 3, "2023" 3},
     :cardinality 29},
    :context_hash
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"-1861986313" 37},
     :cardinality 2}},
   :rowcount 37},
  :client_stats
  {:fields
   {:server_subs
    {:min 4,
     :data-type "integer",
     :commons {9 1, 4 1, 18 1},
     :distinct 6,
     :group-by? true,
     :median 16.5,
     :max 29,
     :avg 15.5,
     :cardinality 100},
    :queue_size
    {:min "",
     :data-type "unknown",
     :commons {nil 6},
     :distinct 1,
     :group-by? true,
     :median "",
     :max "",
     :avg " (non-numeric average)",
     :cardinality 16},
    :push
    {:min 1318,
     :data-type "integer",
     :commons {7256 1, 1318 1, 8476 1},
     :distinct 6,
     :group-by? true,
     :median 18626,
     :max 35204,
     :avg 9357.833333333334,
     :cardinality 100},
    :client_subs
    {:min 4,
     :data-type "integer",
     :commons {9 1, 4 1, 18 1},
     :distinct 6,
     :group-by? true,
     :median 16.5,
     :max 29,
     :avg 15.5,
     :cardinality 100},
    :recent_messages_per_second
    {:min 0.33,
     :data-type "float",
     :commons {1.67 1, 0.33 1, 1.27 1},
     :distinct 6,
     :group-by? true,
     :median 1.47,
     :max 8.13,
     :avg 2.3333333333333335,
     :cardinality 100},
    :uptime_seconds
    {:min 239.889,
     :data-type "float",
     :commons {4255.398 1, 4259.06 1, 4259.009 1},
     :distinct 6,
     :group-by? true,
     :median 4258.8435,
     :max 4259.189,
     :avg 3588.537166666667,
     :cardinality 100},
    :uptime
    {:min "1 hour, 10 minutes, 40 seconds",
     :data-type "string",
     :commons
     {"1 hour, 10 minutes, 44 seconds" 3,
      "1 hour, 10 minutes, 40 seconds" 1,
      "3 minutes, 44 seconds" 1},
     :distinct 4,
     :group-by? true,
     :median "1 hour, 10 minutes, 44 seconds",
     :max "3 minutes, 44 seconds",
     :avg "1 hour, 10 minutes, 43 seconds (non-numeric average)",
     :cardinality 66},
    :last_seen_seconds
    {:min 14,
     :data-type "integer",
     :commons {14 5, 254 1},
     :distinct 2,
     :group-by? true,
     :median 14,
     :max 254,
     :avg 54,
     :cardinality 33},
    :memory
    {:min "1001.5003",
     :data-type "string",
     :commons {"503.5456" 1, "221.428" 1, "1001.5003" 1},
     :distinct 6,
     :group-by? true,
     :median "2275.199",
     :max "503.5456",
     :avg "2629.6706 (non-numeric average)",
     :cardinality 100},
    :queue_distro
    {:min "nil",
     :data-type "string",
     :commons {"nil" 6},
     :distinct 1,
     :group-by? true,
     :median "nil",
     :max "nil",
     :avg "nil (non-numeric average)",
     :cardinality 16},
    :ts
    {:min "2024-08-23 04:23:40",
     :data-type "string",
     :commons {"2024-08-23 04:23:40" 6},
     :distinct 1,
     :group-by? true,
     :median "2024-08-23 04:23:40",
     :max "2024-08-23 04:23:40",
     :avg "2024-08-23 04:23:40 (non-numeric average)",
     :cardinality 16},
    :messages_per_second
    {:min 0.31,
     :data-type "float",
     :commons {1.71 1, 0.31 1, 1.99 1},
     :distinct 6,
     :group-by? true,
     :median 1.85,
     :max 8.56,
     :avg 3.5483333333333333,
     :cardinality 100},
    :client_latency
    {:min 123,
     :data-type "integer",
     :commons {239 1, 123 1, 235 1},
     :distinct 6,
     :group-by? true,
     :median 237,
     :max 431,
     :avg 264.3333333333333,
     :cardinality 100},
    :ack
    {:min 15,
     :data-type "integer",
     :commons {284 2, 283 2, 15 1},
     :distinct 4,
     :group-by? true,
     :median 283,
     :max 284,
     :avg 236,
     :cardinality 66},
    :booted_ts
    {:min 1724397161143,
     :data-type "integer",
     :commons {1724397164934 1, 1724397161272 1, 1724397161323 1},
     :distinct 6,
     :group-by? true,
     :median 1.7243971614885E12,
     :max 1724401180443,
     :avg 1.7243978317948333E12,
     :cardinality 100},
    :client_name
    {:min ":accomplished-mauve-serval-33",
     :data-type "string",
     :commons
     {":divine-plum-dove-24" 1,
      ":accomplished-mauve-serval-33" 1,
      ":spirited-hexagonal-llama-31" 1},
     :distinct 6,
     :group-by? true,
     :median ":effective-jade-gnat-36",
     :max ":spirited-hexagonal-llama-31",
     :avg ":effective-jade-gnat-36 (non-numeric average)",
     :cardinality 100},
    :last_seen
    {:min "14 seconds",
     :data-type "string",
     :commons {"14 seconds" 5, "4 minutes, 14 seconds" 1},
     :distinct 2,
     :group-by? true,
     :median "14 seconds",
     :max "4 minutes, 14 seconds",
     :avg "4 minutes, 14 seconds (non-numeric average)",
     :cardinality 33}},
   :rowcount 6},
  :query-11325
  {:fields
   {:table_name
    {:data-type "string",
     :distinct 1,
     :group-by? true,
     :commons {"setlists_drag_2" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 1,
     :group-by? false,
     :commons {8 1},
     :cardinality 100}},
   :rowcount 1},
  :query-291
  {:fields
   {:rowcnt
    {:data-type "integer",
     :distinct 1,
     :group-by? false,
     :commons {37 1},
     :cardinality 100}},
   :rowcount 1},
  :query-6018
  {:fields
   {:attribute_name
    {:data-type "string",
     :distinct 24,
     :group-by? true,
     :commons {"very_low_cardinality?" 1, "low_cardinality?" 1, "dimension?" 1},
     :cardinality 100},
    :rowcnt
    {:data-type "integer",
     :distinct 1,
     :group-by? false,
     :commons {8 24},
     :cardinality 4}},
   :rowcount 24},
  :gen-viz-1002-clone-38
  {:fields
   {:diff
    {:min "+113",
     :data-type "string",
     :commons {"+294" 1, "+208" 1, "+444" 1},
     :distinct 13,
     :group-by? true,
     :median "+294",
     :max "8693 MB",
     :avg "8693 MB (non-numeric average)",
     :cardinality 100},
    :used_memory_mb
    {:min 8693,
     :data-type "float",
     :commons {12159 1, 12270 1, 8693 1},
     :distinct 13,
     :group-by? true,
     :median 12270,
     :max 12883,
     :avg 11978.692307692309,
     :cardinality 100},
    :ts1
    {:min "23-03",
     :data-type "string",
     :commons {"23-09" 1, "23-06" 1, "23-13" 1},
     :distinct 13,
     :group-by? true,
     :median "23-09",
     :max "23-15",
     :avg "23-03 (non-numeric average)",
     :cardinality 100}},
   :rowcount 13},
  :reco-counts {:fields {}, :rowcount 0}},
 :default-col-widths
 {:block-494 {:jvm-stats-drag-40 100},
  :block-8179 {:client-stats-drag-33 141},
  :block-3438 {:new-query-1 100},
  :block-7876 {:new-query 170}},
 :runstream-drops nil,
 :tabs
 ["welcome to the party pal"
  "reassuring sand dollar"
  "byzantium rabbit"
  "orange hornet"
  "victorious lion"
  "excellent wolf"
  "color test"],
 :auto-run? true,
 :selected-cols nil,
 :server
 {:settings
  {:harvest-on-boot? false,
   :default "./screens/looking-glass-redux.edn",
   :new-block-rand
   ["Why, sometimes I've believed as many as six impossible things before breakfast."
    "Imagination is the only weapon in the war against reality."
    "It's no use going back to yesterday, because I was a different person then."
    "Who in the world am I? Ah, that's the great puzzle."
    "Curiouser and curiouser!"
    "If you don't know where you are going any road can take you there."
    "We're all mad here."
    "I can't go back to yesterday because I was a different person then."
    "It's always tea-time."
    "Begin at the beginning and go on till you come to the end; then stop."
    "I knew who I was this morning, but I've changed a few times since then."
    "How long is forever? Sometimes, just one second."
    "If everybody minded their own business, the world would go around a great deal faster than it does."
    "I don't think... then you shouldn't talk, said the Hatter."
    "Oh, how I wish I could shut up like a telescope! I think I could, if I only knew how to begin."
    "You're entirely bonkers. But I'll tell you a secret... all the best people are."
    "It was much pleasanter at home, when one wasn't always growing larger and smaller."
    "I wonder if I've been changed in the night. Let me think. Was I the same when I got up this morning?"
    "Have I gone mad? I'm afraid so, but let me tell you something, the best people usually are."
    "Well, I never heard it before, but it sounds uncommon nonsense."
    "Why, sometimes I've believed as many as six impossible things before breakfast."
    "Imagination is the only weapon in the war against reality."
    "Who in the world am I? Ah, that's the great puzzle."
    "We're all mad here."
    "How long is forever? Sometimes, just one second."
    "The world is full of obvious things which nobody by any chance ever observes."
    "Reality is that which, when you stop believing in it, doesn't go away."
    "The sky above the port was the color of television, tuned to a dead channel."
    "Information wants to be free."
    "The future is already here – it's just not evenly distributed."
    "He had a chip in his head, an interface jack that allowed him to plug his brain directly into the console."
    "The 'Net is a waste of time, and that's exactly what's right about it."
    "Cyberspace. A consensual hallucination experienced daily by billions of legitimate operators, in every nation."
    "The street finds its own uses for things."
    "Accelerated world. Accelerated nervous system to go with it."
    "The future has arrived — it's just not evenly distributed yet."
    "It's not enough to be able to pick up a sword. You have to know which end to poke into the enemy."
    "When you want to know how things really work, study them when they're coming apart."
    "The human sensory system is a lot more complex and weird than most people realize."
    "Time moves in one direction, memory in another."
    "The only thing that keeps you sane is to think that it's all a bad dream."
    "We're an information economy. They teach you that in school. What they don't tell you is that it's impossible to move, to live, to operate at any level without leaving traces, bits, seemingly meaningless fragments of personal information."
    "We monitor many frequencies. We listen always. Came a voice, out of the babel of tongues, speaking to us. It played us a mighty dub."
    "Secrets are not the same as surprises."
    "Neuromancer. The lane to the land of the dead."],
   :eleven-labs-api-key nil,
   :modes
   {:terminal [:terminal :*data],
    :markdown [:markdown :*data],
    :rowset [:honeycomb {:select [:*], :from {:data :*data}} 11 9],
    :pre
    [:pre
     {:style
      {:color :theme/editor-outer-rim-color,
       :background-color "#00000000",
       :border "none",
       :text-shadow "4px 4px 4px #00000088",
       :font-size "17px",
       :font-family :theme/monospaced-font}}
     [:string3 :*data]],
    :edn [:edn :*data],
    :clover [:box :child :*data],
    :pretty [:pretty-box :*data],
    :text [:console :*data],
    :data [:data-viewer :*data]},
   :kits {},
   :clover-templates
   {:color-theft
    {:args [:*input],
     :body
     [:data-viewer [:run-solver [:get-my-colors {:input-image-path :*input}]]]},
    :pretty-box
    {:args [:*input],
     :body
     [:box
      :size
      "auto"
      :align
      :center
      :justify
      :center
      :style
      {:color :theme/editor-outer-rim-color,
       :font-size [:auto-size-px [:string3 :*input]]}
      :child
      [:string3 :*input]]},
    :clj
    {:args [:code],
     :body
     [:run-solver
      {:signal false, :cache? false, :type :clojure, :input-map {}, :data :code}]},
    :clj2
    {:args [:code],
     :body
     [:run-solver
      {:signal false, :cache? false, :type :clojure2, :input-map {}, :data :code}]},
    :cheese-burger
    {:args [:x],
     :body
     [:box
      :style
      {:color "yellow", :font-size "23px"}
      :child
      [:string3 :x "CHEESEBURGER!"]]}},
   :eleven-labs-default-voice-name "Not OG Buffy",
   :debug-level 1,
   :screens
   ["GGGeat-ochre-mole-exiled-from-abyssal-plain"
    "SSSSSSuccessful-oval-sea-urchin-of-mountain-range"
    "SSuccessful-oval-sea-urchin-of-mountain-range"
    "aaa-run-amok"
    "aaaaah-esday-the-day"
    "aaaaah-wednesday-the-day"
    "aaaah-wednesday-the-day"
    "alarm-clock-tv"
    "alarm-clock1"
    "alarm-clock2"
    "alarm-clock22"
    "alarm-clock23"
    "alice-puzzle-1"
    "asdasdasdasd"
    "autumn-theme"
    "base-test-perf"
    "base-test-perf22"
    "battle-mage"
    "bigfoot-snapshots"
    "bigfoot-snapshots2"
    "bigfoot-snapshots3"
    "blackberries"
    "blackberries2"
    "blackberries3"
    "blackberries3-narrow"
    "blackberries3-narrow2"
    "blank-blue"
    "blank-sizzle"
    "blank-sizzle2"
    "blue-pines"
    "boston-test-10-3-23"
    "broken-jacket"
    "bunch of bullshit"
    "bunch of bullshit2"
    "bunch of bullshit4"
    "caliope"
    "calliope"
    "canvas-scrubber-test1"
    "capecod-viking"
    "chaos simple"
    "chaos-views"
    "chompers"
    "claude-testing2"
    "clean-grey-defaults"
    "code-data-literal-stonks-test"
    "conifer-boughs"
    "counting-lord-of-the-woods"
    "crazy-alice"
    "dark-crested-jackelope"
    "data-literals-test-sunday"
    "data-literals-test-sundaydd"
    "demo-dark-pumpkin-bkgrd-sept23"
    "demo-light-bkgrd-sept23"
    "demo-lime-green-slime"
    "desktops-and-broomsticks"
    "dirty-purple"
    "dirty-purple22"
    "duality-of-lepus"
    "duality-of-lepus33"
    "duality-of-lepus33aa"
    "duality-of-lepus33aass"
    "error-monitor"
    "error-monitor-vanessa"
    "error-monitor-vanessa2"
    "error-monitor-vanessa3"
    "error-monitor-vanessa4"
    "error-monitor-vanessa5"
    "evil-main-street"
    "fake-books-1"
    "fake-bricks"
    "fetching-pentagonal-termite-of-tghe-submarine-canyon"
    "final-fantasy-dorchester"
    "fox-hills"
    "game-of-life"
    "glass-fish-board-test"
    "green-storm-city"
    "hue-board-1"
    "late-winter-theme"
    "lavender-side-eye"
    "layout-test-1"
    "layout-test-12"
    "light-theme"
    "literal-data-test"
    "looking-glass-conway"
    "looking-glass-redux-conway2"
    "looking-glass-redux-mix5"
    "looking-glass-redux-test"
    "looking-glass-redux-viking"
    "looking-glass-redux-viking2"
    "looking-glass-redux2"
    "looking-glass-redux23a"
    "looking-glass-redux23abb"
    "looking-glass-redux23b"
    "looking-glass-redux2a"
    "looking-glass-redux2aa"
    "looking-glass-redux45"
    "looking-glass-redux79"
    "looking-glass-sine-wave"
    "luck-of-the-irish"
    "mapbox-test"
    "may-20"
    "my-goodness"
    "my-goodness-the-sequel"
    "neverwinter-amy"
    "night-city-never-sleeps"
    "nightcity-cape-cod"
    "nivo-getting-better!"
    "nivo-hacking-2023"
    "nivo-hacking-2023333"
    "nivo-hacking-october-2nd"
    "nostromo-console"
    "old-defaults"
    "old-fashioned-christmas"
    "old-town-snow-stars"
    "pensive-look"
    "pensive-look2"
    "pine-wood-dawn"
    "pink-and-green-elk"
    "pink-dusk-falls"
    "pinup-rabbit-fields"
    "pomp-girl1"
    "pomp-girl2"
    "poor-touring-me"
    "pres-sql-test-1"
    "purple-dusk-old-town"
    "purple-nightshades"
    "purple-techno-sunset"
    "recharts-test-blocks"
    "refresh-test"
    "repl-demo-july23"
    "repl-tests-3"
    "retro-machines"
    "riffle-test"
    "server-stats"
    "server-stats2"
    "server-stats2a"
    "sick-of-your-shit"
    "sizzle-board-1"
    "sneaky-swamp-creatures1"
    "solver-test"
    "stop-drawing-dead-dashboards"
    "swamp-nightgown"
    "swamp-reacher"
    "system-monitor2"
    "tallica-param-test2"
    "tangerine-dreams"
    "technicolor-shanny"
    "test-blog-screen"
    "the-future-soon"
    "the-generated-lass"
    "the-generated-lass-glow"
    "the-generated-lass-ne"
    "the-generated-lass-sgt"
    "the-generated-lassff"
    "the-memo"
    "the-memo2"
    "the-outer-blues"
    "trad-hybrid"
    "tweet-bigfoot-is-blurry"
    "tweet-demo-thing-bigfoot-is-blurry"
    "unnamed-screen!"
    "viking-pastels"
    "weave-test"
    "weave-test1"
    "weave-test122"
    "who ya gonna call?"
    "who ya gonna call? again"
    "winter-theme"
    "winter-theme-choom"
    "winter-theme2"
    "winter-theme33"
    "winter-theme45"
    "winter-theme47"
    "winter-twin-peaks"
    "witchy425"
    "wonderland-horror-interface"
    "wow-board"]}},
 :runstreams nil,
 :editor? false,
 :buffy? false,
 :valid-kits
 {[:outliers :get-outliers]
  [[nil :queries nil]
   [:block-494 :queries :jvm-stats-drag-40]
   [:block-1956 :queries :cpu-query1]
   [:block-10778 :queries :gen-viz-1002]
   [:block-8179 :queries :client-stats-drag-33]
   [:block-7876 :queries :new-query]
   [:block-8356 :queries :query-291]
   [:block-9727 :queries :gen-viz-553]
   [:block-11587 :queries :status-drag-28]
   [:block-2784 :queries :status-drag-0]
   [:block-3438 :queries :new-query-1]
   [:block-901 :queries :gen-viz-1002-clone-38]
   [:block-2388 :queries :query-6018]
   [:block-2762 :queries :query-11325]
   [:block-6431 :queries :query-4704]
   [:block-7837 :queries :tests-drag-12]]},
 :memory [724065531 668825243 4294705152],
 :sched
 {:jvm-stats-drag-40 39038,
  :gen-viz-1002 39038,
  :gen-viz-553 39038,
  :new-query-1 39038,
  :gen-viz-1002-clone-38 39038,
  :cpu-query1 39038,
  :new-query 39067,
  :client-stats-drag-33 39033},
 :client-name :fit-square-wallaby-16,
 :flow-editor? true,
 :openai-api-key "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",
 :window {:w 3368, :h 1697},
 :quake-console? false,
 :post-meta
 {:gen-viz-553
  {:* {:rowcount 18},
   :thread_count {:distinct 17},
   :clients {:distinct 1},
   :ts {:distinct 18}},
  :new-query {:* {:rowcount 45}, :mem_used {:distinct 45}, :ts_hour {:distinct 45}},
  :cpu-query1
  {:* {:rowcount 180},
   :used_memory_mb {:distinct 178},
   :cpu_usage {:distinct 110},
   :mps {:distinct 86},
   :ts1 {:distinct 180}},
  :new-query-1
  {:* {:rowcount 50},
   :queries_run {:distinct 40},
   :recent_messages_per_second {:distinct 32},
   :uptime_seconds {:distinct 50},
   :queries_per_second {:distinct 1},
   :recent_batches {:distinct 50},
   :sql_cache_size {:distinct 1},
   :styler_heatmap_2888 {:distinct 1},
   :ts {:distinct 50},
   :subscriptions {:distinct 1},
   :messages_per_second {:distinct 2},
   :messages {:distinct 50},
   :sniffs_run {:distinct 1},
   :sys_load {:distinct 35},
   :recent_batches_per_second {:distinct 14},
   :batches {:distinct 50},
   :unix_ms {:distinct 50},
   :used_memory_mb {:distinct 50},
   :styler_heatmap_7696 {:distinct 1},
   :recent_queries_run {:distinct 4},
   :thread_count {:distinct 24},
   :internal_queries_run {:distinct 1},
   :open_flow_channels {:distinct 1},
   :ws_peers {:distinct 1},
   :recent_messages {:distinct 50},
   :recent_queries_per_second {:distinct 4},
   :batches_per_second {:distinct 2},
   :seconds_since_last_update {:distinct 2}},
  :client-stats-drag-33
  {:server_subs {:distinct 5},
   :* {:rowcount 5},
   :push {:distinct 5},
   :client_subs {:distinct 5},
   :recent_messages_per_second {:distinct 5},
   :last_seen_seconds {:distinct 2},
   :memory {:distinct 5},
   :ts {:distinct 1},
   :styler_highlight_8717 {:distinct 2},
   :client_latency {:distinct 5},
   :ack {:distinct 3},
   :client_name {:distinct 5},
   :last_seen {:distinct 2}},
  :jvm-stats-drag-40
  {:ts1 {:distinct 2843},
   :* {:rowcount 2843},
   :queries_run {:distinct 2215},
   :recent_messages_per_second {:distinct 218},
   :sql_cache_size {:distinct 1},
   :ts {:distinct 72},
   :messages {:distinct 2843},
   :sniffs_run {:distinct 33},
   :sys_load {:distinct 434},
   :recent_batches_per_second {:distinct 35},
   :batches {:distinct 2843},
   :used_memory_mb {:distinct 2512},
   :thread_count {:distinct 123},
   :internal_queries_run {:distinct 1},
   :open_flow_channels {:distinct 1},
   :ws_peers {:distinct 1},
   :recent_queries_per_second {:distinct 22}},
  :gen-viz-1002
  {:* {:rowcount 18},
   :used_memory_mb {:distinct 18},
   :cpu_usage {:distinct 15},
   :mps {:distinct 13},
   :ts1 {:distinct 18}},
  :jvm_stats
  {:* {:rowcount 111},
   :queries_run {:distinct 85},
   :recent_messages_per_second {:distinct 60},
   :uptime_seconds {:distinct 111},
   :queries_per_second {:distinct 2},
   :recent_batches {:distinct 111},
   :sql_cache_size {:distinct 1},
   :ts {:distinct 111},
   :subscriptions {:distinct 8},
   :messages_per_second {:distinct 55},
   :messages {:distinct 111},
   :sniffs_run {:distinct 6},
   :sys_load {:distinct 83},
   :recent_batches_per_second {:distinct 23},
   :batches {:distinct 111},
   :unix_ms {:distinct 111},
   :used_memory_mb {:distinct 110},
   :recent_queries_run {:distinct 8},
   :thread_count {:distinct 33},
   :internal_queries_run {:distinct 1},
   :open_flow_channels {:distinct 1},
   :ws_peers {:distinct 1},
   :recent_messages {:distinct 111},
   :recent_queries_per_second {:distinct 9},
   :batches_per_second {:distinct 36},
   :seconds_since_last_update {:distinct 3}},
  :gen-viz-1002-clone-38
  {:* {:rowcount 12}, :used_memory_mb {:distinct 12}, :ts1 {:distinct 12}}},
 :flow-estimates
 {:gen-viz-553 {:times 0.001, :run-id :gen-viz-553},
  :new-query {:times 0.001, :run-id :new-query},
  :raw-custom-override-1559136954
  {:times 0.01, :run-id :raw-custom-override-1559136954},
  :cpu-query1 {:times 0.001, :run-id :cpu-query1},
  :new-query-1 {:times 0.001, :run-id :new-query-1},
  :client-stats-drag-33 {:times 0.001, :run-id :client-stats-drag-33},
  :jvm-stats-drag-40 {:times 0.001, :run-id :jvm-stats-drag-40},
  :gen-viz-1002 {:times 0.001, :run-id :gen-viz-1002},
  :raw-custom-override2091514357
  {:times 0.018, :run-id :raw-custom-override2091514357},
  :jvm_stats {:times 0.004, :run-id :jvm_stats},
  :client_stats {:times 0.002, :run-id :client_stats},
  :raw-custom-override99623917
  {:times 25.014, :run-id :raw-custom-override99623917},
  :gen-viz-1002-clone-38 {:times 0.001, :run-id :gen-viz-1002-clone-38}},
 :status
 {:heartbeat
  {:kick
   [:time/now-seconds
    :solver-status/fit-square-wallaby-16>raw-custom-override-1559136954>running?
    :client/*client-name*>stats>client-latency
    :solver/raw-custom-override99623917
    :solver-status/fit-square-wallaby-16>raw-custom-override2091514357>running?
    :solver/colors-of-the-moment>dominant
    :solver/raw-custom-override-1559136954
    :solver-status/fit-square-wallaby-16>raw-custom-override99623917>running?
    :solver/colors-of-the-moment-8k>most-contrasting-light
    :time/minute
    :server/uptime
    :client/*client-name*>stats>memory
    :solver/colors-of-the-moment>data-colors
    :solver/colors-of-the-moment>colors>2
    :solver/colors-of-the-moment>colors>1
    :kit/kicks>fit-square-wallaby-16
    :solver/colors-of-the-moment>brightest
    :solver/wallpaper-of-the-moment
    :solver/colors-of-the-moment>most-contrasting-dark
    :flow-status/live-scratch-flow>*running?
    :client/*client-name*>stats>recent-messages-per-second
    :solver/colors-of-the-moment>colors>0
    :time/second
    :solver/raw-custom-override2091514357
    :solver/colors-of-the-moment>second-brightest
    :client/*client-name*>stats>messages-per-second
    :solver/colors-of-the-moment>darkest]},
  :alert3 {:alerts :alert2},
  :alert1 {:alerts :alert2}},
 :screen-name "server-stats2",
 :recos-page2 0,
 :selected-tab "welcome to the party pal",
 :col-names nil,
 :snapshots nil,
 :openai-org-id "org-YLngjih2M4oju0tnnZtKCAYg",
 :alerts
 [[[:box
    :style
    {:font-size "15px"}
    :child
    [:box
     :child
     "sent screen save request to server... Please wait."
     :style
     {:font-size "12px", :opacity 0.66}]]
   11
   0.5
   39037
   -1247625457]],
 :recos-page 0,
 :rs-overrides-hashmap {},
 :base-sniff-queries
 {:jvm_stats 1498154063, :kke192 -995149087, :client_stats -175748261},
 :elevenlabs-api-key "f74e20dec69741c2d51663cbd8cd4cf6",
 :user-params-hash 427316938,
 :grid-recos? true,
 :session-hash -144276125,
 :no-ui? false,
 :resolved-queries
 {nil {:_last-run "15:28:01"},
  :gen-viz-553
  {:cache? false,
   :limit 18,
   :group-by [3],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [{:select
     [:sql_cache_size
      :thread_count
      [:ts :ts1]
      [[:substr :ts 0 16] :ts]
      :queries_run
      :sniffs_run
      :batches
      :messages
      :recent_batches_per_second
      :recent_messages_per_second
      :recent_queries_per_second
      :internal_queries_run
      :open_flow_channels
      :sys_load
      :used_memory_mb
      :ws_peers],
     :from [[:jvm_stats :kke192]],
     :order-by [[3 :desc]],
     :where [:>= :recent_batches_per_second 0]}],
   :order-by [[:ts :desc]],
   :select
   [[[:avg :thread_count] :thread_count]
    [[:round [:avg :ws_peers] 0] :clients]
    [[:substring :ts 1 15] :ts]],
   :post-process-fn reverse},
  :status-drag-0 {:select [:*], :from [[:jvm_stats :zz596]], :_last-run "23:25:13"},
  :new-query
  {:cache? false,
   :where [:= :client_name :*client-name-str],
   :limit 45,
   :group-by [2],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [{:select
     [:client_name
      :recent_messages_per_second
      :messages_per_second
      :mem_used
      :batches
      :packets
      :ts],
     :where [:= :client_name :*client-name-str],
     :from [[:client_memory :ee183]],
     :order-by [[:mem_time :desc]]}],
   :order-by [[:ts :desc]],
   :connection-id "system-db",
   :select [[[[:avg :mem_used]] :mem_used] [[:substring :ts 1 15] :ts_hour]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:mem_used 0})
           row
           (get rx idx {:mem_used 0})
           pre-mb
           (/ (get prev-row :mem_used) 1048576)
           mb
           (/ (get row :mem_used) 1048576)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))},
  :cpu-query1
  {:cache? false,
   :limit 180,
   :group-by [4],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [{:select
     [:sql_cache_size
      :thread_count
      [:ts :ts1]
      [[:substr :ts 0 16] :ts]
      :queries_run
      :sniffs_run
      :batches
      :messages
      :recent_batches_per_second
      :recent_messages_per_second
      :recent_queries_per_second
      :internal_queries_run
      :open_flow_channels
      :sys_load
      :used_memory_mb
      :ws_peers],
     :from [[:jvm_stats :kke192]],
     :order-by [[3 :desc]],
     :where [:>= :recent_batches_per_second 0]}],
   :order-by [[4 :desc]],
   :select
   [[[:round [:avg :used_memory_mb] 2] :used_memory_mb]
    [[:round [:avg :sys_load] 2] :cpu_usage]
    [[:round [:avg :recent_messages_per_second] 2] :mps]
    [[:substring :ts1 1 16] :ts1]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:used_memory_mb 0})
           row
           (get rx idx {:used_memory_mb 0})
           pre-mb
           (get prev-row :used_memory_mb)
           mb
           (get row :used_memory_mb)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))},
  :new-query-1
  {:cache? false,
   :limit 50,
   :style-rules
   {[:sys_load :heatmap-7696]
    {:logic true,
     :style
     {:background-color [:heatmap ["#c8ccc3" "#101421"] 20 :desc],
      :border "1px solid #00000000",
      :color "#ffffff"}},
    [:recent_messages_per_second :heatmap-2888]
    {:logic true,
     :style
     {:background-color [:heatmap ["#101421" "#bfc2be"] 20 :desc],
      :border "1px solid #00000000",
      :color "#ffffff"}}},
   :_last-run "15:27:24",
   :refresh-every 45,
   :from [[:jvm_stats :zz596]],
   :order-by [[:ts :desc]],
   :connection-id "system-db",
   :select [:*]},
  :client-stats-drag-33
  {:select
   [:ack
    :client_latency
    :client_name
    :client_subs
    :last_seen
    :last_seen_seconds
    :push
    :recent_messages_per_second
    :server_subs
    :memory
    :ts],
   :cache? false,
   :refresh-every 20,
   :order-by [[:client_name :asc]],
   :from [[:client_stats :ww254]],
   :_last-run "15:27:45",
   :style-rules
   {[:* :highlight-8717]
    {:logic [:= :client_name :*client-name-str],
     :style {:border "1px solid #cac18255"}}},
   :col-widths
   {:server_subs 111,
    :push 91,
    :client_subs 111,
    :recent_messages_per_second 251,
    :memory 111,
    :ts 151,
    :client_latency 141,
    :ack 81,
    :client_name 231}},
  :query-4704
  {:select [:test_name [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:connection_id
       :context_hash
       :data_type
       :db_catalog
       :db_schema
       :db_type
       :derived_calc
       :derived_name
       :field_name
       :field_type
       :is_sample
       :key_hash
       :run_id
       :table_name
       :table_type
       :test_name
       :test_raw_val
       :test_sql
       :test_val_float
       :test_val_integer
       :test_val_string
       :updated],
      :from [[:tests :aa558]]}
     :mm899]],
   :group-by [:test_name],
   :order-by [[:test_name :asc]],
   :_last-run "17:58:40"},
  :jvm-stats-drag-40
  {:select
   [:sql_cache_size
    :thread_count
    [:ts :ts1]
    [[:substr :ts 0 16] :ts]
    :queries_run
    :sniffs_run
    :batches
    :messages
    :recent_batches_per_second
    :recent_messages_per_second
    :recent_queries_per_second
    :internal_queries_run
    :open_flow_channels
    :sys_load
    :used_memory_mb
    :ws_peers],
   :refresh-every 45,
   :cache? false,
   :from [[:jvm_stats :kke192]],
   :order-by [[3 :desc]],
   :_last-run "15:27:23",
   :where [:>= :recent_batches_per_second 0]},
  :gen-viz-1002
  {:cache? false,
   :limit 18,
   :group-by [4],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [{:select
     [:sql_cache_size
      :thread_count
      [:ts :ts1]
      [[:substr :ts 0 16] :ts]
      :queries_run
      :sniffs_run
      :batches
      :messages
      :recent_batches_per_second
      :recent_messages_per_second
      :recent_queries_per_second
      :internal_queries_run
      :open_flow_channels
      :sys_load
      :used_memory_mb
      :ws_peers],
     :from [[:jvm_stats :kke192]],
     :order-by [[3 :desc]],
     :where [:>= :recent_batches_per_second 0]}],
   :order-by [[4 :desc]],
   :select
   [[[:round [:avg :used_memory_mb] 2] :used_memory_mb]
    [[:round [:avg :sys_load] 2] :cpu_usage]
    [[:round [:avg :recent_messages_per_second] 2] :mps]
    [[:substring :ts 1 15] :ts1]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:used_memory_mb 0})
           row
           (get rx idx {:used_memory_mb 0})
           pre-mb
           (get prev-row :used_memory_mb)
           mb
           (get row :used_memory_mb)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))},
  :status-drag-28 {:select [:*], :from [[:client_stats :aa377]]},
  :tests-drag-12
  {:select
   [:connection_id
    :context_hash
    :data_type
    :db_catalog
    :db_schema
    :db_type
    :derived_calc
    :derived_name
    :field_name
    :field_type
    :is_sample
    :key_hash
    :run_id
    :table_name
    :table_type
    :test_name
    :test_raw_val
    :test_sql
    :test_val_float
    :test_val_integer
    :test_val_string
    :updated],
   :from [[:tests :aa558]],
   :where
   [:*when
    {:test_name "total_rows", :rowcnt 77}
    [:*all= {:test_name "total_rows", :rowcnt 77} [:test_name]]],
   :_last-run "17:58:37"},
  :query-11325
  {:select [:table_name [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:attribute_name
       :attribute_value
       :connection_id
       :context_hash
       :db_catalog
       :db_schema
       :db_type
       :derived_calc
       :derived_name
       :field_name
       :key_hash
       :run_id
       :table_name
       :table_type
       :updated],
      :from [[:attributes :mm879]],
      :where
      [:*when
       {:attribute_name "is_sqlite?", :rowcnt 1618}
       [:*all= {:attribute_name "is_sqlite?", :rowcnt 1618} [:attribute_name]]],
      :order-by [[:table_name :asc]]}
     :mm340]],
   :group-by [:table_name],
   :order-by [[:table_name :asc]],
   :col-widths {:rowcnt 100, :table_name 240},
   :_last-run "17:58:42"},
  :query-291
  {:select [[[:count 1] :rowcnt]],
   :cache? false,
   :refresh-every 19,
   :from
   [[{:select
      [:connection_id
       :context_hash
       :data_type
       :db_catalog
       :db_schema
       :db_type
       :derived_calc
       :derived_name
       :field_name
       :field_type
       :is_sample
       :key_hash
       :run_id
       :table_name
       :table_type
       :test_name
       :test_raw_val
       :test_sql
       :test_val_float
       :test_val_integer
       :test_val_string
       :updated],
      :from [[:tests :aa558]],
      :where
      [:*when
       {:test_name "total_rows", :rowcnt 77}
       [:*all= {:test_name "total_rows", :rowcnt 77} [:test_name]]]}
     :ee553]],
   :_last-run "22:50:26"},
  :query-6018
  {:select [:attribute_name [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:attribute_name
       :attribute_value
       :connection_id
       :context_hash
       :db_catalog
       :db_schema
       :db_type
       :derived_calc
       :derived_name
       :field_name
       :key_hash
       :run_id
       :table_name
       :table_type
       :updated],
      :from [[:attributes :mm879]]}
     :bb504]],
   :group-by [:attribute_name],
   :order-by [[:attribute_name :asc]],
   :_last-run "17:58:41"},
  :gen-viz-1002-clone-38
  {:cache? false,
   :limit 24,
   :group-by [2],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [[{:group-by [:ts1],
      :from
      [{:select
        [:sql_cache_size
         :thread_count
         [:ts :ts1]
         [[:substr :ts 0 16] :ts]
         :queries_run
         :sniffs_run
         :internal_queries_run
         :used_memory_mb
         :ws_peers],
        :from [[:jvm_stats :kke192]],
        :order-by [[3 :desc]]}],
      :order-by [[:ts1 :asc]],
      :select [[[[:avg :used_memory_mb]] :used_memory_mb] :ts1]}
     :mm308]],
   :order-by [[2 :desc]],
   :select
   [[[:round [:avg :used_memory_mb]] :used_memory_mb]
    [[:raw "strftime('%d-%H', ts1)"] :ts1]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:used_memory_mb 0})
           row
           (get rx idx {:used_memory_mb 0})
           pre-mb
           (get prev-row :used_memory_mb)
           mb
           (get row :used_memory_mb)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))}},
 :panels
 {nil {:queries {nil {:_last-run "15:28:01"}}},
  :block-494
  {:name "select-all-jvm_stats",
   :w 18,
   :block-key ":block-4658",
   :selected-view :jvm-stats-drag-40,
   :root [30 4],
   :h 11,
   :file-path "./screens/refresh-test.edn",
   :connection-id "system",
   :queries
   {:jvm-stats-drag-40
    {:select
     [:sql_cache_size
      :thread_count
      [:ts :ts1]
      [[:substr :ts 0 16] :ts]
      :queries_run
      :sniffs_run
      :batches
      :messages
      :recent_batches_per_second
      :recent_messages_per_second
      :recent_queries_per_second
      :internal_queries_run
      :open_flow_channels
      :sys_load
      :used_memory_mb
      :ws_peers],
     :refresh-every :param/refresh-timer,
     :cache? false,
     :from [[:jvm_stats :kke192]],
     :order-by [[3 :desc]],
     :_last-run "15:27:23",
     :where [:>= :recent_batches_per_second 0]}},
   :tab "welcome to the party pal",
   :minimized? false},
  :block-3678
  {:w 48,
   :selected-view :vv,
   :name "welcome to the party pal",
   :h 31,
   :ghosted? false,
   :views {:vv [:grid "welcome to the party pal"]},
   :root [3 2],
   :tab "excellent wolf"},
  :block-2676
  {:h 4,
   :w 5,
   :root [5 5],
   :tab "orange hornet",
   :selected-view :hi,
   :name "block-2676",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-2676.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]},
   :queries {}},
  :block-1956
  {:name "block-1956",
   :w 23,
   :selected-view :hare-vw,
   :root [36 26],
   :h 6,
   :connection-id "system",
   :queries
   {:cpu-query1
    {:cache? false,
     :limit 180,
     :group-by [4],
     :_last-run "15:27:24",
     :refresh-every :param/refresh-timer,
     :from [:query/jvm-stats-drag-40],
     :order-by [[4 :desc]],
     :select
     [[[:round [:avg :used_memory_mb] 2] :used_memory_mb]
      [[:round [:avg :sys_load] 2] :cpu_usage]
      [[:round [:avg :recent_messages_per_second] 2] :mps]
      [[:substring :ts1 1 16] :ts1]],
     :post-process-fn
     (fn [x]
       (vec
         (for
           [idx
            (range (count x))
            :let
            [rx
             (vec (reverse x))
             prev-row
             (get rx (- idx 1) {:used_memory_mb 0})
             row
             (get rx idx {:used_memory_mb 0})
             pre-mb
             (get prev-row :used_memory_mb)
             mb
             (get row :used_memory_mb)
             diff
             (Math/round (- mb pre-mb))
             pos
             (cond (> diff 0) "+" (< diff 0) "" :else "")]]
           (merge
             row
             {:diff
              (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))}},
   :tab "welcome to the party pal",
   :views
   {:hare-vw
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data :cpu-query1,
       :style {:font-family :theme/base-font},
       :margin {:top 5, :bottom 20, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "0 0", :opacity 0}]
      [:>
       :Tooltip
       {:content-style
        {:background-color "#00000099",
         :font-weight 700,
         :border "1px solid transparent",
         :border-radius "4px"}}]
      [:>
       :XAxis
       {:dataKey :ts,
        :label
        {:value "10 min avgs: cpu %",
         :fill :param/theme-color1,
         :style {:font-size "15px", :font-weight 700},
         :position "middle",
         :dy 25},
        :style {:font-size "11px"}}]
      [:>
       :YAxis
       {:yAxisId "left",
        :label
        {:value "cpu usage",
         :angle -90,
         :fill :param/theme-color1,
         :style {:font-size "15px", :font-weight 700},
         :position "middle",
         :dx -25},
        :domain [0 "auto"]}]
      [:>
       :Line
       {:isAnimationActive false,
        :dataKey :cpu_usage,
        :type "monotone",
        :strokeDasharray "5 5",
        :yAxisId "left",
        :stroke-width 4,
        :stroke :param/theme-color4,
        :activeDot {:r 8}}]]]}},
  :block-4808
  {:name "client latency callout",
   :w 4,
   :block-key ":block-2505",
   :selected-view :hi,
   :root [32 17],
   :h 3,
   :file-path "./screens/blackberries3-narrow2.edn",
   :queries {},
   :tab "welcome to the party pal",
   :ghosted? false,
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color2,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :client/*client-name*>stats>client-latency]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "client latency (ms)"]]]}},
  :block-10778
  {:mad-libs-combo-hash ["-221538232" "jvm_stats_drag_40"],
   :clojure {:new-clojure (vec (for [e (range :time/second)] (str (+ e 12) "!")))},
   :name " - ts, used_memory_mb - 650",
   :w 15,
   :selected-mode {:new-clojure2 :text},
   :block-key ":block-942",
   :selected-view :reech,
   :root [0 4],
   :h 5,
   :file-path "./screens/refresh-test.edn",
   :clojure2
   {:new-clojure2
    (do
      (let [clojure-version (clojure-version)
            jvm-version (System/getProperty "java.version")]
        (println "fefefef")
        (str
          "🐇🥕 Hey there! This is Clojure version "
          clojure-version
          " on JVM  "
          jvm-version
          " 🥕🐇 "
          :time/now-seconds)))},
   :connection-id "system",
   :display {:new-clojure2 :value},
   :queries
   {:gen-viz-1002
    {:cache? false,
     :limit 18,
     :group-by [4],
     :_last-run "15:27:24",
     :refresh-every :param/refresh-timer,
     :from [:query/jvm-stats-drag-40],
     :order-by [[4 :desc]],
     :select
     [[[:round [:avg :used_memory_mb] 2] :used_memory_mb]
      [[:round [:avg :sys_load] 2] :cpu_usage]
      [[:round [:avg :recent_messages_per_second] 2] :mps]
      [[:substring :ts 1 15] :ts1]],
     :post-process-fn
     (fn [x]
       (vec
         (for
           [idx
            (range (count x))
            :let
            [rx
             (vec (reverse x))
             prev-row
             (get rx (- idx 1) {:used_memory_mb 0})
             row
             (get rx idx {:used_memory_mb 0})
             pre-mb
             (get prev-row :used_memory_mb)
             mb
             (get row :used_memory_mb)
             diff
             (Math/round (- mb pre-mb))
             pos
             (cond (> diff 0) "+" (< diff 0) "" :else "")]]
           (merge
             row
             {:diff
              (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))}},
   :tab "welcome to the party pal",
   :views
   {:reech
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data :gen-viz-1002,
       :style {:font-family :theme/base-font},
       :margin {:top 6, :bottom 20, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "0 0", :opacity 0}]
      [:>
       :Tooltip
       {:content-style
        {:background-color "#00000099",
         :font-weight 700,
         :border "1px solid transparent",
         :border-radius "4px"}}]
      [:>
       :XAxis
       {:dataKey :ts,
        :label
        {:value
         "10 min avgs: memory used/messages per second averages (last 3 hours)",
         :fill :param/theme-color1,
         :style {:font-size "15px", :font-weight 700},
         :position "middle",
         :dy 25},
        :style {:font-size "11px"}}]
      [:>
       :YAxis
       {:yAxisId "left",
        :label
        {:value "mps / cpu usage",
         :angle -90,
         :fill :param/theme-color1,
         :style {:font-size "15px", :font-weight 700},
         :position "middle",
         :dx -25},
        :domain ["auto" "auto"]}]
      [:>
       :YAxis
       {:yAxisId "right",
        :label
        {:value "memory used",
         :angle 90,
         :fill :param/theme-color2,
         :style {:font-weight 700, :font-size "15px"},
         :position "middle",
         :dx 20},
        :domain ["auto" "auto"],
        :orientation "right"}]
      [:>
       :Line
       {:isAnimationActive false,
        :dataKey :mps,
        :type "monotone",
        :yAxisId "left",
        :stroke-width 2,
        :stroke :param/theme-color1,
        :activeDot {:r 8}}]
      [:>
       :Line
       {:isAnimationActive false,
        :dataKey :cpu_usage,
        :type "monotone",
        :strokeDasharray "5 5",
        :yAxisId "left",
        :stroke-width 4,
        :stroke :param/theme-color4,
        :activeDot {:r 8}}]
      [:>
       :Bar
       {:isAnimationActive false,
        :dataKey :used_memory_mb,
        :yAxisId "right",
        :fill "#00000000",
        :stroke-width 2,
        :stroke :param/theme-color2}]]],
    :new-view
    [:box
     :child
     [:string3 :new-clojure]
     :align
     :center
     :justify
     :center
     :size
     "auto"
     :style
     {:font-size "22px"}]}},
  :block-1242
  {:h 4,
   :w 5,
   :root [17 2],
   :tab "color test",
   :selected-view :hi,
   :name "block-1242",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-1242.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     :param/theme-tetrads>0]},
   :queries {}},
  :block-8179
  {:h 9,
   :w 32,
   :connection-id "system-db",
   :name "select-all-client_stats",
   :queries
   {:client-stats-drag-33
    {:select
     [:ack
      :client_latency
      :client_name
      :client_subs
      :last_seen
      :last_seen_seconds
      :push
      :recent_messages_per_second
      :server_subs
      :memory
      :ts],
     :cache? false,
     :refresh-every 20,
     :order-by [[:client_name :asc]],
     :from [[:client_stats :ww254]],
     :_last-run "15:27:45",
     :style-rules
     {[:* :highlight-8717]
      {:logic [:= :client_name :*client-name-str],
       :style {:border "1px solid #cac18255"}}},
     :col-widths
     {:server_subs 111,
      :push 91,
      :client_subs 111,
      :recent_messages_per_second 251,
      :memory 111,
      :ts 151,
      :client_latency 141,
      :ack 81,
      :client_name 231}}},
   :root [0 17],
   :tab "welcome to the party pal",
   :z 3},
  :block-12071
  {:h 3,
   :w 5,
   :root [20 1],
   :tab "welcome to the party pal",
   :selected-view :hi,
   :name "block-12071",
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color2,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :jvm-stats-drag-40/recent_batches_per_second.0]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "recent batches-per-sec"]]]},
   :queries {}},
  :block-1816
  {:name "jessica",
   :w 21,
   :selected-view :hi,
   :root [-2 32],
   :h 4,
   :queries {},
   :tab "welcome to the party pal",
   :minimized? true,
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-1816.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :font-family "Homemade Apple",
      :padding-top "5px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color}
     :child
     "Jessica!"]}},
  :block-6684
  {:h 4,
   :w 5,
   :root [5 1],
   :tab "orange hornet",
   :selected-view :hi,
   :name "block-6684",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-6684.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]},
   :queries {}},
  :block-397
  {:h 5,
   :w 8,
   :root [5 13],
   :tab "color test",
   :selected-view :hi,
   :name "block-397",
   :views {:hi [:data-viewer [:tetrads :solver/colors-of-the-moment-8k>darkest]]},
   :queries {}},
  :block-7876
  {:name "block-2178",
   :w 27,
   :block-key ":block-2178",
   :selected-view :every-10-min-avg,
   :root [32 20],
   :h 6,
   :file-path "./screens/blackberries3-narrow2.edn",
   :queries
   {:new-query
    {:cache? false,
     :where [:= :client_name :*client-name-str],
     :limit 45,
     :group-by [2],
     :_last-run "15:27:24",
     :refresh-every :param/refresh-timer,
     :from
     [{:select
       [:client_name
        :recent_messages_per_second
        :messages_per_second
        :mem_used
        :batches
        :packets
        :ts],
       :where [:= :client_name :*client-name-str],
       :from [[:client_memory :ee183]],
       :order-by [[:mem_time :desc]]}],
     :order-by [[:ts :desc]],
     :connection-id "system-db",
     :select [[[[:avg :mem_used]] :mem_used] [[:substring :ts 1 15] :ts_hour]],
     :post-process-fn
     (fn [x]
       (vec
         (for
           [idx
            (range (count x))
            :let
            [rx
             (vec (reverse x))
             prev-row
             (get rx (- idx 1) {:mem_used 0})
             row
             (get rx idx {:mem_used 0})
             pre-mb
             (/ (get prev-row :mem_used) 1048576)
             mb
             (/ (get row :mem_used) 1048576)
             diff
             (Math/round (- mb pre-mb))
             pos
             (cond (> diff 0) "+" (< diff 0) "" :else "")]]
           (merge
             row
             {:diff
              (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))}},
   :tab "welcome to the party pal",
   :views
   {:every-10-min-avg
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :BarChart
      {:data :new-query,
       :style {:font-family :theme/base-font},
       :margin {:top 25, :right 30, :left 20, :bottom 5}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0}]
      [:>
       :Tooltip
       {:content-style
        {:background-color "#00000099",
         :font-weight 700,
         :border "1px solid transparent",
         :border-radius "4px"}}]
      [:> :XAxis {:dataKey :ts_hour}]
      [:> :YAxis {:domain ["auto" "auto"]}]
      [:>
       :Bar
       {:isAnimationActive false,
        :dataKey :mem_used,
        :stroke :param/theme-color1,
        :stroke-width 3,
        :fill "#8884d801"}
       [:>
        :LabelList
        {:dataKey :diff,
         :fill :param/theme-color1,
         :style {:font-size "18px", :font-weight 700},
         :position "top"}]]]]}},
  :block-11248
  {:w 10,
   :selected-view :vv,
   :name "orange hornet",
   :h 8,
   :ghosted? false,
   :views {:vv [:grid "orange hornet"]},
   :root [18 8],
   :tab "victorious lion"},
  :block-8356
  {:name "block-8356",
   :w 7,
   :selected-view :query-291,
   :root [37 2],
   :h 5,
   :connection-id "system-db",
   :queries
   {:query-291
    {:select [[[:count 1] :rowcnt]],
     :cache? false,
     :refresh-every 19,
     :from [[:query/tests-drag-12 :ee553]],
     :_last-run "22:50:26"}},
   :tab "reassuring sand dollar",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-8356.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}},
  :block-9727
  {:mad-libs-combo-hash ["-832307070" "jvm_stats_drag_40"],
   :name "recharts_area - thread_count, ts - 249",
   :w 15,
   :block-key ":block-539",
   :selected-view :reech,
   :root [15 4],
   :h 5,
   :file-path "./screens/refresh-test.edn",
   :connection-id "system",
   :queries
   {:gen-viz-553
    {:cache? false,
     :limit 18,
     :group-by [3],
     :_last-run "15:27:24",
     :refresh-every :param/refresh-timer,
     :from [:query/jvm-stats-drag-40],
     :order-by [[:ts :desc]],
     :select
     [[[:avg :thread_count] :thread_count]
      [[:round [:avg :ws_peers] 0] :clients]
      [[:substring :ts 1 15] :ts]],
     :post-process-fn reverse}},
   :tab "welcome to the party pal",
   :conditionals nil,
   :views
   {:reech
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data :gen-viz-553,
       :style {:font-family :theme/base-font},
       :margin {:top 5, :bottom 20, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "0 0", :opacity 0}]
      [:>
       :Tooltip
       {:content-style
        {:background-color "#00000099",
         :font-weight 700,
         :border "1px solid transparent",
         :border-radius "4px"}}]
      [:>
       :XAxis
       {:dataKey :ts,
        :label
        {:value "10 min avgs: threads/clients (last 3 hours)",
         :fill :param/theme-color1,
         :style {:font-size "15px", :font-weight 700},
         :position "middle",
         :dy 25},
        :style {:font-size "11px"}}]
      [:>
       :YAxis
       {:yAxisId "left",
        :label
        {:value "clients",
         :angle -90,
         :fill :param/theme-color1,
         :style {:font-size "15px", :font-weight 700},
         :position "middle",
         :dx -25},
        :domain ["auto" "auto"]}]
      [:>
       :YAxis
       {:yAxisId "right",
        :label
        {:value "threads",
         :angle 90,
         :fill :param/theme-color2,
         :style {:font-weight 700, :font-size "15px"},
         :position "middle",
         :dx 20},
        :domain ["auto" "auto"],
        :orientation "right"}]
      [:>
       :Line
       {:isAnimationActive false,
        :dataKey :clients,
        :type "monotone",
        :yAxisId "left",
        :stroke-width 2,
        :stroke :param/theme-color1,
        :activeDot {:r 8}}]
      [:>
       :Bar
       {:isAnimationActive false,
        :dataKey :thread_count,
        :yAxisId "right",
        :fill "#00000000",
        :stroke-width 2,
        :stroke :param/theme-color2}]]]}},
  :block-11587
  {:h 7,
   :w 32,
   :connection-id "system-db",
   :name "select-all-status",
   :queries {:status-drag-28 {:select [:*], :from [[:client_stats :aa377]]}},
   :root [0 10],
   :tab "reassuring sand dollar"},
  :block-6697
  {:h 9,
   :w 6,
   :tab "color test",
   :root [14 7],
   :name ":param/theme-split-complement",
   :views {:param-val [:data-viewer :param/theme-split-complement]},
   :queries {}},
  :block-9547
  {:h 4,
   :w 5,
   :root [0 5],
   :tab "orange hornet",
   :selected-view :hi,
   :name "block-9547",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-9547.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]},
   :queries {}},
  :block-2784
  {:h 7,
   :w 43,
   :connection-id "system-db",
   :name "select-all-status",
   :queries
   {:status-drag-0
    {:select [:*], :from [[:jvm_stats :zz596]], :_last-run "23:25:13"}},
   :root [0 17],
   :tab "reassuring sand dollar"},
  :block-981
  {:h 3,
   :w 6,
   :tab "color test",
   :root [15 17],
   :name ":param/theme-color3",
   :views
   {:param-val
    [:box
     :align
     :center
     :justify
     :center
     :padding
     "13px"
     :style
     {:font-size "45px"}
     :child
     [:string :param/theme-color3]]},
   :queries {}},
  :block-3438
  {:h 6,
   :w 36,
   :root [0 26],
   :tab "welcome to the party pal",
   :selected-view :new-query-1,
   :name "block-3438",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-3438.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]},
   :queries
   {:new-query-1
    {:cache? false,
     :limit 50,
     :style-rules
     {[:sys_load :heatmap-7696]
      {:logic true,
       :style
       {:background-color
        [:heatmap
         [:solver/colors-of-the-moment>brightest
          :solver/colors-of-the-moment>darkest]
         20
         :desc],
        :border "1px solid #00000000",
        :color "#ffffff"}},
      [:recent_messages_per_second :heatmap-2888]
      {:logic true,
       :style
       {:background-color
        [:heatmap
         [:solver/colors-of-the-moment>most-contrasting-dark
          :solver/colors-of-the-moment-8k>most-contrasting-light]
         20
         :desc],
        :border "1px solid #00000000",
        :color "#ffffff"}}},
     :_last-run "15:27:24",
     :refresh-every :param/refresh-timer,
     :from [[:jvm_stats :zz596]],
     :order-by [[:ts :desc]],
     :connection-id "system-db",
     :select [:*]}}},
  :block-10180
  {:h 3,
   :w 5,
   :views
   {:view-clone
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/_theme-color4,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:string3 :jvm-stats-drag-40/sys_load.0 "%"]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "curr cpu usage"]]]},
   :name "clone-hi8",
   :root [25 1],
   :tab "welcome to the party pal"},
  :block-10582
  {:w 47,
   :selected-view :vv,
   :name "reassuring sand dollar",
   :h 22,
   :ghosted? false,
   :views {:vv [:grid "reassuring sand dollar"]},
   :root [9 17],
   :tab "victorious lion"},
  :block-3719
  {:name "callout client msgs",
   :w 4,
   :block-key ":block-9994",
   :selected-view :cell-drop-11937,
   :root [44 17],
   :h 3,
   :file-path "./screens/blackberries3-narrow2.edn",
   :queries {},
   :tab "welcome to the party pal",
   :views
   {:cell-drop-11937
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color2,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:string :client/*client-name*>stats>recent-messages-per-second]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "messages/sec"]]]}},
  :block-1430
  {:clojure
   {:new-clojure-1
    (do
      [:box
       :align
       :center
       :justify
       :center
       :attr
       {:id ":block-45s86.:hi"}
       :style
       {:font-size "22px", :font-weight 500}
       :child
       [:pre
        {:style
         {:color :param/theme-color1,
          :background-color "#00000000",
          :border "none",
          :text-shadow "4px 4px 4px #00000088",
          :font-size "17px",
          :font-family :theme/monospaced-font}}
        (let [process (.exec (Runtime/getRuntime) "vmstat 1 1")
              reader (java.io.BufferedReader.
                       (java.io.InputStreamReader. (.getInputStream process)))
              output (StringBuilder.)]
          (loop [line (.readLine reader)]
            (when line
              (.append output line)
              (.append output "\n")
              (recur (.readLine reader))))
          (str
            output
            "------------------------[ "
            :time/now-seconds
            " ]------------------------"))]])},
   :name "block-1430",
   :w 18,
   :selected-mode {:new-clojure-2 :clover, :new-clojure-1 :clover},
   :selected-view :new-clojure-1,
   :root [30 1],
   :h 3,
   :queries {},
   :tab "welcome to the party pal",
   :views {}},
  :block-901
  {:name "clone-gen-viz-100238",
   :w 30,
   :selected-view :hi,
   :root [0 9],
   :h 8,
   :connection-id "system",
   :queries
   {:gen-viz-1002-clone-38
    {:cache? false,
     :limit 24,
     :group-by [2],
     :_last-run "15:27:24",
     :refresh-every :param/refresh-timer,
     :from
     [[{:group-by [:ts1],
        :from
        [{:select
          [:sql_cache_size
           :thread_count
           [:ts :ts1]
           [[:substr :ts 0 16] :ts]
           :queries_run
           :sniffs_run
           :internal_queries_run
           :used_memory_mb
           :ws_peers],
          :from [[:jvm_stats :kke192]],
          :order-by [[3 :desc]]}],
        :order-by [[:ts1 :asc]],
        :select [[[[:avg :used_memory_mb]] :used_memory_mb] :ts1]}
       :mm308]],
     :order-by [[2 :desc]],
     :select
     [[[:round [:avg :used_memory_mb]] :used_memory_mb]
      [[:raw "strftime('%d-%H', ts1)"] :ts1]],
     :post-process-fn
     (fn [x]
       (vec
         (for
           [idx
            (range (count x))
            :let
            [rx
             (vec (reverse x))
             prev-row
             (get rx (- idx 1) {:used_memory_mb 0})
             row
             (get rx idx {:used_memory_mb 0})
             pre-mb
             (get prev-row :used_memory_mb)
             mb
             (get row :used_memory_mb)
             diff
             (Math/round (- mb pre-mb))
             pos
             (cond (> diff 0) "+" (< diff 0) "" :else "")]]
           (merge
             row
             {:diff
              (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))}},
   :tab "welcome to the party pal",
   :views
   {:reech-copy-16
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :BarChart
      {:data :gen-viz-1002-clone-38,
       :margin {:top 5, :bottom 5, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
      [:> :Tooltip]
      [:> :XAxis {:dataKey :ts}]
      [:>
       :Bar
       {:type "monotone",
        :dataKey :used_memory_mb,
        :stroke :param/theme-color1,
        :activeDot {:r 8}}]
      [:>
       :LabelList
       {:dataKey :diff,
        :fill :param/theme-color1,
        :style {:font-size "13px", :font-weight 700},
        :position "top"}]]],
    :hi
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :BarChart
      {:data :gen-viz-1002-clone-38,
       :style {:font-family :theme/base-font},
       :margin {:top 25, :right 30, :left 20, :bottom 20}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0}]
      [:>
       :Tooltip
       {:content-style
        {:background-color "#00000099",
         :font-weight 700,
         :border "1px solid transparent",
         :border-radius "4px"}}]
      [:>
       :XAxis
       {:dataKey :ts1,
        :label
        {:value "hourly memory averages",
         :fill :param/theme-color1,
         :style {:font-size "15px", :font-weight 700},
         :position "middle",
         :dy 25}}]
      [:> :YAxis {:domain ["auto" "auto"]}]
      [:>
       :Bar
       {:isAnimationActive false,
        :dataKey :used_memory_mb,
        :stroke :param/theme-color1,
        :stroke-width 3,
        :fill "#8884d801"}
       [:>
        :LabelList
        {:dataKey :diff,
         :fill :param/theme-color1,
         :style {:font-size "18px", :font-weight 700},
         :position "top"}]]]]}},
  :block-12161
  {:name "recent q per sec",
   :w 5,
   :selected-view :hi,
   :root [20 1],
   :h 3,
   :queries {},
   :tab "welcome to the party pal",
   :minimized? true,
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color2,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :jvm-stats-drag-40/recent_queries_per_second.0]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "recent q-per-sec"]]]}},
  :block-3218
  {:h 2,
   :w 18,
   :root [30 15],
   :tab "welcome to the party pal",
   :selected-view :hi,
   :name "block-3218",
   :views
   {:hi
    [:box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "30px",
      :color :param/theme-color2,
      :font-weight 700,
      :margin-top "7px",
      :transition "all 0.6s ease-in-out"}
     :child
     [:string3 "uptime: " :server/uptime]]},
   :queries {}},
  :block-7665
  {:h 5,
   :w 8,
   :root [5 7],
   :tab "color test",
   :selected-view :hi,
   :name "block-7665",
   :views {:hi [:data-viewer [:tetrads :solver/colors-of-the-moment>brightest]]},
   :queries {}},
  :block-7259
  {:clojure
   {:new-clojure-3
    (do
      (let [clojure-version (clojure-version)
            jvm-version (System/getProperty "java.version")]
        (doseq [e (range 5)] (Thread/sleep 5000) (println "ITS A SHITSHOW! " e "!"))
        (str
          "🐇🥕 YO! Internal RVBBIT nREPL. Clojure "
          clojure-version
          " on "
          jvm-version
          " JVM tech"
          " 🥕🐇")))},
   :name "block-7259",
   :w 5,
   :selected-view :new-clojure-3,
   :root [60 1],
   :h 4,
   :display {:new-clojure-3 :value},
   :queries {},
   :tab "welcome to the party pal",
   :views
   {:hare-vw-1
    [:box
     :align
     :center
     :justify
     :center
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "It's no use going back to yesterday, because I was a different person then."]}},
  :block-2388
  {:name "block-2388",
   :w 7,
   :selected-view :query-6018,
   :root [32 10],
   :h 7,
   :connection-id "system-db",
   :queries
   {:query-6018
    {:select [:attribute_name [[:count 1] :rowcnt]],
     :from
     [[{:select
        [:attribute_name
         :attribute_value
         :connection_id
         :context_hash
         :db_catalog
         :db_schema
         :db_type
         :derived_calc
         :derived_name
         :field_name
         :key_hash
         :run_id
         :table_name
         :table_type
         :updated],
        :from [[:attributes :mm879]]}
       :bb504]],
     :group-by [:attribute_name],
     :order-by [[:attribute_name :asc]],
     :_last-run "17:58:41"}},
   :tab "reassuring sand dollar",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-2388.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}},
  :block-9347
  {:h 20,
   :w 10,
   :root [28 3],
   :tab "color test",
   :selected-view :hi,
   :name "block-9347",
   :views {:hi [:data-viewer :solver/colors-of-the-moment]},
   :queries {}},
  :block-8619
  {:h 3,
   :w 6,
   :root [5 1],
   :tab "welcome to the party pal",
   :selected-view :hi,
   :name "block-8619",
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color2,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :jvm-stats-drag-40/used_memory_mb.0]]
      [:box :style {:font-size "18px", :margin-top "-10px"} :child "server mb"]]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-11070
  {:h 3,
   :w 5,
   :root [0 1],
   :tab "welcome to the party pal",
   :selected-view :hi,
   :name "block-11070",
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color2,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :jvm-stats-drag-40/thread_count.0]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "server threads"]]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-4109
  {:name "callout client mb",
   :w 4,
   :block-key ":block-285",
   :selected-view :cell-drop-7398,
   :root [40 17],
   :h 3,
   :file-path "./screens/blackberries3-narrow2.edn",
   :queries {},
   :tab "welcome to the party pal",
   :views
   {:cell-drop-7398
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "60px",
      :color :param/theme-color1,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :client/*client-name*>stats>memory]]
      [:box
       :style
       {:font-size "18px", :margin-top "-15px"}
       :child
       "client js used (mb)"]]]}},
  :block-11754
  {:name "callout client msgps",
   :w 4,
   :block-key ":block-5659",
   :selected-view :hi,
   :root [36 17],
   :h 3,
   :file-path "./screens/blackberries3-narrow2.edn",
   :queries {},
   :tab "welcome to the party pal",
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color2,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:string :client/*client-name*>stats>messages-per-second]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "messages/sec (all)"]]]}},
  :block-8083
  {:clojure
   {:new-clojure-2
    (do
      (ns rvbbit-backend.websockets)
      (let [tt :time/minute
            cs (client-statuses)
            fs (flow-statuses)
            aw (deref rvbbit-backend.db/atoms-and-watchers)
            watchers (apply
                       concat
                       (vals
                         (into
                           {}
                           (for
                             [[k v] aw]
                             {k (vec (for [[k v] v] (get v :watch-key)))}))))]
        {:client-statuses-keys (count (keys cs)),
         :atoms-and-watchers-keys (count (keys aw)),
         :cs-keys (vec (keys cs)),
         :aw-keys (vec (keys aw)),
         :distinct-watchers (count watchers),
         :running-flows (vec (keys (filter (fn [x] (get (val x) :*running?)) fs))),
         :minute-run tt}))},
   :name "block-8083",
   :w 11,
   :selected-mode {:new-clojure-2 :data},
   :selected-view :new-clojure-2,
   :root [48 1],
   :h 19,
   :queries {},
   :tab "welcome to the party pal",
   :views {}},
  :block-2762
  {:name "block-2762",
   :w 8,
   :selected-view :query-11325,
   :root [39 10],
   :h 7,
   :connection-id "system-db",
   :queries
   {:query-11325
    {:select [:table_name [[:count 1] :rowcnt]],
     :from
     [[{:select
        [:attribute_name
         :attribute_value
         :connection_id
         :context_hash
         :db_catalog
         :db_schema
         :db_type
         :derived_calc
         :derived_name
         :field_name
         :key_hash
         :run_id
         :table_name
         :table_type
         :updated],
        :from [[:attributes :mm879]],
        :where
        [:*when
         {:attribute_name "is_sqlite?", :rowcnt 1618}
         [:*all= {:attribute_name "is_sqlite?", :rowcnt 1618} [:attribute_name]]],
        :order-by [[:table_name :asc]]}
       :mm340]],
     :group-by [:table_name],
     :order-by [[:table_name :asc]],
     :col-widths {:rowcnt 100, :table_name 240},
     :_last-run "17:58:42"}},
   :tab "reassuring sand dollar",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-2762.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}},
  :block-9142
  {:h 4,
   :w 5,
   :root [0 1],
   :tab "orange hornet",
   :selected-view :hi,
   :name "block-9142",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-9142.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]},
   :queries {}},
  :block-10067
  {:h 3,
   :w 5,
   :root [15 1],
   :tab "welcome to the party pal",
   :selected-view :hi,
   :name "block-10067",
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color1,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :jvm-stats-drag-40/recent_messages_per_second.0]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "recent msg-per-sec"]]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-6431
  {:name "block-6431",
   :w 7,
   :selected-view :query-4704,
   :root [30 2],
   :h 8,
   :connection-id "system-db",
   :queries
   {:query-4704
    {:select [:test_name [[:count 1] :rowcnt]],
     :from
     [[{:select
        [:connection_id
         :context_hash
         :data_type
         :db_catalog
         :db_schema
         :db_type
         :derived_calc
         :derived_name
         :field_name
         :field_type
         :is_sample
         :key_hash
         :run_id
         :table_name
         :table_type
         :test_name
         :test_raw_val
         :test_sql
         :test_val_float
         :test_val_integer
         :test_val_string
         :updated],
        :from [[:tests :aa558]]}
       :mm899]],
     :group-by [:test_name],
     :order-by [[:test_name :asc]],
     :_last-run "17:58:40"}},
   :tab "reassuring sand dollar",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-6431.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}},
  :block-8394
  {:h 9,
   :w 6,
   :tab "color test",
   :root [21 7],
   :name ":param/theme-tetrads",
   :views {:param-val [:data-viewer :param/theme-tetrads]},
   :queries {}},
  :block-7837
  {:h 8,
   :w 30,
   :connection-id "system-db",
   :name "select-all-tests",
   :queries
   {:tests-drag-12
    {:select
     [:connection_id
      :context_hash
      :data_type
      :db_catalog
      :db_schema
      :db_type
      :derived_calc
      :derived_name
      :field_name
      :field_type
      :is_sample
      :key_hash
      :run_id
      :table_name
      :table_type
      :test_name
      :test_raw_val
      :test_sql
      :test_val_float
      :test_val_integer
      :test_val_string
      :updated],
     :from [[:tests :aa558]],
     :where
     [:*when :query-4704/*.clicked [:*all= :query-4704/*.clicked [:test_name]]],
     :_last-run "17:58:37"}},
   :root [0 2],
   :tab "reassuring sand dollar"},
  :block-4603
  {:h 3,
   :w 4,
   :root [11 1],
   :tab "welcome to the party pal",
   :selected-view :hi,
   :name "block-4603",
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color1,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :jvm-stats-drag-40/ws_peers.0]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "live clients"]]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}}},
 :selected-block "none!",
 :theme-colors-hashmap
 {"float" "#ccc3c3",
  "boolean" "#adacc9",
  "map" "#b6bf90",
  "list" "#9c498c",
  "string" "#ffffff",
  "any" "#718a83",
  "vector" "#95b7b7",
  "keyword" "#f8f7f7",
  "rabbit-code" "#7eb1a0",
  "datetime" "#713f5b",
  "integer" "#c3baba",
  "unknown" "#52208f",
  "date" "#192d12"},
 :solver-fn nil,
 :click-param
 {:blocks-sys
  {:block_key ":*theme*",
   :block_name "(meta: this screen's theme)",
   :queries 0,
   :views 29,
   :block_data
   "{:codemirror-theme \"rvbbit-dynamic\", :editor-param-background-color \"#000000\", :pop-2 :solver/colors-of-the-moment>colors>2, :base-block-style {:text-shadow \"4px 4px 4px #00000088\"}, :vega-defaults {:view {:stroke \"transparent\"}, :axis {:domainColor \"#ffffff22\", :grid true, :font \"Lato\", :labelColor \"#ffffff88\", :titleFont \"Lato\", :titleColor \"#ffffff99\", :labelFont \"Lato\", :domain false, :gridColor \"#ffffff22\", :tickColor \"#ffffff22\", :axisFont \"Lato\"}, :legend {:labelFont \"Lato\", :legendFont \"Lato\", :labelColor \"#ffffff99\", :titleColor \"#ffffff99\", :stroke \"#ffffff99\", :titleFont \"Lato\"}, :header {:labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}, :mark {:font \"Lato\"}, :title {:font \"Lato\", :subtitleFont \"Lato\", :labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}}, :grid-selected-column-css {:background-color \"#00000088\", :filter \"brightness(200%)\"}, :base-block-color-selected \"#00030a\", :block-title-font-color \"#ffffff\", :base-block-color \"#04041e82\", :editor-rim-color [:string3 :solver/colors-of-the-moment>brightest 99], :base-block-filter-selected \"drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)\", :vega-default-color-scheme {:scheme \"pastel2\"}, :data-colors :solver/colors-of-the-moment>data-colors, :editor-grid-selected-font-color \"#000000\", :monospaced-font \"JetBrains Mono\", :editor-grid-selected-background-color \"#dc9cb0\", :nivo-defaults {:font-family \"Instagram Sans\", :labels {:text {:fill \"#ffffff\", :font-size \"16px\", :font-family \"Instagram Sans\", :font-weight 700}}, :tooltip {:container {:background \"#000\", :color \"#ffffff\", :text {:fill \"#eeeeee\"}, :fontSize \"18px\", :borderRadius \"4px\", :boxShadow \"0 1px 2px rgba(0, 0, 0, 0.55)\", :padding \"5px 9px\"}, :basic {:whiteSpace \"pre\", :display \"flex\", :alignItems \"center\"}, :tableCell {:padding \"3px 5px\"}}, :axis {:legend {:text {:fill \"#ffffff\", :font-size \"14px\", :font-family \"Instagram Sans\", :font-weight 700}}, :ticks {:line {:stroke \"#ffffff60\"}, :text {:fill \"#ffffff60\", :font-weight 700}}}, :grid {:line {:stroke \"#ffffff\", :strokeWidth 0, :strokeDasharray \"0 0\"}}}, :editor-outer-rim-color :solver/colors-of-the-moment>brightest, :grid-selected-font-color \"#000000\", :block-title-selected-font-color \"#ffffff\", :grid-selected-background-color \"#a3d3ff\", :grid-font-color \"#ffffff\", :canvas-background-css {:background-image [:string3 \"url(\" :solver/wallpaper-of-the-moment \")\"], :transition \"all 0.8s ease-in-out\", :background-size \"cover\", :background-position \"center\", :background-color \"#424f57\"}, :editor-font-color \"#ffffff\", :base-font \"Poppins\", :block-tab-selected-font-color \"#c9d1ff\", :editor-background-color \"#000006\", :editor-grid-font-color \"#ffffff\", :pop-1 :solver/colors-of-the-moment>colors>1}",
   :view_names
   ":codemirror-theme :editor-param-background-color :pop-2 :base-block-style :vega-defaults :grid-selected-column-css :base-block-color-selected :block-title-font-color :base-block-color :editor-rim-color :base-block-filter-selected :vega-default-color-scheme :data-colors :editor-grid-selected-font-color :monospaced-font :editor-grid-selected-background-color :nivo-defaults :editor-outer-rim-color :grid-selected-font-color :block-title-selected-font-color :grid-selected-background-color :grid-font-color :canvas-background-css :editor-font-color :base-font :block-tab-selected-font-color :editor-background-color :editor-grid-font-color :pop-1",
   :query_names ""},
  :db-conn-drag-13.* {:db_conn [":honey-format"]},
  :tables-sys
  {:db_schema "none",
   :db_catalog nil,
   :connection_id "system-db",
   :schema_cat nil,
   :table_name "attributes",
   :fields 16},
  :new-query-1
  {:queries_run 75638,
   :recent_messages_per_second 31.59,
   :uptime_seconds 3750,
   :queries_per_second 23,
   :sql_cache_size 19,
   :ts "2024-05-21 20:18:36",
   :subscriptions 167,
   :messages_per_second 710.32,
   :messages 2663696,
   :sniffs_run 7593,
   :sys_load 9.41,
   :unix_ms 1716337116868,
   :used_memory_mb 6283,
   :styler_heatmap_7696 1,
   :recent_queries_run 26,
   :thread_count 231,
   :internal_queries_run 10856,
   :open_flow_channels 11,
   :ws_peers 11,
   :recent_messages 2663222,
   :recent_queries_per_second 1.73,
   :seconds_since_last_update 15},
  :error-str-drag-13.* {},
  :query-4704 {:test_name "total_rows", :rowcnt 77},
  :jvm-stats-drag-40
  {:ts1 "2024-07-09 23:59:14",
   :queries_run 9,
   :recent_messages_per_second -707,
   :sql_cache_size 0,
   :ts "2024-07-09 23:5",
   :messages 715,
   :sniffs_run 1,
   :sys_load 2.68,
   :recent_batches_per_second -47,
   :batches 47,
   :used_memory_mb 2109,
   :thread_count 351,
   :internal_queries_run 0,
   :open_flow_channels 11,
   :ws_peers 10,
   :recent_queries_per_second -9},
  :files-sys
  {:file_path "./screens/alarm-clock2.edn",
   :screen_name "alarm-clock2",
   :blocks 29,
   :queries 11,
   :ts "2024-06-06 10:18:48"},
  :fields-drag-16.* {:table_name ["db_conn_drag_13" "error_str_drag_13"]},
  :param
  {:_theme-color1 :solver/colors-of-the-moment>brightest,
   :theme-color3 :param/theme-tetrads>2,
   :theme-color1 :param/theme-tetrads>0,
   :refresh-timer 45,
   :_theme-color2 :solver/colors-of-the-moment>colors>0,
   :theme-color2 :param/theme-tetrads>1,
   :theme-dark :solver/colors-of-the-moment>darkest,
   :theme-split-complement
   [:split-complements :solver/colors-of-the-moment>dominant],
   :selected-view-data
   {:cache? false,
    :where [:= :client_name :*client-name-str],
    :limit 26,
    :group-by [2],
    :_last-run "15:27:24",
    :refresh-every :param/refresh-timer,
    :from
    [{:select
      [:client_name
       :recent_messages_per_second
       :messages_per_second
       :mem_used
       :batches
       :packets
       :ts],
      :where [:= :client_name :*client-name-str],
      :from [[:client_memory :ee183]],
      :order-by [[:mem_time :desc]]}],
    :order-by [[:ts :desc]],
    :connection-id "system-db",
    :select [[[[:avg :mem_used]] :mem_used] [[:substring :ts 1 15] :ts_hour]],
    :post-process-fn
    (fn [x]
      (vec
        (for
          [idx
           (range (count x))
           :let
           [rx
            (vec (reverse x))
            prev-row
            (get rx (- idx 1) {:mem_used 0})
            row
            (get rx idx {:mem_used 0})
            pre-mb
            (/ (get prev-row :mem_used) 1048576)
            mb
            (/ (get row :mem_used) 1048576)
            diff
            (Math/round (- mb pre-mb))
            pos
            (cond (> diff 0) "+" (< diff 0) "" :else "")]]
          (merge
            row
            {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))},
   :tt :solver/colors-of-the-moment>data-colors,
   :selected-view [:queries :new-query],
   :theme-color4 :param/theme-tetrads>3,
   :_theme-color4 :solver/colors-of-the-moment>colors>1,
   :theme-tetrads [:tetrads :solver/colors-of-the-moment>brightest],
   :_theme-color3 :solver/colors-of-the-moment>dominant,
   :selected-block :block-7876},
  :theme
  {:codemirror-theme "rvbbit-dynamic",
   :editor-param-background-color "#000000",
   :pop-2 :solver/colors-of-the-moment>colors>2,
   :base-block-style
   {:text-shadow "4px 4px 4px #00000088",
    :border-radius [:sticky-border-radius "12px"],
    :filter "brightness(120%)",
    :backdrop-filter "brightness(35%)"},
   :vega-defaults
   {:view {:stroke "transparent"},
    :axis
    {:domainColor "#ffffff22",
     :grid true,
     :font "Lato",
     :labelColor "#ffffff88",
     :titleFont "Lato",
     :titleColor "#ffffff99",
     :labelFont "Lato",
     :domain false,
     :gridColor "#ffffff22",
     :tickColor "#ffffff22",
     :axisFont "Lato"},
    :legend
    {:labelFont "Lato",
     :legendFont "Lato",
     :labelColor "#ffffff99",
     :titleColor "#ffffff99",
     :stroke "#ffffff99",
     :titleFont "Lato"},
    :header {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"},
    :mark {:font "Lato"},
    :title
    {:font "Lato",
     :subtitleFont "Lato",
     :labelFont "Lato",
     :titleFont "Lato",
     :titleColor "#ffffff99"}},
   :grid-selected-column-css
   {:background-color "#00000088", :filter "brightness(200%)"},
   :base-block-color-selected "#00030a",
   :block-title-font-color "#ffffff",
   :base-block-color [:string3 :param/theme-dark 82],
   :editor-rim-color [:string3 :solver/colors-of-the-moment>second-brightest 99],
   :base-block-filter-selected
   "drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)",
   :vega-default-color-scheme {:scheme "pastel2"},
   :data-colors :solver/colors-of-the-moment>data-colors,
   :editor-grid-selected-font-color "#000000",
   :monospaced-font "JetBrains Mono",
   :editor-grid-selected-background-color "#dc9cb0",
   :nivo-defaults
   {:font-family "Instagram Sans",
    :labels
    {:text
     {:fill "#ffffff",
      :font-size "16px",
      :font-family "Instagram Sans",
      :font-weight 700}},
    :tooltip
    {:container
     {:background "#000",
      :color "#ffffff",
      :text {:fill "#eeeeee"},
      :fontSize "18px",
      :borderRadius "4px",
      :boxShadow "0 1px 2px rgba(0, 0, 0, 0.55)",
      :padding "5px 9px"},
     :basic {:whiteSpace "pre", :display "flex", :alignItems "center"},
     :tableCell {:padding "3px 5px"}},
    :axis
    {:legend
     {:text
      {:fill "#ffffff",
       :font-size "14px",
       :font-family "Instagram Sans",
       :font-weight 700}},
     :ticks
     {:line {:stroke "#ffffff60"}, :text {:fill "#ffffff60", :font-weight 700}}},
    :grid {:line {:stroke "#ffffff", :strokeWidth 0, :strokeDasharray "0 0"}}},
   :editor-outer-rim-color :solver/colors-of-the-moment>second-brightest,
   :grid-selected-font-color "#000000",
   :block-title-selected-font-color "#ffffff",
   :grid-selected-background-color "#a3d3ff",
   :grid-font-color "#ffffff",
   :canvas-background-css
   {:background-image [:string3 "url(" :solver/wallpaper-of-the-moment ")"],
    :transition "all 0.8s ease-in-out",
    :background-size "cover",
    :background-blend-mode "hard-light",
    :background-position "center",
    :background-color "#424f57"},
   :editor-font-color "#ffffff",
   :base-font "Poppins",
   :block-tab-selected-font-color "#c9d1ff",
   :editor-background-color "#000006",
   :editor-grid-font-color "#ffffff",
   :pop-1 :solver/colors-of-the-moment>colors>1},
  :query-11325 {:table_name "nypd_arrest_data_drag_16", :rowcnt 20},
  :connections-sys {:database_name "*csv-import-db*", :connection_id "imported"},
  :query-6018 {:attribute_name "is_sqlite?", :rowcnt 1618},
  :sys {:selected-tab "welcome to the party pal", :selected-tab-idx 0}},
 :selected-flow "live-scratch-flow"}