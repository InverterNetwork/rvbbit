{:orders {:reco-counts [:table_name :cnt], :flows-sys [:flow_id :file_path :last_modified], :flow-fn-categories-sys [:category], :flow-fn-all-sys [:name], :flow-fn-sys [:name :full_map :description :inputs :icon :input_types :output_types :category], :fflows-sys [:category :description :name :file_path :full_map :icon], :fflowparts-sys [:category :description :name :file_path :full_map :icon]}, :reco-preview nil, :flow? true, :sql-source {}, :selected-flow-block nil, :audio-playing? false, :meta {:flow-fn-sys {:fields {:name {:data-type "string", :distinct 34, :group-by? true, :commons {":=" 1, ":>=" 1, ":write-file" 1}, :cardinality 100}, :full_map {:data-type "string", :distinct 34, :group-by? true, :commons {"{:description \"Clojure add function.\", :fn (fn [& args] (apply + args)), :inputs [:args], :icon \"zmdi-plus\", :types {:args [:integer :float], :out [:integer :float]}}" 1, "{:file-path \"./flows/a-random-wow.edn\", :icon \"zmdi-pizza\", :description \"A random Owen Wilson quote from the Wedding Crashers movie.\"}" 1, "{:description \"Clojure greater-than-or-equal function.\", :fn >, :inputs [:value1 :value2], :icon \"zmdi-chevron-right\", :types {:value1 [:integer :float], :value2 [:integer :float], :out :boolean}}" 1}, :cardinality 100}, :description {:data-type "string", :distinct 31, :group-by? true, :commons {"Clojure add function." 2, "Basic HTTP call primitive" 2, "Clojure subtract function." 2}, :cardinality 91}, :inputs {:data-type "string", :distinct 19, :group-by? true, :commons {"[:value1 :value2]" 7, "[:value]" 6, "[:destination :content :w :h :duration]" 3}, :cardinality 55}, :icon {:data-type "string", :distinct 19, :group-by? true, :commons {"zmdi-pizza" 4, "zmdi-file-text" 3, "zmdi-alert-polygon" 3}, :cardinality 55}, :input_types {:data-type "string", :distinct 16, :group-by? true, :commons {"[[:integer :float] [:integer :float]]" 6, "[:string]" 5, "[:any]" 3}, :cardinality 47}, :output_types {:data-type "string", :distinct 8, :group-by? true, :commons {":boolean" 11, ":any" 10, "[:integer :float]" 4}, :cardinality 23}, :category {:data-type "string", :distinct 3, :group-by? true, :commons {":clojure-base" 17, ":rabbit-base" 16, ":owen-wilson" 1}, :cardinality 8}}, :rowcount 34}, :fflows-sys {:fields {:category {:data-type "string", :distinct 1, :group-by? true, :commons {":flow" 68}, :cardinality 1}, :description {:data-type "string", :distinct 1, :group-by? true, :commons {"" 68}, :cardinality 1}, :name {:data-type "string", :distinct 66, :group-by? true, :commons {"clam-flow-851" 3, "map-pull-test2" 1, "callie-3" 1}, :cardinality 97}, :file_path {:data-type "string", :distinct 68, :group-by? true, :commons {"./flows/stitches-math.edn" 1, "./flows/hey-rabbit-pathfinder.edn" 1, "./flows/dalle3-create-image-newengland-old.edn" 1}, :cardinality 100}, :full_map {:data-type "string", :distinct 67, :group-by? true, :commons {"{:flowmaps {:open-input {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :user-input \"feed me, seymour!!\"}, :z 0, :ports {:out {:out :string}}, :x 1169.1345454545453, :y 1210.6763636363637}}, :flow-id \"clam-flow-851\", :flowmaps-connections [[:open-input :done]]}" 2, "{:flowmaps {:kick-1 {:w 200, :h 100, :x 3449.707608604431, :y 1367.7343490600585, :z 0, :data {:flow-item {:description \"Push items to the client UI.\", :category \":rabbit-base\", :fn (fn [destination name sub-task & args] (rvbbit-backend.websockets/kick destination name sub-task args)), :name \":kick\", :type :kick, :icon \"images/pink-rabbit-head.png\", :defaults {:destination :client-name, :sub-task :flow-id, :name :flow-id}, :types {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :out :any}, :input_types \"[[:keyword :vector :list :set] :string [:string :keyword]]\", :style {:color \"#fc0fc0\"}, :selected-style {:color \"#fc0fc0\"}, :inputs [:destination :name :sub-task :value-3 :value-4], :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Push items to the client UI.\\\", :fn (fn [destination name sub-task & args] (rvbbit-backend.websockets/kick destination name sub-task args)), :type :kick, :icon \\\"images/pink-rabbit-head.png\\\", :defaults {:destination :client-name, :sub-task :flow-id, :name :flow-id}, :types {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :out :any}, :style {:color \\\"#fc0fc0\\\"}, :selected-style {:color \\\"#fc0fc0\\\"}, :inputs [:destination :name :sub-task], :expandable? true, :required [:destination :name :sub-task]}\", :required [:destination :name :sub-task]}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [357.3567810058594 157.34896850585938], :h 6, :connection-id nil, :queries {:name-drag-40 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :nn284]], :where [:= :name \":kick\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":kick\", :param-field :name, :source-panel-key :flow-fn-list*, :type :kick, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 6}}, :icon \"images/pink-rabbit-head.png\", :ports {:in {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :value-3 :any, :value-4 :any}, :out {:error :string, :* {:error \"java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long\"}}}}, :open-input-1 {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"feed me, seymour!\"}, :z 0, :ports {:in {}, :out {:out :string}}, :x 2736.8722753576326, :y 1370.837915698902}, :open-input-3 {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input :base}, :z 0, :ports {:out {:out :keyword}}, :x 2764.800122707993, :y 1561.5292232684237}, :kick-2 {:w 200, :h 100, :x 3412.0444202088465, :y 1642.0587967722038, :z 0, :data {:flow-item {:description \"Push items to the client UI.\", :category \":rabbit-base\", :fn (fn [destination name sub-task & args] (rvbbit-backend.websockets/kick destination name sub-task args)), :name \":kick\", :type :kick, :icon \"images/pink-rabbit-head.png\", :defaults {:destination :client-name, :sub-task :flow-id, :name :flow-id}, :types {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :out :any}, :input_types \"[[:keyword :vector :list :set] :string [:string :keyword]]\", :style {:color \"#fc0fc0\"}, :selected-style {:color \"#fc0fc0\"}, :inputs [:destination :name :sub-task :value-3 :value-4 :value-5 :value-6], :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Push items to the client UI.\\\", :fn (fn [destination name sub-task & args] (rvbbit-backend.websockets/kick destination name sub-task args)), :type :kick, :icon \\\"images/pink-rabbit-head.png\\\", :defaults {:destination :client-name, :sub-task :flow-id, :name :flow-id}, :types {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :out :any}, :style {:color \\\"#fc0fc0\\\"}, :selected-style {:color \\\"#fc0fc0\\\"}, :inputs [:destination :name :sub-task], :expandable? true, :required [:destination :name :sub-task]}\", :required [:destination :name :sub-task]}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [1096.4557304382324 275.4192810058594], :h 6, :connection-id nil, :queries {:name-drag-19 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :tt488]], :where [:= :name \":kick\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":kick\", :param-field :name, :source-panel-key :flow-fn-list*, :type :kick, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 6}}, :icon \"images/pink-rabbit-head.png\", :ports {:in {:destination [:keyword :vector :list :set], :name :string, :sub-task [:string :keyword], :value-3 :any, :value-4 :any, :value-5 :any, :value-6 :any}, :out {:error :string, :* {:error \"java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long\"}}}}, :open-input-5 {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"nope!\"}, :z 0, :ports {:out {:out :string}}, :x 2720.677470934069, :y 1741.4885174725507}, :open-input {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"kick-test\"}, :z 0, :ports {:out {:out :string}}, :x 3004.6165799724517, :y 1592.9840098822297}, :open-input-4 {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input [:v-box :size \"auto\" :width \"490px\" :style {:font-size \"13px\", :opacity 0.33} :children [[:h-box :size \"auto\" :justify :between :children [[:box :child \":mean\"] [:box :child \"3853.75\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":standard-deviation\"] [:box :child \"1099.883942741233\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":sample-size\"] [:box :child \"4\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":fields\"] [:box :child \"[:YEAR]\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":calc-used\"] [:box :child \"[:percentiles [0.01 0.99]]\" :style {:font-weight 400}]]]]], :view-output? false, :width 350}, :z 0, :ports {:out {:idx7 :keyword, :idx5 :keyword, :* [:v-box :size \"auto\" :width \"490px\" :style {:font-size \"13px\", :opacity 0.33} :children [[:h-box :size \"auto\" :justify :between :children [[:box :child \":mean\"] [:box :child \"3853.75\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":standard-deviation\"] [:box :child \"1099.883942741233\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":sample-size\"] [:box :child \"4\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":fields\"] [:box :child \"[:YEAR]\" :style {:font-weight 400}]]] [:h-box :size \"auto\" :justify :between :children [[:box :child \":calc-used\"] [:box :child \"[:percentiles [0.01 0.99]]\" :style {:font-weight 400}]]]]], :idx2 :string, :idx4 :string, :idx1 :keyword, :idx6 :map, :idx3 :keyword, :idx8 :vector, :idx0 :keyword}}, :x 3020.2006378998626, :y 1715.8480772276178}, :open-input-2 {:w 200, :h 60, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input :ufo-sightings-drag-44}, :z 0, :ports {:out {:out :keyword}}, :x 2759.2156427639634, :y 1475.5767468808303}}, :flow-id \"kick-test-1-3-24\", :flowmaps-connections [[:open-input-1 :kick-1/value-3] [:open-input :kick-1/name] [:kick-1 :done] [:open-input-3 :kick-1/sub-task] [:open-input-2 :kick-2/sub-task] [:open-input-4 :kick-2/value-3] [:open-input-5 :kick-2/value-4] [:open-input-1 :kick-2/value-5]]}" 1, "{:flowmaps {:image-path {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \" /home/ryanr/viz-yard/resources/public/images/shannon45.png\"}, :z 0, :ports {:out {:out :string}}, :x 948.9116738809121, :y 1074.148015202703}, :shell-command-1 {:w 200, :h 100, :x 1758.4411167689732, :y 1117.7292503720237, :z 0, :data {:flow-item {:description \"Execute shell command. WARNING: only use if you know what you're doing / have controlled inputs\", :category \":rabbit-base\", :fn (fn [command] (rvbbit-backend.websockets/run-shell-command command)), :name \":shell-command\", :icon \"zmdi-washing-machine\", :defaults {:command \"ls -la\"}, :types {:command :string, :out :any}, :input_types \"[:string]\", :style {:color \"#ffdd3c\"}, :selected-style {:color \"#ffdd3c\"}, :inputs \"[:command]\", :output_types \":any\", :full_map \"{:description \\\"Execute shell command. WARNING: only use if you know what you're doing / have controlled inputs\\\", :fn (fn [command] (rvbbit-backend.websockets/run-shell-command command)), :icon \\\"zmdi-washing-machine\\\", :defaults {:command \\\"ls -la\\\"}, :types {:command :string, :out :any}, :style {:color \\\"#ffdd3c\\\"}, :selected-style {:color \\\"#ffdd3c\\\"}, :inputs [:command], :required [:command]}\", :required [:command]}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [539.1770935058594 176.171875], :h 6, :connection-id nil, :queries {:name-drag-42 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :cc59]], :where [:= :name \":shell-command\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":shell-command\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 6}}, :icon \"zmdi-washing-machine\", :ports {:in {:command :string}, :out {:output :vector, :exception :vector, :seconds :vector, :command :string, :* :map}}}, :clojure-string-join-1 {:w 200, :h 100, :x 1348.4940418061756, :y 1136.4640299479165, :z 0, :data {:flow-item {:description \"Clojure.string's join function.\", :category \":clojure-base\", :fn (fn [delimiter & args] (clojure.string/join delimiter args)), :name \":clojure-string-join\", :icon \"zmdi-group\", :defaults {:delimiter \" \"}, :types {:delimiter :string, :out :string}, :input_types \"[:string]\", :inputs \"[:delimiter]\", :output_types \":string\", :expandable? true, :full_map \"{:description \\\"Clojure.string's join function.\\\", :fn (fn [delimiter & args] (clojure.string/join delimiter args)), :inputs [:delimiter], :required [:delimiter], :defaults {:delimiter \\\" \\\"}, :expandable? true, :icon \\\"zmdi-group\\\", :types {:delimiter :string, :out :string}}\", :required [:delimiter]}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [540.1770935058594 279.171875], :h 6, :connection-id nil, :queries {:name-drag-12 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ww526]], :where [:= :name \":clojure-string-join\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":clojure-string-join\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 15}}, :icon \"zmdi-group\", :ports {:in {:delimiter :string, :value-1 :any, :value-2 :any}, :out {:out :string}}}, :shell-command-in {:w 200, :h 100, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input \"cd /home/ryanr/color-thief-project ; node ./colorThief.js\"}, :z 0, :ports {:out {:out :string}}, :x 960.0851863779922, :y 1224.4579849567817}, :join-output-as-string {:y 1158.848120777027, :fn (fn [x] x), :w 200, :raw-fn (fn [x] (clojure.string/join \" \" x)), :right-click? true, :icon \"zmdi-functions\", :z 0, :ports {:in {:value :any}, :out {:out :any}}, :h 100, :x 2212.3248878272807, :data {:flow-item {:description \"Write you own Clojure function! Godspeed!\", :category \":rabbit-base\", :fn (fn [x] x), :name \":open-fn\", :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :input_types \"[:any]\", :inputs \"[:value]\", :output_types \":any\", :expandable? true, :full_map \"{:description \\\"Write you own Clojure function! Godspeed!\\\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \\\"zmdi-functions\\\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :h 6, :connection-id nil, :queries {:name-drag-25 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :ii11]], :where [:= :name \":open-fn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":open-fn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :open-fn, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 5}}}, :json-to-edn {:w 200, :h 100, :x 2685.7088668823244, :y 1151.33984375, :z 0, :data {:flow-item {:description \"Convert a JSON string to Clojure EDN\", :category \":rabbit-base\", :fn (fn [json-string] (rvbbit-backend.util/json-to-edn json-string)), :name \":json-to-edn\", :icon \"zmdi-file-text\", :types {:json-string :string, :out :any}, :input_types \"[:string]\", :inputs \"[:json-string]\", :output_types \":any\", :full_map \"{:description \\\"Convert a JSON string to Clojure EDN\\\", :fn (fn [json-string] (rvbbit-backend.util/json-to-edn json-string)), :inputs [:json-string], :icon \\\"zmdi-file-text\\\", :types {:json-string :string, :out :any}}\"}, :name \"drag-from-\", :w 5, :source-panel :flow-fn-list*, :root [1297.1770935058594 207.171875], :h 6, :connection-id nil, :queries {:name-drag-41 {:select [:name :full_map :description :inputs :icon :input_types :output_types :category], :from [[:query/flow-fn-sys :uu284]], :where [:= :name \":json-to-edn\"]}}, :drag-meta {:data-type \"string\", :source-query :flow-fn-sys, :param-full \":json-to-edn\", :param-field :name, :source-panel-key :flow-fn-list*, :type :where, :param-table :flow-fn-sys, :source-table :query/flow-fn-sys, :connection-id nil, :target :name, :row-num 7}}, :icon \"zmdi-file-text\", :ports {:in {:json-string :string}, :out {:dominantColor :string, :colorPalette :vector, :* :map}}}}, :flow-id \"node-color-thief-js\", :flowmaps-connections [[:shell-command-in :clojure-string-join-1/value-1] [:image-path :clojure-string-join-1/value-2] [:clojure-string-join-1 :shell-command-1/command] [:shell-command-1/output :join-output-as-string/value] [:join-output-as-string :json-to-edn/json-string] [:json-to-edn :done]]}" 1}, :cardinality 98}, :icon {:data-type "string", :distinct 1, :group-by? true, :commons {"zmdi-developer-board" 68}, :cardinality 1}}, :rowcount 68}, :flows-sys {:fields {:flow_id {:data-type "string", :distinct 66, :group-by? true, :commons {"clam-flow-851" 3, "map-pull-test2" 1, "callie-3" 1}, :cardinality 97}, :file_path {:data-type "string", :distinct 68, :group-by? true, :commons {"./flows/stitches-math.edn" 1, "./flows/hey-rabbit-pathfinder.edn" 1, "./flows/dalle3-create-image-newengland-old.edn" 1}, :cardinality 100}, :last_modified {:data-type "string", :distinct 68, :group-by? true, :commons {"2024-02-22 12:14:14" 1, "2023-12-31 20:10:21" 1, "2024-01-24 13:20:30" 1}, :cardinality 100}}, :rowcount 68}, :fflowparts-sys {:fields {:category {:data-type "string", :distinct 3, :group-by? true, :commons {":clojure-base" 17, ":rabbit-base" 16, ":owen-wilson" 1}, :cardinality 8}, :description {:data-type "string", :distinct 31, :group-by? true, :commons {"Clojure add function." 2, "Basic HTTP call primitive" 2, "Clojure subtract function." 2}, :cardinality 91}, :name {:data-type "string", :distinct 34, :group-by? true, :commons {":=" 1, ":>=" 1, ":write-file" 1}, :cardinality 100}, :file_path {:data-type "string", :distinct 3, :group-by? true, :commons {"" 32, "./flows/a-random-wow.edn" 1, "./flows/node-color-thief-js.edn" 1}, :cardinality 8}, :full_map {:data-type "string", :distinct 34, :group-by? true, :commons {"{:description \"Clojure add function.\", :fn (fn [& args] (apply + args)), :inputs [:args], :icon \"zmdi-plus\", :types {:args [:integer :float], :out [:integer :float]}}" 1, "{:file-path \"./flows/a-random-wow.edn\", :icon \"zmdi-pizza\", :description \"A random Owen Wilson quote from the Wedding Crashers movie.\"}" 1, "{:description \"Clojure greater-than-or-equal function.\", :fn >, :inputs [:value1 :value2], :icon \"zmdi-chevron-right\", :types {:value1 [:integer :float], :value2 [:integer :float], :out :boolean}}" 1}, :cardinality 100}, :icon {:data-type "string", :distinct 19, :group-by? true, :commons {"zmdi-pizza" 4, "zmdi-file-text" 3, "zmdi-alert-polygon" 3}, :cardinality 55}}, :rowcount 34}, :rowcnt-drag-2 {:fields {:rowcnt_sum {:data-type "integer", :distinct 1, :group-by? false, :commons {80332 1}, :cardinality 100}}, :rowcount 1}, :flow-fn-categories-sys {:fields {:category {:data-type "string", :distinct 3, :group-by? true, :commons {":rabbit-base" 1, ":owen-wilson" 1, ":clojure-base" 1}, :cardinality 100}}, :rowcount 3}, :ufo-sightings-drag-9 {:fields {:duration_seconds_int {:data-type "integer", :distinct 46, :group-by? true, :commons {300 55, 60 45, 120 41}, :cardinality 9}, :comments {:data-type "string", :distinct 500, :group-by? true, :commons {"18 glowing UFOs seen over Phoenix  AZ tonight&#44 10/12/12 8:45PM" 1, "amber fireball descending&#44splits into 3 objects&#44stops&#44they hover above ground with erratic movements" 1, "Slow moving bright orange light." 1}, :cardinality 100}, :city {:data-type "string", :distinct 423, :group-by? true, :commons {"cincinnati" 5, "san diego" 5, "austin" 4}, :cardinality 84}, :date_posted {:data-type "string", :distinct 115, :group-by? true, :commons {"2013-10-14" 38, "2012-10-30" 31, "2008-10-31" 25}, :cardinality 23}, :longitude {:data-type "float", :distinct 433, :group-by? true, :commons {-122.3308333 6, -84.4569444 5, -117.1563889 5}, :cardinality 86}, :state {:data-type "string", :distinct 53, :group-by? true, :commons {"ca" 51, "ny" 35, nil 30}, :cardinality 10}, :duration_seconds {:data-type "string", :distinct 46, :group-by? true, :commons {"300" 55, "60" 45, "120" 41}, :cardinality 9}, :duration_hours {:data-type "string", :distinct 225, :group-by? true, :commons {"1 minute" 26, "5 minutes" 24, "30 seconds" 22}, :cardinality 44}, :id {:data-type "integer", :distinct 500, :group-by? true, :commons {84 1, 390 1, 49 1}, :cardinality 100}, :shape {:data-type "string", :distinct 21, :group-by? true, :commons {"light" 104, "circle" 50, "triangle" 46}, :cardinality 4}, :datetime {:data-type "string", :distinct 449, :group-by? true, :commons {"2008-10-10 20:00:00.000000" 4, "1999-10-11 20:15:00.000000" 4, "2007-10-10 22:00:00.000000" 4}, :cardinality 89}, :latitude {:data-type "string", :distinct 430, :group-by? true, :commons {"47.6063889" 6, "39.1619444" 5, "32.7152778" 5}, :cardinality 86}, :country {:data-type "string", :distinct 5, :group-by? true, :commons {"us" 411, nil 55, "ca" 17}, :cardinality 0}}, :rowcount 500}, :duration-hours-drag-43 {:fields {:duration_hours {:data-type "string", :distinct 500, :group-by? true, :commons {"30 min." 1, "3 days" 1, "5-7 min" 1}, :cardinality 100}, :rowcnt {:data-type "integer", :distinct 162, :group-by? false, :commons {12 29, 13 23, 14 22}, :cardinality 32}}, :rowcount 500}, :city-drag-26 {:fields {:city {:data-type "string", :distinct 500, :group-by? true, :commons {"ottawa (canada)" 1, "burlington (canada)" 1, "cary" 1}, :cardinality 100}, :rowcnt {:data-type "integer", :distinct 118, :group-by? false, :commons {27 35, 26 24, 29 23}, :cardinality 23}}, :rowcount 500}, :reco-counts {:fields {}, :rowcount 0}, :state-drag-3 {:fields {:state {:data-type "string", :distinct 68, :group-by? true, :commons {"nd" 1, "az" 1, "in" 1}, :cardinality 100}, :rowcnt {:data-type "integer", :distinct 68, :group-by? false, :commons {183 1, 968 1, 633 1}, :cardinality 100}}, :rowcount 68}, :shape-drag-7 {:fields {:shape {:data-type "string", :distinct 30, :group-by? true, :commons {"formation" 1, "cone" 1, "rectangle" 1}, :cardinality 100}, :rowcnt {:data-type "integer", :distinct 25, :group-by? false, :commons {1 5, 2 2, 1283 1}, :cardinality 83}}, :rowcount 30}, :flow-fn-all-sys {:fields {:name {:data-type "string", :distinct 34, :group-by? true, :commons {":=" 1, ":>=" 1, ":write-file" 1}, :cardinality 100}}, :rowcount 34}}, :default-col-widths {:flow-list* {:flows-sys 187}}, :runstream-drops nil, :zoom-start [-2412.29 -1871.27 1.7], :data-hash 921418806, :tabs ["through the rabbit hole and out the other side" "sapphire ape" "fat zebra"], :selected-cols nil, :server {:settings {:harvest-on-boot? true, :default "./screens/looking-glass-redux.edn", :eleven-labs-api-key nil, :kits {:buffy {:author {:name "Ryan Robitaille", :email "ryan.robitaille@gmail.com", :x "@ryrobes", :site "https://ryrob.es/"}, :kit-name :buffy, :package-name :grab-bag, :fn (rvbbit-backend.assistants/buffy :query-name), :name "Ask Buffy!", :icon "zmdi-cocktail", :run-on :queries, :description "What does Buffy think about this data? Who knows!"}, :outliers {:description "A basic multivariate outlier detection runstream. Highlight outliers in various dimensional groupings as a launch pad for further exploration.", :image-url "images/outliers-image.png", :fn (rabbit-kit-outliers.core/get-outliers :query-name :panel-name :query), :name "Outliers", :icon "zmdi-functions", :author {:name "Ryan Robitaille", :email "ryan.robitaille@gmail.com", :x "@ryrobes", :site "https://ryrob.es/"}, :run-on :queries, :repl {:host "127.0.0.1", :port 42999}, :kit-name :outliers, :package-name :query-basics-1}, :forecast {:description "WIP: basic timeseries forecasting based on previous values", :fn (rabbit-kit-outliers.core/get-forecast :query-name :panel-name :query), :name "Forecasting", :icon "zmdi-brightness-7", :author {:name "Ryan Robitaille", :email "ryan.robitaille@gmail.com", :x "@ryrobes", :site "https://ryrob.es/"}, :run-on :queries, :repl {:host "127.0.0.1", :port 42999}, :kit-name :forecast, :package-name :query-basics-1}}, :graphite-host "127.0.0.1", :openapi-org-id nil, :debug-level 1, :screens ["GGGeat-ochre-mole-exiled-from-abyssal-plain" "SSSSSSuccessful-oval-sea-urchin-of-mountain-range" "SSuccessful-oval-sea-urchin-of-mountain-range" "aaa-run-amok" "aaaaah-esday-the-day" "aaaaah-wednesday-the-day" "aaaah-wednesday-the-day" "asdasdasdasd" "autumn-theme" "battle-mage" "bigfoot-snapshots" "bigfoot-snapshots2" "bigfoot-snapshots3" "blank-sizzle" "blank-sizzle2" "blue-pines" "boston-test-10-3-23" "broken-jacket" "bunch of bullshit" "bunch of bullshit2" "bunch of bullshit4" "caliope" "calliope" "canvas-scrubber-test1" "capecod-viking" "chaos simple" "chaos-views" "chompers" "clean-grey-defaults" "code-data-literal-stonks-test" "conifer-boughs" "crazy-alice" "dark-crested-jackelope" "data-literals-test-sunday" "data-literals-test-sundaydd" "demo-dark-pumpkin-bkgrd-sept23" "demo-light-bkgrd-sept23" "demo-lime-green-slime" "desktops-and-broomsticks" "error-monitor" "error-monitor-vanessa" "error-monitor-vanessa2" "error-monitor-vanessa3" "evil-main-street" "fake-books-1" "fetching-pentagonal-termite-of-tghe-submarine-canyon" "final-fantasy-dorchester" "fox-hills" "glass-fish-board-test" "green-storm-city" "hue-board-1" "late-winter-theme" "lavender-side-eye" "layout-test-1" "layout-test-12" "light-theme" "literal-data-test" "looking-glass-redux" "luck-of-the-irish" "mapbox-test" "may-20" "my-goodness" "my-goodness-the-sequel" "neverwinter-amy" "night-city-never-sleeps" "nightcity-cape-cod" "nivo-getting-better!" "nivo-hacking-2023" "nivo-hacking-2023333" "nivo-hacking-october-2nd" "old-defaults" "old-fashioned-christmas" "old-town-snow-stars" "pensive-look" "pine-wood-dawn" "pink-and-green-elk" "pink-dusk-falls" "pinup-rabbit-fields" "poor-touring-me" "pres-sql-test-1" "purple-dusk-old-town" "purple-nightshades" "purple-techno-sunset" "recharts-test-blocks" "refresh-test" "riffle-test" "sick-of-your-shit" "sizzle-board-1" "sneaky-swamp-creatures1" "swamp-nightgown" "swamp-reacher" "tallica-param-test2" "tangerine-dreams" "technicolor-shanny" "the-future-soon" "the-generated-lass" "the-generated-lass-glow" "the-generated-lass-ne" "the-generated-lass-sgt" "the-outer-blues" "trad-hybrid" "tweet-bigfoot-is-blurry" "tweet-demo-thing-bigfoot-is-blurry" "unnamed-screen!" "viking-pastels" "weave-test" "weave-test1" "weave-test122" "who ya gonna call?" "who ya gonna call? again" "winter-theme" "winter-theme-choom" "winter-theme2" "winter-theme33" "winter-theme45" "winter-theme47" "winter-twin-peaks" "witchy425" "wow-board"], :openapi-key "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"}}, :runstreams {"flow-forever" {:open? false, :open-outputs? true}, "crow-flow-201" {:open? true, :open-outputs? true}, "crow-flow-201a" {:open? true, :open-outputs? true}, "counting-loop" {:open? true, :open-outputs? true}}, :editor? false, :buffy? false, :memory [847494597 748874585 4294705152], :status-data {"kick-test!" {:kick {:data [{:sent! "kick-test!", :to :principled-apricot-armadillo-hailing-from-misfit-stream, :at "2024-02-24 19:59:57", :payload {:query-log {:data [{:content ["2024-02-24 19:59:57 - query ran in 2 ms."], :name "query-log-:flows-sys", :order 1708822797, :parameters {}, :forced-mutates {}, :step-mutates {}}], :description "query-log-:flows-sys", :mutates {}, :options {:actions? false, :pages? false, :search? false}, :parameters {}}}, :payload-kp [:flows-sys "kick-test!"]} nil], :elapsed-ms nil, :reco-count nil}}, [:tracker "counting-loop" :open-fn-3] {:kick {:data [{:sent! [:tracker "counting-loop" :open-fn-3], :to :principled-apricot-armadillo-hailing-from-misfit-stream, :at "2024-02-24 20:23:52", :payload nil} nil], :elapsed-ms nil, :reco-count nil}}, [:tracker "crow-flow-201" :open-input] {:kick {:data [{:sent! [:tracker "crow-flow-201" :open-input], :to :principled-apricot-armadillo-hailing-from-misfit-stream, :at "2024-02-23 19:01:15", :payload nil} nil], :elapsed-ms nil, :reco-count nil}}, [:tracker "crow-flow-201" :open-fn-7] {:kick {:data [{:sent! [:tracker "crow-flow-201" :open-fn-7], :to :principled-apricot-armadillo-hailing-from-misfit-stream, :at "2024-02-23 19:01:16", :payload nil} nil], :elapsed-ms nil, :reco-count nil}}, [:tracker "crow-flow-201" :open-fn-8] {:kick {:data [{:sent! [:tracker "crow-flow-201" :open-fn-8], :to :principled-apricot-armadillo-hailing-from-misfit-stream, :at "2024-02-23 19:01:16", :payload nil} nil], :elapsed-ms nil, :reco-count nil}}, :alert1 {:alerts {:data [[[:v-box :justify :center :style {:margin-top "-6px", :color "inherit"} :children [[:box :child "flow counting-loop has finished"] [:box :style {:font-weight 700, :font-size "10px", :opacity 0.7} :child " "] [:box :style {:font-weight 700, :font-size "10px", :opacity 0.7} :child "returns: clojure.core.async.impl.channels.ManyToManyChannel@77ae2cf9"]]] 10 1.35 8] nil], :elapsed-ms nil, :reco-count nil}}, [:tracker "crow-flow-201" :open-fn-5] {:kick {:data [{:sent! [:tracker "crow-flow-201" :open-fn-5], :to :principled-apricot-armadillo-hailing-from-misfit-stream, :at "2024-02-23 19:01:16", :payload nil} nil], :elapsed-ms nil, :reco-count nil}}, [:tracker "counting-loop" :open-input] {:kick {:data [{:sent! [:tracker "counting-loop" :open-input], :to :principled-apricot-armadillo-hailing-from-misfit-stream, :at "2024-02-24 16:15:52", :payload nil} nil], :elapsed-ms nil, :reco-count nil}}, [:tracker "crow-flow-201" :open-fn-6] {:kick {:data [{:sent! [:tracker "crow-flow-201" :open-fn-6], :to :principled-apricot-armadillo-hailing-from-misfit-stream, :at "2024-02-23 19:01:16", :payload nil} nil], :elapsed-ms nil, :reco-count nil}}, :heartbeat {:kick {:data [{:sent! :heartbeat, :to :all, :at "2024-02-24 20:36:59", :payload nil, :payload-kp [:heartbeat :heartbeat]} nil], :elapsed-ms nil, :reco-count nil}}, [:tracker "crow-flow-201" :open-fn-9] {:kick {:data [{:sent! [:tracker "crow-flow-201" :open-fn-9], :to :principled-apricot-armadillo-hailing-from-misfit-stream, :at "2024-02-23 19:01:16", :payload nil} nil], :elapsed-ms nil, :reco-count nil}}, [:tracker "crow-flow-201" :open-fn-2] {:kick {:data [{:sent! [:tracker "crow-flow-201" :open-fn-2], :to :principled-apricot-armadillo-hailing-from-misfit-stream, :at "2024-02-23 19:01:16", :payload nil} nil], :elapsed-ms nil, :reco-count nil}}, [:tracker "crow-flow-201" :open-fn-4] {:kick {:data [{:sent! [:tracker "crow-flow-201" :open-fn-4], :to :principled-apricot-armadillo-hailing-from-misfit-stream, :at "2024-02-23 19:01:16", :payload nil} nil], :elapsed-ms nil, :reco-count nil}}, [:tracker "counting-loop" :open-fn-1] {:kick {:data [{:sent! [:tracker "counting-loop" :open-fn-1], :to :principled-apricot-armadillo-hailing-from-misfit-stream, :at "2024-02-24 20:23:48", :payload nil} nil], :elapsed-ms nil, :reco-count nil}}, [:tracker "crow-flow-201" :open-fn-3] {:kick {:data [{:sent! [:tracker "crow-flow-201" :open-fn-3], :to :principled-apricot-armadillo-hailing-from-misfit-stream, :at "2024-02-23 19:01:16", :payload nil} nil], :elapsed-ms nil, :reco-count nil}}, [:tracker "crow-flow-201" :open-fn-1] {:kick {:data [{:sent! [:tracker "crow-flow-201" :open-fn-1], :to :principled-apricot-armadillo-hailing-from-misfit-stream, :at "2024-02-23 19:01:16", :payload nil} nil], :elapsed-ms nil, :reco-count nil}}, [:tracker "counting-loop" :open-fn-2] {:kick {:data [{:sent! [:tracker "counting-loop" :open-fn-2], :to :principled-apricot-armadillo-hailing-from-misfit-stream, :at "2024-02-24 20:23:52", :payload nil} nil], :elapsed-ms nil, :reco-count nil}}, [:tracker "crow-flow-201" :open-fn-10] {:kick {:data [{:sent! [:tracker "crow-flow-201" :open-fn-10], :to :principled-apricot-armadillo-hailing-from-misfit-stream, :at "2024-02-23 19:01:16", :payload nil} nil], :elapsed-ms nil, :reco-count nil}}}, :re-pressed.core/keydown {:keys [{:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 86} {:altKey false, :ctrlKey true, :metaKey false, :shiftKey false, :keyCode 189} {:altKey false, :ctrlKey true, :metaKey false, :shiftKey false, :keyCode 189} {:altKey false, :ctrlKey true, :metaKey false, :shiftKey false, :keyCode 187} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 86} {:altKey false, :ctrlKey true, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 27} {:altKey false, :ctrlKey true, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey true, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey true, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey true, :keyCode 32} {:altKey false, :ctrlKey true, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey true, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 65} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey true, :keyCode 87} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey true, :keyCode 83} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey true, :keyCode 65} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey true, :keyCode 87} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 83} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 27} {:altKey false, :ctrlKey true, :metaKey false, :shiftKey false, :keyCode 32}], :event-keys [[[:viz-yard.bricks/esc-unselect-current] [{:keyCode 27}]] [[:viz-yard.bricks/redo-one] [{:keyCode 90, :ctrlKey true, :shiftKey true}]] [[:viz-yard.bricks/undo-one] [{:keyCode 90, :ctrlKey true, :shiftKey false}]] [[:viz-yard.bricks/toggle-buffy] [{:keyCode 32, :shiftKey true, :ctrlKey false}]] [[:viz-yard.bricks/toggle-editor] [{:keyCode 32, :shiftKey false, :ctrlKey false}]] [[:viz-yard.bricks/toggle-flow] [{:keyCode 32, :shiftKey false, :ctrlKey true}]] [[:viz-yard.bricks/next-panel] [{:keyCode 9}]] [[:viz-yard.bricks/toggle-kick-alert] [{:keyCode 75}]] [[:viz-yard.bricks/toggle-peek] [{:keyCode 80}]] [[:viz-yard.bricks/toggle-lines] [{:keyCode 76}]] [[:viz-yard.bricks/toggle-auto-run] [{:keyCode 79}]] [[:viz-yard.bricks/delete-selected-panel] [{:keyCode 46, :shiftKey true}]] [[:viz-yard.bricks/cycle-column-select false] [{:keyCode 81}]] [[:viz-yard.bricks/cycle-column-select true] [{:keyCode 69}]] [[:viz-yard.audio/start-recording] [{:keyCode 84}]] [[:viz-yard.audio/stop-recording] [{:keyCode 89}]] [[:viz-yard.bricks/stretch-panel :wider] [{:keyCode 68, :shiftKey true}]] [[:viz-yard.bricks/stretch-panel :longer] [{:keyCode 83, :shiftKey true}]] [[:viz-yard.bricks/stretch-panel :narrower] [{:keyCode 65, :shiftKey true}]] [[:viz-yard.bricks/stretch-panel :shorter] [{:keyCode 87, :shiftKey true}]] [[:viz-yard.bricks/panel-depth-up] [{:keyCode 82, :shiftKey true}]] [[:viz-yard.bricks/panel-depth-down] [{:keyCode 70, :shiftKey true}]] [[:viz-yard.flows/run-current-flowmap] [{:keyCode 70} {:keyCode 70}]] [[:viz-yard.bricks/save] [{:keyCode 83, :shiftKey false, :ctrlKey true}]] [[:viz-yard.bricks/nudge-panel :up] [{:keyCode 87}]] [[:viz-yard.bricks/nudge-panel :down] [{:keyCode 83}]] [[:viz-yard.bricks/nudge-panel :left] [{:keyCode 65}]] [[:viz-yard.bricks/nudge-panel :right] [{:keyCode 68}]] [[:viz-yard.core/alt-key-toggle] [{:keyCode 86}]] [[:viz-yard.core/alt-key-down] [{:keyCode 67}]]], :clear-keys nil, :always-listen-keys nil, :prevent-default-keys [{:keyCode 32} {:keyCode 86} {:keyCode 46, :shiftKey true} {:keyCode 83, :ctrlKey true} {:keyCode 83, :shiftKey false, :ctrlKey true} {:keyCode 9} {:keyCode 70, :ctrlKey true}]}, :flow-subs [:flow/flow-forever>*running? :flow/crow-flow-201>*running? :flow/crow-flow-201a>*running? :flow/counting-loop>*running? :flow/flow-forever>:final-math :flow/counting-loop>:open-fn-1 :flow/counting-loop>:open-fn-2], :client-name :principled-apricot-armadillo-hailing-from-misfit-stream, :flow-gantt? true, :runstreams-lookups {"flow-forever" {:open-inputs {:dialog-width {:user-input 10, :defaults {}, :type {:out :integer}}, :duration-to-show {:user-input 600, :defaults {}, :type :integer}, :some-input-int {:user-input 333, :defaults {}, :type {:out :integer}}, :another-input-int {:user-input 234.5, :defaults {}, :type {:out :float}}, :dialog-height {:user-input 3, :defaults {}, :type :integer}}, :blocks {:dialog-ui-box {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :dialog-width {:type {:out {:out :integer}}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :final-math {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :render-the-answer {:type {:out :any}, :ttype :open-fn, :meta nil, :last? true, :defaults {}, :sample "no sample data"}, :user-value-in {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :dialog-pushed {:type {:out :any}, :ttype :alert!, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :render-the-choice {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :more-math {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :duration-to-show {:type {:out :integer}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :some-math {:type {:out :any}, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :some-input-int {:type {:out {:out :integer}}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :another-input-int {:type {:out {:out :float}}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}, :dialog-height {:type {:out :integer}, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "no sample data"}}}, "crow-flow-201a" {:open-inputs {:open-input {:user-input 233, :defaults {}, :type {:out :integer}}}, :blocks {:open-fn-7 {:type :integer, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "233"}, :open-fn-2 {:type :integer, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "233"}, :open-input {:type :integer, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "233"}, :open-fn-4 {:type :integer, :ttype :open-fn, :meta nil, :last? true, :defaults {}, :sample "466"}}}, "crow-flow-201" {:open-inputs {:open-input {:user-input :go, :defaults {}, :type :keyword}}, :blocks {:open-fn-8 {:type :integer, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "0"}, :open-fn-7 {:type :integer, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "342"}, :open-fn-1 {:type :integer, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "342"}, :open-fn-2 {:type :integer, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "342"}, :open-fn-6 {:type :integer, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "0"}, :open-fn-9 {:type :integer, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "342"}, :open-input {:type :keyword, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample ":go"}, :open-fn-3 {:type :integer, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "342"}, :open-fn-4 {:type :integer, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "1026"}, :open-fn-5 {:type :integer, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "0"}, :open-fn-10 {:type :integer, :ttype :open-fn, :meta nil, :last? true, :defaults {}, :sample "1026"}}}, "counting-loop" {:open-inputs {:open-input {:user-input 1, :defaults {}, :type :integer}}, :blocks {:open-fn-1 {:type :unknown, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample "clojure.core.async.impl.channels.ManyToManyChannel@1aaa531f"}, :open-fn-2 {:type :keyword, :ttype :open-fn, :meta nil, :last? false, :defaults {}, :sample ":done"}, :open-input {:type :integer, :ttype :open-block, :meta nil, :last? false, :defaults {}, :sample "1"}, :open-fn-3 {:type :unknown, :ttype :open-fn, :meta nil, :last? true, :defaults {}, :sample "clojure.core.async.impl.channels.ManyToManyChannel@4d6e4692"}}}}, :alt-key-held? false, :flow-editor? false, :openai-api-key "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", :window {:w 1326, :h 781}, :post-meta {:city-drag-26 {:* {:rowcount 19899}}, :rowcnt-drag-2 {:* {:rowcount 1}}, :duration-hours-drag-43 {:* {:rowcount 8349}}, :shape-drag-7 {:* {:rowcount 30}}, :state-drag-3 {:* {:rowcount 68}}, :ufo-sightings-drag-9 {:* {:rowcount 80332}}, :flows-sys {:* {:rowcount "[SQLITE_ERROR] SQL error or missing database (near \")\": syntax error)"}}}, :status {"kick-test!" {:kick :flows-sys}, [:tracker "counting-loop" :open-fn-3] {:kick {:done {:start 1708824232980, :end 1708824232981}, :open-fn-1 {:start 1708824228408, :end 1708824228511}, :open-fn-2 {:start 1708824232979, :end 1708824232981}, :open-fn-2/x {:start 1708824228512, :end 1708824228513}, :open-fn-3/x {:start 1708824226740, :end 1708824226741}, :open-fn-1/x {:start 1708824226744, :end 1708824226745}, :nilly {:start 1708824226740, :end 1708824226740, :static? true}, :open-input {:start 1708824226740, :end 1708824226740, :static? true}, :open-fn-3 {:start 1708824232979, :end 1708824232982}}}, [:tracker "crow-flow-201" :open-input] {:kick {:open-fn-4/arg+0 {:end 1708732875984}, :open-fn-8 {:end 1708732875984}, :open-fn-7 {:end 1708732875984}, :done {:end 1708732875983}, :open-fn-6/x {:end 1708732875994, :start 1708732875994}, :open-fn-1 {:end 1708732875984}, :open-fn-2 {:end 1708732875984}, :open-fn-7/x {:end 1708732875983}, :open-fn-8/x {:end 1708732875982}, :open-fn-9/x {:end 1708732875982}, :open-fn-2/x {:end 1708732875983}, :open-fn-3/x {:end 1708732875983}, :open-fn-5/x {:end 1708732875994, :start 1708732875994}, :open-fn-6 {:end 1708732875983, :start 1708732875994}, :open-fn-1/x {:end 1708732875985}, :open-fn-9 {:end 1708732875984}, :open-fn-10/x+1 {:end 1708732875982}, :nilly {:start 1708732875994, :end 1708732875994, :static? true}, :open-input {:start 1708732875994, :end 1708732875994, :static? true}, :open-fn-3 {:end 1708732875984}, :open-fn-4/arg+2 {:end 1708732875985}, :open-fn-4 {:end 1708732875982}, :open-fn-10/x+0 {:end 1708732875984}, :open-fn-5 {:end 1708732875982}, :open-fn-4/arg+1 {:end 1708732875984}, :open-fn-10/x+2 {:end 1708732875985}, :open-fn-10 {:end 1708732875982}}}, [:tracker "crow-flow-201" :open-fn-7] {:kick {:open-fn-4/arg+0 {:end 1708732875984}, :open-fn-8 {:end 1708732876005, :start 1708732876002}, :open-fn-7 {:end 1708732876010, :start 1708732876007}, :done {:end 1708732875983}, :open-fn-6/x {:end 1708732875994, :start 1708732875994}, :open-fn-1 {:end 1708732875984, :start 1708732876002}, :open-fn-2 {:end 1708732876005, :start 1708732876002}, :open-fn-7/x {:end 1708732876007, :start 1708732876007}, :open-fn-8/x {:end 1708732876002, :start 1708732876001}, :open-fn-9/x {:end 1708732875997, :start 1708732875996}, :open-fn-2/x {:end 1708732876002, :start 1708732876001}, :open-fn-3/x {:end 1708732876007, :start 1708732876007}, :open-fn-5/x {:end 1708732875994, :start 1708732875994}, :open-fn-6 {:end 1708732875996, :start 1708732875994}, :open-fn-1/x {:end 1708732876002, :start 1708732876001}, :open-fn-9 {:end 1708732876000, :start 1708732875997}, :open-fn-10/x+1 {:end 1708732876007, :start 1708732876007}, :nilly {:start 1708732875994, :end 1708732875994, :static? true}, :open-input {:start 1708732875994, :end 1708732875994, :static? true}, :open-fn-3 {:end 1708732876010, :start 1708732876007}, :open-fn-4/arg+2 {:end 1708732876002, :start 1708732876001}, :open-fn-4 {:end 1708732875982}, :open-fn-10/x+0 {:end 1708732875998, :start 1708732875998}, :open-fn-5 {:end 1708732876000, :start 1708732875998}, :open-fn-4/arg+1 {:end 1708732875984}, :open-fn-10/x+2 {:end 1708732875985}, :open-fn-10 {:end 1708732875982}}}, [:tracker "crow-flow-201" :open-fn-8] {:kick {:open-fn-4/arg+0 {:end 1708732876012, :start 1708732876012}, :open-fn-8 {:end 1708732876045, :start 1708732876044}, :open-fn-7 {:end 1708732876010, :start 1708732876007}, :done {:end 1708732875983}, :open-fn-6/x {:end 1708732875994, :start 1708732875994}, :open-fn-1 {:end 1708732876041, :start 1708732876002}, :open-fn-2 {:end 1708732876005, :start 1708732876002}, :open-fn-7/x {:end 1708732876007, :start 1708732876007}, :open-fn-8/x {:end 1708732876044, :start 1708732876044}, :open-fn-9/x {:end 1708732875997, :start 1708732875996}, :open-fn-2/x {:end 1708732876002, :start 1708732876001}, :open-fn-3/x {:end 1708732876007, :start 1708732876007}, :open-fn-5/x {:end 1708732875994, :start 1708732875994}, :open-fn-6 {:end 1708732876043, :start 1708732876042}, :open-fn-1/x {:end 1708732876002, :start 1708732876001}, :open-fn-9 {:end 1708732876000, :start 1708732875997}, :open-fn-10/x+1 {:end 1708732876007, :start 1708732876007}, :nilly {:start 1708732875994, :end 1708732875994, :static? true}, :open-input {:start 1708732875994, :end 1708732875994, :static? true}, :open-fn-3 {:end 1708732876010, :start 1708732876007}, :open-fn-4/arg+2 {:end 1708732876002, :start 1708732876001}, :open-fn-4 {:end 1708732876044, :start 1708732876042}, :open-fn-10/x+0 {:end 1708732876044, :start 1708732876044}, :open-fn-5 {:end 1708732876043, :start 1708732876042}, :open-fn-4/arg+1 {:end 1708732876042, :start 1708732876042}, :open-fn-10/x+2 {:end 1708732876045, :start 1708732876045}, :open-fn-10 {:end 1708732875982, :start 1708732876046}}}, :alert1 {:alerts :alert2}, [:tracker "crow-flow-201" :open-fn-5] {:kick {:open-fn-4/arg+0 {:end 1708732876012, :start 1708732876012}, :open-fn-8 {:end 1708732876005, :start 1708732876002}, :open-fn-7 {:end 1708732876010, :start 1708732876007}, :done {:end 1708732875983}, :open-fn-6/x {:end 1708732875994, :start 1708732875994}, :open-fn-1 {:end 1708732876041, :start 1708732876002}, :open-fn-2 {:end 1708732876005, :start 1708732876002}, :open-fn-7/x {:end 1708732876007, :start 1708732876007}, :open-fn-8/x {:end 1708732876002, :start 1708732876001}, :open-fn-9/x {:end 1708732875997, :start 1708732875996}, :open-fn-2/x {:end 1708732876002, :start 1708732876001}, :open-fn-3/x {:end 1708732876007, :start 1708732876007}, :open-fn-5/x {:end 1708732875994, :start 1708732875994}, :open-fn-6 {:end 1708732876043, :start 1708732876042}, :open-fn-1/x {:end 1708732876002, :start 1708732876001}, :open-fn-9 {:end 1708732876000, :start 1708732875997}, :open-fn-10/x+1 {:end 1708732876007, :start 1708732876007}, :nilly {:start 1708732875994, :end 1708732875994, :static? true}, :open-input {:start 1708732875994, :end 1708732875994, :static? true}, :open-fn-3 {:end 1708732876010, :start 1708732876007}, :open-fn-4/arg+2 {:end 1708732876002, :start 1708732876001}, :open-fn-4 {:end 1708732875982, :start 1708732876042}, :open-fn-10/x+0 {:end 1708732875998, :start 1708732875998}, :open-fn-5 {:end 1708732876043, :start 1708732876042}, :open-fn-4/arg+1 {:end 1708732876042, :start 1708732876042}, :open-fn-10/x+2 {:end 1708732875985}, :open-fn-10 {:end 1708732875982}}}, [:tracker "counting-loop" :open-input] {:kick {:nilly {:start 1708809352045, :end 1708809352045, :static? true}, :open-input {:start 1708809352046, :end 1708809352046, :static? true}, :open-fn-3/x {:start 1708809352046, :end 1708809352046}}}, [:tracker "crow-flow-201" :open-fn-6] {:kick {:open-fn-4/arg+0 {:end 1708732876012, :start 1708732876012}, :open-fn-8 {:end 1708732876005, :start 1708732876002}, :open-fn-7 {:end 1708732876010, :start 1708732876007}, :done {:end 1708732875983}, :open-fn-6/x {:end 1708732875994, :start 1708732875994}, :open-fn-1 {:end 1708732876041, :start 1708732876002}, :open-fn-2 {:end 1708732876005, :start 1708732876002}, :open-fn-7/x {:end 1708732876007, :start 1708732876007}, :open-fn-8/x {:end 1708732876002, :start 1708732876001}, :open-fn-9/x {:end 1708732875997, :start 1708732875996}, :open-fn-2/x {:end 1708732876002, :start 1708732876001}, :open-fn-3/x {:end 1708732876007, :start 1708732876007}, :open-fn-5/x {:end 1708732875994, :start 1708732875994}, :open-fn-6 {:end 1708732876043, :start 1708732876042}, :open-fn-1/x {:end 1708732876002, :start 1708732876001}, :open-fn-9 {:end 1708732876000, :start 1708732875997}, :open-fn-10/x+1 {:end 1708732876007, :start 1708732876007}, :nilly {:start 1708732875994, :end 1708732875994, :static? true}, :open-input {:start 1708732875994, :end 1708732875994, :static? true}, :open-fn-3 {:end 1708732876010, :start 1708732876007}, :open-fn-4/arg+2 {:end 1708732876002, :start 1708732876001}, :open-fn-4 {:end 1708732875982, :start 1708732876042}, :open-fn-10/x+0 {:end 1708732875998, :start 1708732875998}, :open-fn-5 {:end 1708732876043, :start 1708732876042}, :open-fn-4/arg+1 {:end 1708732876042, :start 1708732876042}, :open-fn-10/x+2 {:end 1708732875985}, :open-fn-10 {:end 1708732875982}}}, :heartbeat {:kick []}, [:tracker "crow-flow-201" :open-fn-9] {:kick {:open-fn-4/arg+0 {:end 1708732875984}, :open-fn-8 {:end 1708732875984}, :open-fn-7 {:end 1708732875984}, :done {:end 1708732875983}, :open-fn-6/x {:end 1708732875994, :start 1708732875994}, :open-fn-1 {:end 1708732875984}, :open-fn-2 {:end 1708732875984}, :open-fn-7/x {:end 1708732875983}, :open-fn-8/x {:end 1708732875982}, :open-fn-9/x {:end 1708732875997, :start 1708732875996}, :open-fn-2/x {:end 1708732875983}, :open-fn-3/x {:end 1708732875983}, :open-fn-5/x {:end 1708732875994, :start 1708732875994}, :open-fn-6 {:end 1708732875996, :start 1708732875994}, :open-fn-1/x {:end 1708732875985}, :open-fn-9 {:end 1708732876000, :start 1708732875997}, :open-fn-10/x+1 {:end 1708732875982}, :nilly {:start 1708732875994, :end 1708732875994, :static? true}, :open-input {:start 1708732875994, :end 1708732875994, :static? true}, :open-fn-3 {:end 1708732875984}, :open-fn-4/arg+2 {:end 1708732875985}, :open-fn-4 {:end 1708732875982}, :open-fn-10/x+0 {:end 1708732875998, :start 1708732875998}, :open-fn-5 {:end 1708732876000, :start 1708732875998}, :open-fn-4/arg+1 {:end 1708732875984}, :open-fn-10/x+2 {:end 1708732875985}, :open-fn-10 {:end 1708732875982}}}, [:tracker "crow-flow-201" :open-fn-2] {:kick {:open-fn-4/arg+0 {:end 1708732875984}, :open-fn-8 {:end 1708732876005, :start 1708732876002}, :open-fn-7 {:end 1708732875984}, :done {:end 1708732875983}, :open-fn-6/x {:end 1708732875994, :start 1708732875994}, :open-fn-1 {:end 1708732875984, :start 1708732876002}, :open-fn-2 {:end 1708732876005, :start 1708732876002}, :open-fn-7/x {:end 1708732875983}, :open-fn-8/x {:end 1708732876002, :start 1708732876001}, :open-fn-9/x {:end 1708732875997, :start 1708732875996}, :open-fn-2/x {:end 1708732876002, :start 1708732876001}, :open-fn-3/x {:end 1708732875983}, :open-fn-5/x {:end 1708732875994, :start 1708732875994}, :open-fn-6 {:end 1708732875996, :start 1708732875994}, :open-fn-1/x {:end 1708732876002, :start 1708732876001}, :open-fn-9 {:end 1708732876000, :start 1708732875997}, :open-fn-10/x+1 {:end 1708732875982}, :nilly {:start 1708732875994, :end 1708732875994, :static? true}, :open-input {:start 1708732875994, :end 1708732875994, :static? true}, :open-fn-3 {:end 1708732875984}, :open-fn-4/arg+2 {:end 1708732876002, :start 1708732876001}, :open-fn-4 {:end 1708732875982}, :open-fn-10/x+0 {:end 1708732875998, :start 1708732875998}, :open-fn-5 {:end 1708732876000, :start 1708732875998}, :open-fn-4/arg+1 {:end 1708732875984}, :open-fn-10/x+2 {:end 1708732875985}, :open-fn-10 {:end 1708732875982}}}, [:tracker "crow-flow-201" :open-fn-4] {:kick {:open-fn-4/arg+0 {:end 1708732876012, :start 1708732876012}, :open-fn-8 {:end 1708732876005, :start 1708732876044}, :open-fn-7 {:end 1708732876010, :start 1708732876007}, :done {:end 1708732875983}, :open-fn-6/x {:end 1708732875994, :start 1708732875994}, :open-fn-1 {:end 1708732876041, :start 1708732876002}, :open-fn-2 {:end 1708732876005, :start 1708732876002}, :open-fn-7/x {:end 1708732876007, :start 1708732876007}, :open-fn-8/x {:end 1708732876044, :start 1708732876044}, :open-fn-9/x {:end 1708732875997, :start 1708732875996}, :open-fn-2/x {:end 1708732876002, :start 1708732876001}, :open-fn-3/x {:end 1708732876007, :start 1708732876007}, :open-fn-5/x {:end 1708732875994, :start 1708732875994}, :open-fn-6 {:end 1708732876043, :start 1708732876042}, :open-fn-1/x {:end 1708732876002, :start 1708732876001}, :open-fn-9 {:end 1708732876000, :start 1708732875997}, :open-fn-10/x+1 {:end 1708732876007, :start 1708732876007}, :nilly {:start 1708732875994, :end 1708732875994, :static? true}, :open-input {:start 1708732875994, :end 1708732875994, :static? true}, :open-fn-3 {:end 1708732876010, :start 1708732876007}, :open-fn-4/arg+2 {:end 1708732876002, :start 1708732876001}, :open-fn-4 {:end 1708732876044, :start 1708732876042}, :open-fn-10/x+0 {:end 1708732876044, :start 1708732876044}, :open-fn-5 {:end 1708732876043, :start 1708732876042}, :open-fn-4/arg+1 {:end 1708732876042, :start 1708732876042}, :open-fn-10/x+2 {:end 1708732875985}, :open-fn-10 {:end 1708732875982}}}, [:tracker "counting-loop" :open-fn-1] {:kick {:done {:start 1708824227866, :end 1708824227866}, :open-fn-1 {:start 1708824228408, :end 1708824228511}, :open-fn-2 {:start 1708824228406, :end 1708824228407}, :open-fn-2/x {:start 1708824228405, :end 1708824228406}, :open-fn-3/x {:start 1708824226740, :end 1708824226741}, :open-fn-1/x {:start 1708824226744, :end 1708824226745}, :nilly {:start 1708824226740, :end 1708824226740, :static? true}, :open-input {:start 1708824226740, :end 1708824226740, :static? true}, :open-fn-3 {:start 1708824228193, :end 1708824228195}}}, [:tracker "crow-flow-201" :open-fn-3] {:kick {:open-fn-4/arg+0 {:end 1708732875984}, :open-fn-8 {:end 1708732876005, :start 1708732876002}, :open-fn-7 {:end 1708732876010, :start 1708732876007}, :done {:end 1708732875983}, :open-fn-6/x {:end 1708732875994, :start 1708732875994}, :open-fn-1 {:end 1708732875984, :start 1708732876002}, :open-fn-2 {:end 1708732876005, :start 1708732876002}, :open-fn-7/x {:end 1708732876007, :start 1708732876007}, :open-fn-8/x {:end 1708732876002, :start 1708732876001}, :open-fn-9/x {:end 1708732875997, :start 1708732875996}, :open-fn-2/x {:end 1708732876002, :start 1708732876001}, :open-fn-3/x {:end 1708732876007, :start 1708732876007}, :open-fn-5/x {:end 1708732875994, :start 1708732875994}, :open-fn-6 {:end 1708732875996, :start 1708732875994}, :open-fn-1/x {:end 1708732876002, :start 1708732876001}, :open-fn-9 {:end 1708732876000, :start 1708732875997}, :open-fn-10/x+1 {:end 1708732876007, :start 1708732876007}, :nilly {:start 1708732875994, :end 1708732875994, :static? true}, :open-input {:start 1708732875994, :end 1708732875994, :static? true}, :open-fn-3 {:end 1708732876010, :start 1708732876007}, :open-fn-4/arg+2 {:end 1708732876002, :start 1708732876001}, :open-fn-4 {:end 1708732875982}, :open-fn-10/x+0 {:end 1708732875998, :start 1708732875998}, :open-fn-5 {:end 1708732876000, :start 1708732875998}, :open-fn-4/arg+1 {:end 1708732875984}, :open-fn-10/x+2 {:end 1708732875985}, :open-fn-10 {:end 1708732875982}}}, [:tracker "crow-flow-201" :open-fn-1] {:kick {:open-fn-4/arg+0 {:end 1708732876012, :start 1708732876012}, :open-fn-8 {:end 1708732876005, :start 1708732876002}, :open-fn-7 {:end 1708732876010, :start 1708732876007}, :done {:end 1708732875983}, :open-fn-6/x {:end 1708732875994, :start 1708732875994}, :open-fn-1 {:end 1708732876041, :start 1708732876002}, :open-fn-2 {:end 1708732876005, :start 1708732876002}, :open-fn-7/x {:end 1708732876007, :start 1708732876007}, :open-fn-8/x {:end 1708732876002, :start 1708732876001}, :open-fn-9/x {:end 1708732875997, :start 1708732875996}, :open-fn-2/x {:end 1708732876002, :start 1708732876001}, :open-fn-3/x {:end 1708732876007, :start 1708732876007}, :open-fn-5/x {:end 1708732875994, :start 1708732875994}, :open-fn-6 {:end 1708732875996, :start 1708732875994}, :open-fn-1/x {:end 1708732876002, :start 1708732876001}, :open-fn-9 {:end 1708732876000, :start 1708732875997}, :open-fn-10/x+1 {:end 1708732876007, :start 1708732876007}, :nilly {:start 1708732875994, :end 1708732875994, :static? true}, :open-input {:start 1708732875994, :end 1708732875994, :static? true}, :open-fn-3 {:end 1708732876010, :start 1708732876007}, :open-fn-4/arg+2 {:end 1708732876002, :start 1708732876001}, :open-fn-4 {:end 1708732875982}, :open-fn-10/x+0 {:end 1708732875998, :start 1708732875998}, :open-fn-5 {:end 1708732876000, :start 1708732875998}, :open-fn-4/arg+1 {:end 1708732875984}, :open-fn-10/x+2 {:end 1708732875985}, :open-fn-10 {:end 1708732875982}}}, [:tracker "counting-loop" :open-fn-2] {:kick {:done {:start 1708824232980, :end 1708824232981}, :open-fn-1 {:start 1708824228408, :end 1708824228511}, :open-fn-2 {:start 1708824232979, :end 1708824232981}, :open-fn-2/x {:start 1708824228512, :end 1708824228513}, :open-fn-3/x {:start 1708824226740, :end 1708824226741}, :open-fn-1/x {:start 1708824226744, :end 1708824226745}, :nilly {:start 1708824226740, :end 1708824226740, :static? true}, :open-input {:start 1708824226740, :end 1708824226740, :static? true}, :open-fn-3 {:start 1708824232979, :end 1708824232982}}}, [:tracker "crow-flow-201" :open-fn-10] {:kick {:open-fn-4/arg+0 {:end 1708732876012, :start 1708732876012}, :open-fn-8 {:end 1708732876045, :start 1708732876044}, :open-fn-7 {:end 1708732876010, :start 1708732876007}, :done {:end 1708732876048, :start 1708732876048}, :open-fn-6/x {:end 1708732875994, :start 1708732875994}, :open-fn-1 {:end 1708732876041, :start 1708732876002}, :open-fn-2 {:end 1708732876005, :start 1708732876002}, :open-fn-7/x {:end 1708732876007, :start 1708732876007}, :open-fn-8/x {:end 1708732876044, :start 1708732876044}, :open-fn-9/x {:end 1708732875997, :start 1708732875996}, :open-fn-2/x {:end 1708732876002, :start 1708732876001}, :open-fn-3/x {:end 1708732876007, :start 1708732876007}, :open-fn-5/x {:end 1708732875994, :start 1708732875994}, :open-fn-6 {:end 1708732876043, :start 1708732876042}, :open-fn-1/x {:end 1708732876002, :start 1708732876001}, :open-fn-9 {:end 1708732876000, :start 1708732875997}, :open-fn-10/x+1 {:end 1708732876047, :start 1708732876046}, :nilly {:start 1708732875994, :end 1708732875994, :static? true}, :open-input {:start 1708732875994, :end 1708732875994, :static? true}, :open-fn-3 {:end 1708732876010, :start 1708732876007}, :open-fn-4/arg+2 {:end 1708732876002, :start 1708732876001}, :open-fn-4 {:end 1708732876044, :start 1708732876042}, :open-fn-10/x+0 {:end 1708732876044, :start 1708732876044}, :open-fn-5 {:end 1708732876043, :start 1708732876042}, :open-fn-4/arg+1 {:end 1708732876042, :start 1708732876042}, :open-fn-10/x+2 {:end 1708732876045, :start 1708732876045}, :open-fn-10 {:end 1708732876049, :start 1708732876048}}}}, :screen-name "looking-glass-redux", :recos-page2 0, :selected-tab "fat zebra", :col-names nil, :snapshots nil, :openai-org-id "org-YLngjih2M4oju0tnnZtKCAYg", :alerts [], :recos-page 0, :re-pollsive.core/polling {:rules [{:interval 10, :event [:viz-yard.bricks/dispatch-auto-queries], :poll-when [:viz-yard.bricks/auto-run-and-connected?], :dispatch-event-on-start? false} {:interval 5, :event [:viz-yard.bricks/update-metadata], :dispatch-event-on-start? false, :started-at 0, :stopped-time-since-last-poll nil, :started-before? true} {:interval 120, :event [:viz-yard.bricks/clean-up-reco-previews], :dispatch-event-on-start? false, :started-at 0, :stopped-time-since-last-poll nil, :started-before? true} {:interval 2, :event [:viz-yard.bricks/prune-alerts], :dispatch-event-on-start? false, :started-at 0, :stopped-time-since-last-poll nil, :started-before? true} {:interval 5, :event [:viz-yard.bricks/get-memory-usage], :dispatch-event-on-start? false, :started-at 0, :stopped-time-since-last-poll nil, :started-before? true} {:interval 2, :event [:viz-yard.bricks/refresh-runstreams], :poll-when [:viz-yard.bricks/runstream-running?], :dispatch-event-on-start? false, :started-at nil, :stopped-time-since-last-poll 0, :started-before? true} {:interval 1, :event [:viz-yard.bricks/sub-to-flows], :poll-when [:viz-yard.bricks/new-flow-subs?], :dispatch-event-on-start? false, :started-at nil, :stopped-time-since-last-poll -1, :started-before? true} {:interval 1000, :event [:viz-yard.bricks/update-metadata-tabs], :dispatch-event-on-start? false, :started-at 0, :stopped-time-since-last-poll nil, :started-before? true} {:interval 1, :event [:viz-yard.bricks/update-conditionals], :dispatch-event-on-start? false, :started-at 0, :stopped-time-since-last-poll nil, :started-before? true} {:interval 4, :event [:viz-yard.bricks/refresh-status], :poll-when [:viz-yard.bricks/bg-status?], :dispatch-event-on-start? false}], :counter 38647}, :flow-runner {"counting-loop" {:open-input 1, :open-fn-1 11, :open-fn-2 :done, :open-fn-3 12}}, :rs-overrides-hashmap {"flow-forever" nil, "crow-flow-201" nil, "crow-flow-201a" nil, "counting-loop" nil}, :re-pressed.core/keyup {:keys [{:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 86} {:altKey false, :ctrlKey true, :metaKey false, :shiftKey false, :keyCode 189} {:altKey false, :ctrlKey true, :metaKey false, :shiftKey false, :keyCode 189} {:altKey false, :ctrlKey true, :metaKey false, :shiftKey false, :keyCode 187} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 86} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 27} {:altKey false, :ctrlKey true, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey true, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey true, :keyCode 32} {:altKey false, :ctrlKey true, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey true, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 65} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey true, :keyCode 87} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey true, :keyCode 83} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey true, :keyCode 65} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey true, :keyCode 87} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 83} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 32} {:altKey false, :ctrlKey false, :metaKey false, :shiftKey false, :keyCode 27} {:altKey false, :ctrlKey true, :metaKey false, :shiftKey false, :keyCode 32}], :event-keys [[[:viz-yard.core/alt-key-up] [{:keyCode 67}]]], :clear-keys nil, :always-listen-keys nil}, :panels-hash 1318349242, :elevenlabs-api-key "f74e20dec69741c2d51663cbd8cd4cf6", :websocket-fx.core/sockets {:default {:status :connected, :options {:url "ws://localhost:3030/ws", :format :edn, :on-disconnect [:websocket-fx.core/unsubscribe :default :server-push2], :on-connect [:websocket-fx.core/subscribe :default :server-push2 {:message {:kind :server-push2, :client-name :principled-apricot-armadillo-hailing-from-misfit-stream, :ui-keypath [:server], :extras {:hello? true}}, :on-message [:viz-yard.http/simple-response]}]}, :subscriptions {:server-push2 {:message {:kind :server-push2, :client-name :principled-apricot-armadillo-hailing-from-misfit-stream, :ui-keypath [:server], :extras {:hello? true}}, :on-message [:viz-yard.http/simple-response]}}, :requests {#uuid "7bd91f36-e95f-46dd-bd08-add5527c2158" {:message {:kind :run-flow, :flow-id "flow-forever", :no-return? true, :opts {:increment-id? false, :opts {:retry-on-error? false, :retries 5, :close-on-done? true}}, :flowmap {:canvas {:dialog-ui-box {:w 200, :h 185, :x 1950, :y 1225, :view-mode "text"}, :dialog-width {:w 125, :h 85, :x 2200, :y 1225, :view-mode "text"}, :final-math {:w 125, :h 85, :x 1950, :y 1725, :view-mode "text"}, :render-the-answer {:w 225, :h 160, :x 1950, :y 1850, :view-mode "text"}, :user-value-in {:w 125, :h 85, :x 2075, :y 1600, :view-mode "text"}, :dialog-pushed {:w 175, :h 85, :x 2100, :y 1475, :view-mode "text"}, :render-the-choice {:w 250, :h 110, :x 2100, :y 1725, :view-mode "text"}, :more-math {:w 125, :h 85, :x 1775, :y 1350, :view-mode "text"}, :duration-to-show {:w 125, :h 85, :x 2250, :y 1325, :view-mode "text"}, :some-math {:w 125, :h 85, :x 1875, :y 1100, :view-mode "text"}, :some-input-int {:w 125, :h 85, :x 1800, :y 975, :view-mode "text"}, :another-input-int {:w 125, :h 85, :x 1950, :y 975, :view-mode "text"}, :dialog-height {:w 125, :h 85, :x 2400, :y 1325, :view-mode "text"}}, :components {:dialog-ui-box {:fn (fn [x] [:v-box :gap "10px" :size "auto" :height :height-px :width :width-px :style {:font-size "14px"} :children (for [option [45 65 -85]] [:box :padding "5px" :align :center :justify :center :style {:font-weight 700, :border-radius "10px", :color "#000000", :background-color :theme/editor-outer-rim-color} :child [:dialog-push [:flow-id ":user-value-in" option (str "click to send " option)]]])]), :raw-fn (fn [x] [:v-box :gap "10px" :size "auto" :height :height-px :width :width-px :style {:font-size "14px"} :children (for [option [45 65 -85]] [:box :padding "5px" :align :center :justify :center :style {:font-weight 700, :border-radius "10px", :color "#000000", :background-color :theme/editor-outer-rim-color} :child [:dialog-push [:flow-id ":user-value-in" option (str "click to send " option)]]])]), :default-overrides {}, :inputs [:x]}, :dialog-width 10, :final-math {:fn (fn [x y] (+ y x)), :raw-fn (fn [x y] (+ y x)), :default-overrides {}, :inputs [:x :y]}, :render-the-answer {:fn (fn [x] [:box :style {:font-size "55px"} :child (str x)]), :raw-fn (fn [x] [:box :style {:font-size "55px"} :child (str x)]), :default-overrides {}, :inputs [:x]}, :user-value-in {:fn (fn [x] nil), :raw-fn (fn [x] nil), :default-overrides {}, :inputs [:x]}, :dialog-pushed {:fn-key [:rabbit-base :alert!], :default-overrides {:destination :client-name, :content "Alert!", :w 10, :h 1, :duration 6}, :inputs [:destination :content :w :h :duration]}, :render-the-choice {:fn (fn [x] [:box :style {:font-size "33px"} :child (str "chose " x)]), :raw-fn (fn [x] [:box :style {:font-size "33px"} :child (str "chose " x)]), :default-overrides {}, :inputs [:x]}, :more-math {:fn (fn [x] (+ x 6)), :raw-fn (fn [x] (+ x 6)), :default-overrides {}, :inputs [:x]}, :duration-to-show 600, :some-math {:fn (fn [x y] (+ x y 45)), :raw-fn (fn [x y] (+ x y 45)), :default-overrides {}, :inputs [:x :y]}, :some-input-int 333, :another-input-int 234.5, :dialog-height 3}, :connections [[:some-input-int :some-math/x] [:another-input-int :some-math/y] [:some-math :more-math/x] [:more-math :final-math/x] [:some-math :dialog-ui-box/x] [:dialog-ui-box :dialog-pushed/content] [:dialog-pushed :user-value-in/x] [:user-value-in :final-math/y] [:duration-to-show :dialog-pushed/duration] [:dialog-height :dialog-pushed/h] [:dialog-width :dialog-pushed/w] [:final-math :render-the-answer/x] [:render-the-answer :done] [:user-value-in :render-the-choice/x]]}, :client-name :principled-apricot-armadillo-hailing-from-misfit-stream}, :on-response [:viz-yard.flows/socket-response-flow], :on-timeout [:viz-yard.flows/timeout-response :run-flow {:dialog-ui-box {:y 1225, :fn (fn [x] x), :w 200, :raw-fn (fn [x] [:v-box :gap "10px" :size "auto" :height :height-px :width :width-px :style {:font-size "14px"} :children (for [option [45 65 -85]] [:box :padding "5px" :align :center :justify :center :style {:font-weight 700, :border-radius "10px", :color "#000000", :background-color :theme/editor-outer-rim-color} :child [:dialog-push [:flow-id ":user-value-in" option (str "click to send " option)]]])]), :right-click? true, :icon "zmdi-functions", :types nil, :z 0, :ports {:in {:x :any}, :out {:out :any}}, :inputs nil, :h 185, :x 1950, :data {:flow-item {:category ":rabbit-base", :fn (fn [x] x), :name ":open-fn", :raw-fn (fn [x] x), :type :open-fn, :icon "zmdi-functions", :types {:x :any, :out :any}, :expandable? true, :drag-meta {:type :open-fn}}}}, :dialog-width {:y 1225, :w 125, :right-click? true, :types nil, :z 0, :ports {:in {}, :out {:out :integer}}, :inputs nil, :h 85, :x 2200, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input 10}}, :final-math {:y 1725, :fn (fn [x] x), :w 125, :raw-fn (fn [x y] (+ y x)), :right-click? true, :icon "zmdi-functions", :types nil, :z 0, :ports {:in {:x :any, :y :any}, :out {:out :any}}, :inputs nil, :h 85, :x 1950, :data {:flow-item {:category ":rabbit-base", :fn (fn [x] x), :name ":open-fn", :raw-fn (fn [x] x), :type :open-fn, :icon "zmdi-functions", :types {:x :any, :out :any}, :expandable? true, :drag-meta {:type :open-fn}}}}, :render-the-answer {:y 1850, :fn (fn [x] x), :w 225, :raw-fn (fn [x] [:box :style {:font-size "55px"} :child (str x)]), :right-click? true, :icon "zmdi-functions", :types nil, :z 0, :ports {:in {:x :any}, :out {:out :any}}, :inputs nil, :h 160, :x 1950, :data {:flow-item {:category ":rabbit-base", :fn (fn [x] x), :name ":open-fn", :raw-fn (fn [x] x), :type :open-fn, :icon "zmdi-functions", :types {:x :any, :out :any}, :expandable? true, :drag-meta {:type :open-fn}}}}, :user-value-in {:y 1600, :fn (fn [x] x), :w 125, :raw-fn (fn [x] nil), :right-click? true, :icon "zmdi-functions", :types nil, :z 0, :ports {:in {:x :any}, :out {:out :any}}, :inputs nil, :h 85, :x 2075, :data {:flow-item {:category ":rabbit-base", :fn (fn [x] x), :name ":open-fn", :raw-fn (fn [x] x), :type :open-fn, :icon "zmdi-functions", :types {:x :any, :out :any}, :expandable? true, :drag-meta {:type :open-fn}}}}, :dialog-pushed {:y 1475, :w 175, :right-click? true, :icon "zmdi-alert-polygon", :z 0, :ports {:in {:destination :keyword, :content :any, :w :integer, :h :integer, :duration :integer}, :out {:out :any}}, :h 85, :x 2100, :data {:flow-item {:category ":rabbit-base", :name ":alert!", :type :alert!, :icon "zmdi-alert-polygon", :defaults {:destination :client-name, :content "Alert!", :w 10, :h 1, :duration 6}, :types {:destination :keyword, :content :any, :out :any, :w :integer, :h :integer, :duration :integer}, :style {:color "#FDFD96"}, :selected-style {:color "#FDFD96"}, :inputs [:destination :content :w :h :duration], :expandable? true, :required nil}, :drag-meta {:type :alert!}}}, :render-the-choice {:y 1725, :fn (fn [x] [:box :style {:font-size "55px"} :child (str x)]), :w 250, :raw-fn (fn [x] [:box :style {:font-size "33px"} :child (str "chose " x)]), :right-click? true, :icon "zmdi-functions", :types nil, :z 0, :ports {:in {:x :any}, :out {:out :any}}, :inputs nil, :h 110, :x 2100, :data {:flow-item {:category ":rabbit-base", :fn (fn [x] [:box :style {:font-size "55px"} :child (str x)]), :name ":open-fn", :raw-fn (fn [x] [:box :style {:font-size "55px"} :child (str x)]), :type :open-fn, :icon "zmdi-functions", :types {:x :any, :out :any}, :expandable? true, :drag-meta {:type :open-fn}}}}, :more-math {:y 1350, :fn (fn [x] x), :w 125, :raw-fn (fn [x] (+ x 6)), :right-click? true, :icon "zmdi-functions", :types nil, :z 0, :ports {:in {:x :any}, :out {:out :any}}, :inputs nil, :h 85, :x 1775, :data {:flow-item {:category ":rabbit-base", :fn (fn [x] x), :name ":open-fn", :raw-fn (fn [x] x), :type :open-fn, :icon "zmdi-functions", :types {:x :any, :out :any}, :expandable? true, :drag-meta {:type :open-fn}}}}, :duration-to-show {:w 125, :h 85, :z 0, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input 600}, :right-click? true, :ports {:in {}, :out {:out :integer}}, :x 2250, :y 1325}, :some-math {:y 1100, :fn (fn [x y] (+ x y 45)), :w 125, :raw-fn (fn [x y] (+ x y 45)), :right-click? true, :icon "zmdi-functions", :z 0, :ports {:in {:x :any, :y :any}, :out {:out :any}}, :h 85, :x 1875, :data {:flow-item {:category ":rabbit-base", :fn (fn [x y] (+ x y 45)), :name ":open-fn", :raw-fn (fn [x y] (+ x y 45)), :type :open-fn, :icon "zmdi-functions", :types {:x :any, :y :any, :out :any}, :expandable? true, :drag-meta {:type :open-fn}}}}, :some-input-int {:y 975, :w 125, :right-click? true, :types nil, :z 0, :ports {:in {}, :out {:out :integer}}, :inputs nil, :h 85, :x 1800, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input 333}}, :another-input-int {:y 975, :w 125, :right-click? true, :types nil, :z 0, :ports {:in {}, :out {:out :float}}, :inputs nil, :h 85, :x 1950, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input 234.5}}, :dialog-height {:w 125, :h 85, :z 0, :data {:drag-meta {:type :open-block}, :flow-item {:expandable? true}, :user-input 3}, :right-click? true, :ports {:in {}, :out {:out :integer}}, :x 2400, :y 1325}}], :timeout 15000000}}}}, :user-params-hash 584916192, :grid-recos? true, :panels {:block-11251 {:name "block-11251", :w 6, :selected-view :hi, :root [5 7], :h 2, :queries {}, :tab "through the rabbit hole and out the other side", :minimized? true, :views {:hi [:box :align :center :justify :center :attr {:id ":block-11251.:hi"} :style {:font-size "14px", :font-weight 700, :padding-top "6px", :padding-left "14px", :margin-top "-8px", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child [:push ["flow-forever" ":open-input" 21555]]], :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}}, :block-11609 {:h 5, :w 8, :connection-id "bigfoot-ufos", :name "drag-from-select-all-ufo_sightings", :queries {:city-drag-26 {:select [:city [[:count 1] :rowcnt]], :from [[:query/ufo-sightings-drag-9 :ff571]], :group-by [:city], :order-by [[:rowcnt :desc]]}}, :root [1 8], :tab "sapphire ape"}, :block-7416 {:h 4, :w 4, :connection-id "bigfoot-ufos", :name "drag-from-drag-from-select-all-ufo_sightings", :queries {:rowcnt-drag-2 {:select [[[:sum :rowcnt] :rowcnt_sum]], :from [[:query/city-drag-26 :yy403]]}}, :root [1 13], :tab "sapphire ape"}, :block-11530 {:h 2, :w 9, :views {:flow-play-runstreamed [:box :align :center :justify :center :style {:font-size "25px", :font-weight 700, :padding-top "6px", :padding-left "14px", :margin-top "-8px", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child [:run-flow ["flow-forever" "run flow 'flow-forever'" :runstream-overrides]]]}, :name "flow-play-from-runstreams", :root [5 18], :tab "through the rabbit hole and out the other side"}, :block-2536 {:h 2, :w 16, :root [0 1], :tab "through the rabbit hole and out the other side", :selected-view :hi, :name "block-2536", :views {:hi [:box :attr {:id ":block-6121.:hi"} :style {:font-size "15px", :padding-top "6px", :padding-left "14px", :margin-top "-8px", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child [:speak-click "Did you ever need a flow to stop and present an operator with some choices? Static or dynamic we need help to continue processing. How about this ALSO happening headlessly & seamlessly with your data UI?"]], :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}, :queries {}}, :block-8805 {:h 5, :w 8, :connection-id "bigfoot-ufos", :name "drag-from-select-all-ufo_sightings", :queries {:duration-hours-drag-43 {:select [:duration_hours [[:count 1] :rowcnt]], :from [[:query/ufo-sightings-drag-9 :cc350]], :group-by [:duration_hours], :order-by [[:rowcnt :desc]]}}, :root [25 8], :tab "sapphire ape"}, :block-1913 {:h 2, :w 16, :root [0 15], :tab "through the rabbit hole and out the other side", :selected-view :hi, :name "block-1913", :views {:hi [:box :attr {:id ":block-4121.:hi"} :style {:font-size "15px", :padding-top "6px", :padding-left "14px", :margin-top "-8px", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child [:speak-click "Pretty cool, if you ask me. Regular Dashboards are, like, totally lame - reactive flow-powered data boards...  thats where its at."]], :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}, :queries {}}, :block-9369 {:h 3, :w 16, :root [0 11], :tab "through the rabbit hole and out the other side", :selected-view :hi, :name "block-9369", :views {:hi [:box :attr {:id ":block-9363.:hi"} :style {:font-size "15px", :padding-top "6px", :padding-left "14px", :margin-top "-8px", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child [:speak-click "Going back to the canvas, the dialog box and channel reactivity works the same way. The server flow waits for the client and reacts to the value. No need to render or load the flow like before, we are merely a 'subscription client' to this flow."]], :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}, :queries {}}, :block-7319 {:h 5, :w 8, :connection-id "bigfoot-ufos", :name "drag-from-select-all-ufo_sightings", :queries {:shape-drag-7 {:select [:shape [[:count 1] :rowcnt]], :from [[:query/ufo-sightings-drag-9 :hh354]], :group-by [:shape], :order-by [[:rowcnt :desc]]}}, :root [9 8], :tab "sapphire ape"}, :block-4121 {:h 3, :w 16, :root [0 7], :tab "through the rabbit hole and out the other side", :selected-view :hi, :name "block-4121", :views {:hi [:box :attr {:id ":block-4121.:hi"} :style {:font-size "15px", :padding-top "6px", :padding-left "14px", :margin-top "-8px", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child [:speak-click "We can also debug by forcing various values into any step in the flow in order to observe different reactions... Notice the flow doesn't re-start from scratch, it is actually still running and will react to new values that hit any of it's channels."]], :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}, :queries {}}, :block-7215 {:h 4, :w 9, :tab "through the rabbit hole and out the other side", :root [5 20], :name "block-7215", :views {:param-val [:box :align :center :justify :center :padding "13px" :style {:font-size "88px"} :child [:string :flow/flow-forever>:final-math]]}, :queries {}}, :block-3777 {:h 5, :w 8, :connection-id "bigfoot-ufos", :name "drag-from-select-all-ufo_sightings", :queries {:state-drag-3 {:select [:state [[:count 1] :rowcnt]], :from [[:query/ufo-sightings-drag-9 :uu58]], :group-by [:state], :order-by [[:rowcnt :desc]]}}, :root [17 8], :tab "sapphire ape"}, :block-10308 {:h 3, :w 4, :tab "fat zebra", :root [0 9], :name "block-10308", :views {:param-val [:box :align :center :justify :center :padding "13px" :style {:font-size "45px"} :child [:string :flow/counting-loop>:open-fn-1]]}, :queries {}}, :block-10388 {:h 3, :w 4, :root [0 6], :tab "fat zebra", :selected-view :hi, :name "block-10388", :views {:hi [:box :align :center :justify :center :padding "13px" :style {:font-size "45px"} :child [:string :flow/counting-loop>:open-fn-2]], :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}, :queries {}}, :block-6121 {:h 2, :w 16, :root [0 4], :tab "through the rabbit hole and out the other side", :selected-view :hi, :name "block-6121", :views {:hi [:box :attr {:id ":block-6121.:hi"} :style {:font-size "15px", :padding-top "6px", :padding-left "14px", :margin-top "-8px", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child [:speak-click "Here you can see that while running the flow interactively, we get the dialog push, as well as the ability to manipulate the options on the flow directly."]], :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}, :queries {}}, :block-1449 {:h 7, :w 32, :connection-id "bigfoot-ufos", :name "select-all-ufo_sightings", :queries {:ufo-sightings-drag-9 {:select [:city :comments :country :date_posted :datetime :duration_hours :duration_seconds :duration_seconds_int :id :latitude :longitude :shape :state], :from [[:ufo_sightings :jj584]]}}, :root [1 1], :tab "sapphire ape"}}, :selected-block "none!", :theme-colors-hashmap {"float" "#ff2050", "boolean" "#8EA2A8", "map" "#379fb5", "list" "#36fb04", "string" "#CEEFD1", "any" "#eeeeee", "vector" "#2C4761", "keyword" "#006666", "rabbit-code" "#9F93AE", "datetime" "#A7B2B4", "integer" "#723c5f", "unknown" "#77919B", "date" "#6A6391", "nil" "#ff8222"}, :click-param {nil {nil nil}, :blocks-sys {:block_key ":*theme*", :block_name "(meta: this screen's theme)", :queries 0, :views 27, :block_data "{:codemirror-theme \"ayu-dark\", :editor-param-background-color \"#000000\", :base-block-style {:backdrop-filter \"blur(2px) brightness(70%) \"}, :vega-defaults {:view {:stroke \"transparent\"}, :axis {:domainColor \"#ffffff22\", :grid true, :font \"Lato\", :labelColor \"#ffffff88\", :titleFont \"Lato\", :titleColor \"#ffffff99\", :labelFont \"Lato\", :domain false, :gridColor \"#ffffff22\", :tickColor \"#ffffff22\", :axisFont \"Lato\"}, :legend {:labelFont \"Lato\", :legendFont \"Lato\", :labelColor \"#ffffff99\", :titleColor \"#ffffff99\", :stroke \"#ffffff99\", :titleFont \"Lato\"}, :header {:labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}, :mark {:font \"Lato\"}, :title {:font \"Lato\", :subtitleFont \"Lato\", :labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}}, :grid-selected-column-css {:background-color \"#00000088\", :filter \"brightness(200%)\"}, :base-block-color-selected \"#00030a\", :block-title-font-color \"#ffffff\", :base-block-color \"#04041e82\", :editor-rim-color \"#379fb5\", :base-block-filter-selected \"drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)\", :vega-default-color-scheme {:scheme \"pastel2\"}, :data-colors {\"float\" \"#ff2050\", \"boolean\" \"#8EA2A8\", \"map\" \"#379fb5\", \"list\" \"#D4118EE\", \"string\" \"#CEEFD1\", \"any\" \"#eeeeee\", \"vector\" \"#2C4761\", \"keyword\" \"#006666\", \"rabbit-code\" \"#9F93AE\", \"datetime\" \"#A7B2B4\", \"integer\" \"#723c5f\", \"unknown\" \"#77919B\", \"date\" \"#6A6391\", \"nil\" \"#3B5A71\"}, :editor-grid-selected-font-color \"#000000\", :monospaced-font \"Nova Mono\", :editor-grid-selected-background-color \"#dc9cb0\", :nivo-defaults {:font-family \"Instagram Sans\", :labels {:text {:fill \"#ffffff\", :font-size \"16px\", :font-family \"Instagram Sans\", :font-weight 700}}, :tooltip {:container {:background \"#000\", :color \"#ffffff\", :text {:fill \"#eeeeee\"}, :fontSize \"18px\", :borderRadius \"4px\", :boxShadow \"0 1px 2px rgba(0, 0, 0, 0.55)\", :padding \"5px 9px\"}, :basic {:whiteSpace \"pre\", :display \"flex\", :alignItems \"center\"}, :tableCell {:padding \"3px 5px\"}}, :axis {:legend {:text {:fill \"#ffffff\", :font-size \"14px\", :font-family \"Instagram Sans\", :font-weight 700}}, :ticks {:line {:stroke \"#ffffff60\"}, :text {:fill \"#ffffff60\", :font-weight 700}}}, :grid {:line {:stroke \"#ffffff\", :strokeWidth 0, :strokeDasharray \"0 0\"}}}, :editor-outer-rim-color \"#379fb5\", :grid-selected-font-color \"#000000\", :block-title-selected-font-color \"#ffffff\", :grid-selected-background-color \"#a3d3ff\", :grid-font-color \"#ffffff\", :canvas-background-css {:background-image \"url(images/capecod-viking234-8k-4k.png)\", :transition \"all 0.8s ease-in-out\", :background-size \"cover\", :background-color \"#424f57\"}, :editor-font-color \"#ffffff\", :base-font \"Nova Square\", :block-tab-selected-font-color \"#c9d1ff\", :editor-background-color \"#000006\", :editor-grid-font-color \"#ffffff\"}", :view_names ":codemirror-theme :editor-param-background-color :base-block-style :vega-defaults :grid-selected-column-css :base-block-color-selected :block-title-font-color :base-block-color :editor-rim-color :base-block-filter-selected :vega-default-color-scheme :data-colors :editor-grid-selected-font-color :monospaced-font :editor-grid-selected-background-color :nivo-defaults :editor-outer-rim-color :grid-selected-font-color :block-title-selected-font-color :grid-selected-background-color :grid-font-color :canvas-background-css :editor-font-color :base-font :block-tab-selected-font-color :editor-background-color :editor-grid-font-color", :query_names ""}, :tables-sys {:db_schema "none", :db_catalog nil, :connection_id "bigfoot-ufos", :schema_cat nil, :table_name "ufo_sightings", :fields 14}, :flow {:counting-loop>open-fn-1 11, :flow-forever>open-fn-4 {:start 1708449913923, :end 1708449913926}, :crow-flow-201>*running? false, :counting-loop>open-fn-2 :done, :crow-flow-201a>*running? false, :counting-loop>*running? false, :counting-loop>open-fn-3 45, :flow-forever>*running? false, :flow-forever>final-math 663.5}, :flows-sys {:flow_id "counting-loop", :file_path "./flows/counting-loop.edn", :last_modified "2024-02-24 19:58:32"}, :files-sys {:file_path "./screens/capecod-viking.edn", :screen_name "capecod-viking", :blocks 12, :queries 9, :ts "2024-02-18 21:40:58"}, :param {:selected-view [:views :hi], :selected-view-data [:box :align :center :justify :center :attr {:id ":block-10388.:hi"} :style {:font-size "106px", :font-weight 700, :padding-top "6px", :padding-left "14px", :margin-top "-8px", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child "hi!"], :selected-block :block-10388}, :theme {:codemirror-theme "ayu-dark", :editor-param-background-color "#000000", :base-block-style {:backdrop-filter "blur(2px) brightness(70%) "}, :vega-defaults {:view {:stroke "transparent"}, :axis {:domainColor "#ffffff22", :grid true, :font "Lato", :labelColor "#ffffff88", :titleFont "Lato", :titleColor "#ffffff99", :labelFont "Lato", :domain false, :gridColor "#ffffff22", :tickColor "#ffffff22", :axisFont "Lato"}, :legend {:labelFont "Lato", :legendFont "Lato", :labelColor "#ffffff99", :titleColor "#ffffff99", :stroke "#ffffff99", :titleFont "Lato"}, :header {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"}, :mark {:font "Lato"}, :title {:font "Lato", :subtitleFont "Lato", :labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"}}, :grid-selected-column-css {:background-color "#00000088", :filter "brightness(200%)"}, :base-block-color-selected "#00030a", :block-title-font-color "#ffffff", :base-block-color "#04041e82", :editor-rim-color "#379fb5", :base-block-filter-selected "drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)", :vega-default-color-scheme {:scheme "pastel2"}, :data-colors {"float" "#ff2050", "boolean" "#8EA2A8", "map" "#379fb5", "list" "#36fb04", "string" "#CEEFD1", "any" "#eeeeee", "vector" "#2C4761", "keyword" "#006666", "rabbit-code" "#9F93AE", "datetime" "#A7B2B4", "integer" "#723c5f", "unknown" "#77919B", "date" "#6A6391", "nil" "#ff8222"}, :editor-grid-selected-font-color "#000000", :monospaced-font "Nova Mono", :editor-grid-selected-background-color "#dc9cb0", :nivo-defaults {:font-family "Instagram Sans", :labels {:text {:fill "#ffffff", :font-size "16px", :font-family "Instagram Sans", :font-weight 700}}, :tooltip {:container {:background "#000", :color "#ffffff", :text {:fill "#eeeeee"}, :fontSize "18px", :borderRadius "4px", :boxShadow "0 1px 2px rgba(0, 0, 0, 0.55)", :padding "5px 9px"}, :basic {:whiteSpace "pre", :display "flex", :alignItems "center"}, :tableCell {:padding "3px 5px"}}, :axis {:legend {:text {:fill "#ffffff", :font-size "14px", :font-family "Instagram Sans", :font-weight 700}}, :ticks {:line {:stroke "#ffffff60"}, :text {:fill "#ffffff60", :font-weight 700}}}, :grid {:line {:stroke "#ffffff", :strokeWidth 0, :strokeDasharray "0 0"}}}, :editor-outer-rim-color "#379fb5", :grid-selected-font-color "#000000", :block-title-selected-font-color "#ffffff", :grid-selected-background-color "#a3d3ff", :grid-font-color "#ffffff", :canvas-background-css {:background-image "url(images/alice-grid3.png)", :transition "all 0.8s ease-in-out", :background-size "cover", :background-color "#424f57"}, :editor-font-color "#ffffff", :base-font "Nova Square", :block-tab-selected-font-color "#c9d1ff", :editor-background-color "#000006", :editor-grid-font-color "#ffffff"}, :connections-sys {:database_name "SQLite", :connection_id "bigfoot-ufos"}, :sys {:selected-tab "fat zebra", :selected-tab-idx 2}}, :selected-flow "counting-loop"}