{:vibrant-antelope-solver
 {:signal :signal/cool-raccoon-signal-yo,
  :persist? false,
  :type :clojure,
  :default -1,
  :data (+ 1 2 3 88)},
 :dazzling-gnu-solver
 {:signal :signal/hourly?,
  :persist? false,
  :type :clojure,
  :default -1,
  :data (+ 1 2 3 90)},
 :polished-kangaroo-solver
 {:signal :signal/genius-gnat-signal,
  :persist? false,
  :type :clojure,
  :default -1,
  :data (+ 1 2 3 50)},
 :wallpaper-of-the-moment
 {:signal :signal/every-5-minutes,
  :persist? false,
  :type :clojure,
  :default -1,
  :data
  (let
   [dir
    "/home/ryanr/rvbbit/frontend/resources/public/images/large"
    rel-dir
    "./images/large/"
    files
    (->>
     (file-seq (clojure.java.io/file dir))
     (filter (fn [x] (.isFile x)))
     (map (fn [x] (.getName x)))
     (shuffle))
    random-file
    (first files)]
   (str rel-dir random-file))}}
