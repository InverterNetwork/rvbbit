{:flowmaps
 {:kick-3
  {:w 200,
   :h 100,
   :x 2257.1026535560345,
   :y 1586.6013537176725,
   :z 0,
   :data
   {:flow-item
    {:description "Push items to the client UI.",
     :category ":rabbit-base",
     :fn
     (fn [destination
          ref
          item-key
          thread-id
          message-name
          thread-desc
          &
          args]
       (rvbbit-backend.websockets/kick
         destination
         ref
         item-key
         thread-id
         message-name
         thread-desc
         args)),
     :name ":kick",
     :type :kick,
     :icon "images/pink-rabbit-head.png",
     :defaults
     {:destination :client-name,
      :item-key ":base",
      :thread-id :flow-id,
      :message-name "Unnamed Message",
      :thread-desc :flow-id,
      :ref :flow-id},
     :types
     {:destination [:keyword :vector :list :set],
      :ref :string,
      :item-key :keyword,
      :thread-id :string,
      :message-name :string,
      :thread-desc :string,
      :out :any},
     :pill-name "content",
     :input_types
     "[[:keyword :vector :list :set] :string :keyword :string :string :string]",
     :style {:color "#fc0fc0"},
     :selected-style {:color "#fc0fc0"},
     :inputs
     "[:destination :ref :item-key :thread-id :message-name :thread-desc]",
     :output_types ":any",
     :expandable? true,
     :full_map
     "{:description \"Push items to the client UI.\", :fn (fn [destination ref item-key thread-id message-name thread-desc & args] (rvbbit-backend.websockets/kick destination ref item-key thread-id message-name thread-desc args)), :type :kick, :icon \"images/pink-rabbit-head.png\", :defaults {:destination :client-name, :item-key \":base\", :thread-id :flow-id, :message-name \"Unnamed Message\", :thread-desc :flow-id, :ref :flow-id}, :types {:destination [:keyword :vector :list :set], :ref :string, :item-key :keyword, :thread-id :string, :message-name :string, :thread-desc :string, :out :any}, :pill-name \"content\", :style {:color \"#fc0fc0\"}, :selected-style {:color \"#fc0fc0\"}, :inputs [:destination :ref :item-key :thread-id :message-name :thread-desc], :expandable? true, :required [:destination :ref :item-key :thread-id :message-name :thread-desc]}",
     :required
     [:destination
      :ref
      :item-key
      :thread-id
      :message-name
      :thread-desc]},
    :name "drag-from-",
    :w 5,
    :source-panel :flow-fn-list*,
    :root [866 393],
    :h 6,
    :connection-id nil,
    :queries
    {:name-drag-29
     {:select
      [:name
       :full_map
       :description
       :inputs
       :icon
       :input_types
       :output_types
       :category],
      :from [[:query/flow-fn-sys :ee930]],
      :where [:= :name ":kick"]}},
    :drag-meta
    {:data-type "string",
     :source-query :flow-fn-sys,
     :param-full ":kick",
     :param-field :name,
     :source-panel-key :flow-fn-list*,
     :type :kick,
     :param-table :flow-fn-sys,
     :source-table :query/flow-fn-sys,
     :connection-id nil,
     :target :name,
     :row-num 3}},
   :icon "images/pink-rabbit-head.png",
   :ports
   {:in
    {:destination [:keyword :vector :list :set],
     :ref :string,
     :item-key :keyword,
     :thread-id :string,
     :message-name :string,
     :thread-desc :string,
     :content-6 :any},
    :out {:out :any}}},
  :kick-5
  {:w 200,
   :h 100,
   :x 4357.28,
   :y 1504.4160000000002,
   :z 0,
   :data
   {:flow-item
    {:description "Push items to the client UI.",
     :category ":rabbit-base",
     :fn
     (fn [destination
          ref
          item-key
          thread-id
          message-name
          thread-desc
          &
          args]
       (rvbbit-backend.websockets/kick
         destination
         ref
         item-key
         thread-id
         message-name
         thread-desc
         args)),
     :name ":kick",
     :type :kick,
     :icon "images/pink-rabbit-head.png",
     :defaults
     {:destination :client-name,
      :item-key ":base",
      :thread-id :flow-id,
      :message-name "Unnamed Message",
      :thread-desc :flow-id,
      :ref :flow-id},
     :types
     {:destination [:keyword :vector :list :set],
      :ref :string,
      :item-key :keyword,
      :thread-id :string,
      :message-name :string,
      :thread-desc :string,
      :out :any},
     :pill-name "content",
     :input_types
     "[[:keyword :vector :list :set] :string :keyword :string :string :string]",
     :style {:color "#fc0fc0"},
     :selected-style {:color "#fc0fc0"},
     :inputs
     "[:destination :ref :item-key :thread-id :message-name :thread-desc]",
     :output_types ":any",
     :expandable? true,
     :full_map
     "{:description \"Push items to the client UI.\", :fn (fn [destination ref item-key thread-id message-name thread-desc & args] (rvbbit-backend.websockets/kick destination ref item-key thread-id message-name thread-desc args)), :type :kick, :icon \"images/pink-rabbit-head.png\", :defaults {:destination :client-name, :item-key \":base\", :thread-id :flow-id, :message-name \"Unnamed Message\", :thread-desc :flow-id, :ref :flow-id}, :types {:destination [:keyword :vector :list :set], :ref :string, :item-key :keyword, :thread-id :string, :message-name :string, :thread-desc :string, :out :any}, :pill-name \"content\", :style {:color \"#fc0fc0\"}, :selected-style {:color \"#fc0fc0\"}, :inputs [:destination :ref :item-key :thread-id :message-name :thread-desc], :expandable? true, :required [:destination :ref :item-key :thread-id :message-name :thread-desc]}",
     :required
     [:destination
      :ref
      :item-key
      :thread-id
      :message-name
      :thread-desc]},
    :name "drag-from-",
    :w 5,
    :source-panel :flow-fn-list*,
    :root [1050 216],
    :h 6,
    :connection-id nil,
    :queries
    {:name-drag-44
     {:select
      [:name
       :full_map
       :description
       :inputs
       :icon
       :input_types
       :output_types
       :category],
      :from [[:query/flow-fn-sys :ww222]],
      :where [:= :name ":kick"]}},
    :drag-meta
    {:data-type "string",
     :source-query :flow-fn-sys,
     :param-full ":kick",
     :param-field :name,
     :source-panel-key :flow-fn-list*,
     :type :kick,
     :param-table :flow-fn-sys,
     :source-table :query/flow-fn-sys,
     :connection-id nil,
     :target :name,
     :row-num 3}},
   :icon "images/pink-rabbit-head.png",
   :ports
   {:in
    {:destination [:keyword :vector :list :set],
     :ref :string,
     :item-key :keyword,
     :thread-id :string,
     :message-name :string,
     :thread-desc :string,
     :content-6 :any,
     :content-7 :any},
    :out {:out :any}}},
  :open-fn-1
  {:y 1342.4750546874998,
   :fn (fn [x] x),
   :w 200,
   :raw-fn
   (fn [x] [:speak
            (str
              "I found some unusual outliers in the error log table. Let's... you know... take a closer look.. together. "
              (rand-int 45))]),
   :right-click? true,
   :icon "zmdi-functions",
   :z 0,
   :ports
   {:in {:value :any},
    :out {:idx0 :keyword, :idx1 :string, :* :vector}},
   :h 100,
   :x 2742.86880859375,
   :data
   {:flow-item
    {:description "Write you own Clojure function! Godspeed!",
     :category ":rabbit-base",
     :fn (fn [x] x),
     :name ":open-fn",
     :raw-fn (fn [x] x),
     :type :open-fn,
     :icon "zmdi-functions",
     :types {:value :any, :out :any},
     :input_types "[:any]",
     :inputs "[:value]",
     :output_types ":any",
     :expandable? true,
     :full_map
     "{:description \"Write you own Clojure function! Godspeed!\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}"},
    :name "drag-from-",
    :w 5,
    :source-panel :flow-fn-list*,
    :h 6,
    :connection-id nil,
    :queries
    {:name-drag-25
     {:select
      [:name
       :full_map
       :description
       :inputs
       :icon
       :input_types
       :output_types
       :category],
      :from [[:query/flow-fn-sys :ii11]],
      :where [:= :name ":open-fn"]}},
    :drag-meta
    {:data-type "string",
     :source-query :flow-fn-sys,
     :param-full ":open-fn",
     :param-field :name,
     :source-panel-key :flow-fn-list*,
     :type :open-fn,
     :param-table :flow-fn-sys,
     :source-table :query/flow-fn-sys,
     :connection-id nil,
     :target :name,
     :row-num 5}}},
  :kick-1
  {:w 200,
   :h 100,
   :x 1304.8125673491381,
   :y 1058.218396417026,
   :z 0,
   :data
   {:flow-item
    {:description "Push items to the client UI.",
     :category ":rabbit-base",
     :fn
     (fn [destination
          ref
          item-key
          thread-id
          message-name
          thread-desc
          &
          args]
       (rvbbit-backend.websockets/kick
         destination
         ref
         item-key
         thread-id
         message-name
         thread-desc
         args)),
     :name ":kick",
     :type :kick,
     :icon "images/pink-rabbit-head.png",
     :defaults
     {:destination :client-name,
      :item-key ":base",
      :thread-id :flow-id,
      :message-name "Unnamed Message",
      :thread-desc :flow-id,
      :ref :flow-id},
     :types
     {:destination [:keyword :vector :list :set],
      :ref :string,
      :item-key :keyword,
      :thread-id :string,
      :message-name :string,
      :thread-desc :string,
      :out :any},
     :pill-name "content",
     :input_types
     "[[:keyword :vector :list :set] :string :keyword :string :string :string]",
     :style {:color "#fc0fc0"},
     :selected-style {:color "#fc0fc0"},
     :inputs
     "[:destination :ref :item-key :thread-id :message-name :thread-desc]",
     :output_types ":any",
     :expandable? true,
     :full_map
     "{:description \"Push items to the client UI.\", :fn (fn [destination ref item-key thread-id message-name thread-desc & args] (rvbbit-backend.websockets/kick destination ref item-key thread-id message-name thread-desc args)), :type :kick, :icon \"images/pink-rabbit-head.png\", :defaults {:destination :client-name, :item-key \":base\", :thread-id :flow-id, :message-name \"Unnamed Message\", :thread-desc :flow-id, :ref :flow-id}, :types {:destination [:keyword :vector :list :set], :ref :string, :item-key :keyword, :thread-id :string, :message-name :string, :thread-desc :string, :out :any}, :pill-name \"content\", :style {:color \"#fc0fc0\"}, :selected-style {:color \"#fc0fc0\"}, :inputs [:destination :ref :item-key :thread-id :message-name :thread-desc], :expandable? true, :required [:destination :ref :item-key :thread-id :message-name :thread-desc]}",
     :required
     [:destination
      :ref
      :item-key
      :thread-id
      :message-name
      :thread-desc]},
    :name "drag-from-",
    :w 5,
    :source-panel :flow-fn-list*,
    :root [342 211.66665649414062],
    :h 6,
    :connection-id nil,
    :queries
    {:name-drag-33
     {:select
      [:name
       :full_map
       :description
       :inputs
       :icon
       :input_types
       :output_types
       :category],
      :from [[:query/flow-fn-sys :cc166]],
      :where [:= :name ":kick"]}},
    :drag-meta
    {:data-type "string",
     :source-query :flow-fn-sys,
     :param-full ":kick",
     :param-field :name,
     :source-panel-key :flow-fn-list*,
     :type :kick,
     :param-table :flow-fn-sys,
     :source-table :query/flow-fn-sys,
     :connection-id nil,
     :target :name,
     :row-num 3}},
   :icon "images/pink-rabbit-head.png",
   :ports
   {:in
    {:destination [:keyword :vector :list :set],
     :ref :string,
     :item-key :keyword,
     :thread-id :string,
     :message-name :string,
     :thread-desc :string,
     :content-7 :any},
    :out {:out :any}}},
  :open-fn-2
  {:y 1585.9038143382354,
   :fn (fn [x] x),
   :w 200,
   :raw-fn (fn [x] (do (Thread/sleep 5000) x)),
   :right-click? true,
   :icon "zmdi-functions",
   :z 0,
   :ports {:in {:value :any}, :out {:out :any}},
   :h 100,
   :x 2797.474471507353,
   :data
   {:flow-item
    {:description "Write you own Clojure function! Godspeed!",
     :category ":rabbit-base",
     :fn (fn [x] x),
     :name ":open-fn",
     :raw-fn (fn [x] x),
     :type :open-fn,
     :icon "zmdi-functions",
     :types {:value :any, :out :any},
     :input_types "[:any]",
     :inputs "[:value]",
     :output_types ":any",
     :expandable? true,
     :full_map
     "{:description \"Write you own Clojure function! Godspeed!\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}"},
    :name "drag-from-",
    :w 5,
    :source-panel :flow-fn-list*,
    :h 6,
    :connection-id nil,
    :queries
    {:name-drag-25
     {:select
      [:name
       :full_map
       :description
       :inputs
       :icon
       :input_types
       :output_types
       :category],
      :from [[:query/flow-fn-sys :ii11]],
      :where [:= :name ":open-fn"]}},
    :drag-meta
    {:data-type "string",
     :source-query :flow-fn-sys,
     :param-full ":open-fn",
     :param-field :name,
     :source-panel-key :flow-fn-list*,
     :type :open-fn,
     :param-table :flow-fn-sys,
     :source-table :query/flow-fn-sys,
     :connection-id nil,
     :target :name,
     :row-num 5}}},
  :open-input-1
  {:w 200,
   :h 100,
   :data
   {:drag-meta {:type :open-block},
    :flow-item {:expandable? true},
    :user-input
    [:execute
     {[:panels :block-5957]
      {:h 4,
       :w 5,
       :root [4 11],
       :tab "pyramidal eagle",
       :selected-view :hi,
       :name "block-5957",
       :views
       {:hi
        [:box
         :align
         :center
         :justify
         :center
         :attr
         {:id ":block-5957.:hi"}
         :style
         {:font-size "106px",
          :font-weight 700,
          :padding-top "6px",
          :padding-left "14px",
          :margin-top "-8px",
          :color "#40d6ff",
          :font-family "Nova Square"}
         :child
         "hi!"],
        :stack
        [:layout
         {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
       :queries {}},
      [:panels :block-59599]
      {:h 4,
       :w 7,
       :root [9 11],
       :tab "pyramidal eagle",
       :selected-view :hi,
       :name "block-5957",
       :views
       {:hi
        [:box
         :align
         :center
         :justify
         :center
         :attr
         {:id ":block-5957.:hi"}
         :style
         {:font-size "106px",
          :font-weight 700,
          :padding-top "6px",
          :padding-left "14px",
          :margin-top "-8px",
          :color "#40d6ff",
          :font-family "Nova Square"}
         :child
         "hi!"],
        :stack
        [:layout
         {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
       :queries {}}}],
    :width 350,
    :view-output? false},
   :z 0,
   :ports {:out {:idx0 :keyword, :idx1 :map, :* :vector}},
   :x 683.8873076467804,
   :y 1240.420435310133},
  :open-input-3
  {:w 200,
   :h 100,
   :data
   {:drag-meta {:type :open-block},
    :flow-item {:expandable? true},
    :user-input [:box :child [:run-flow ["calliope-loop1" "run me"]]]},
   :z 0,
   :ports
   {:out {:idx0 :keyword, :idx1 :keyword, :idx2 :vector, :* :vector}},
   :x 1367.5104993665539,
   :y 1529.663430373733},
  :kick-2
  {:w 200,
   :h 100,
   :x 1878.6765677787162,
   :y 1265.258473659206,
   :z 0,
   :data
   {:flow-item
    {:description "Push items to the client UI.",
     :category ":rabbit-base",
     :fn
     (fn [destination
          ref
          item-key
          thread-id
          message-name
          thread-desc
          &
          args]
       (rvbbit-backend.websockets/kick
         destination
         ref
         item-key
         thread-id
         message-name
         thread-desc
         args)),
     :name ":kick",
     :type :kick,
     :icon "images/pink-rabbit-head.png",
     :defaults
     {:destination :client-name,
      :item-key ":base",
      :thread-id :flow-id,
      :message-name "Unnamed Message",
      :thread-desc :flow-id,
      :ref :flow-id},
     :types
     {:destination [:keyword :vector :list :set],
      :ref :string,
      :item-key :keyword,
      :thread-id :string,
      :message-name :string,
      :thread-desc :string,
      :out :any},
     :pill-name "content",
     :input_types
     "[[:keyword :vector :list :set] :string :keyword :string :string :string]",
     :style {:color "#fc0fc0"},
     :selected-style {:color "#fc0fc0"},
     :inputs
     "[:destination :ref :item-key :thread-id :message-name :thread-desc]",
     :output_types ":any",
     :expandable? true,
     :full_map
     "{:description \"Push items to the client UI.\", :fn (fn [destination ref item-key thread-id message-name thread-desc & args] (rvbbit-backend.websockets/kick destination ref item-key thread-id message-name thread-desc args)), :type :kick, :icon \"images/pink-rabbit-head.png\", :defaults {:destination :client-name, :item-key \":base\", :thread-id :flow-id, :message-name \"Unnamed Message\", :thread-desc :flow-id, :ref :flow-id}, :types {:destination [:keyword :vector :list :set], :ref :string, :item-key :keyword, :thread-id :string, :message-name :string, :thread-desc :string, :out :any}, :pill-name \"content\", :style {:color \"#fc0fc0\"}, :selected-style {:color \"#fc0fc0\"}, :inputs [:destination :ref :item-key :thread-id :message-name :thread-desc], :expandable? true, :required [:destination :ref :item-key :thread-id :message-name :thread-desc]}",
     :required
     [:destination
      :ref
      :item-key
      :thread-id
      :message-name
      :thread-desc]},
    :name "drag-from-",
    :w 5,
    :source-panel :flow-fn-list*,
    :root [946 357.1666564941406],
    :h 6,
    :connection-id nil,
    :queries
    {:name-drag-28
     {:select
      [:name
       :full_map
       :description
       :inputs
       :icon
       :input_types
       :output_types
       :category],
      :from [[:query/flow-fn-sys :kk564]],
      :where [:= :name ":kick"]}},
    :drag-meta
    {:data-type "string",
     :source-query :flow-fn-sys,
     :param-full ":kick",
     :param-field :name,
     :source-panel-key :flow-fn-list*,
     :type :kick,
     :param-table :flow-fn-sys,
     :source-table :query/flow-fn-sys,
     :connection-id nil,
     :target :name,
     :row-num 3}},
   :icon "images/pink-rabbit-head.png",
   :ports
   {:in
    {:destination [:keyword :vector :list :set],
     :ref :string,
     :item-key :keyword,
     :thread-id :string,
     :message-name :string,
     :thread-desc :string,
     :content-6 :any,
     :content-7 :any},
    :out {:out :any}}},
  :kick-4
  {:w 200,
   :h 100,
   :x 3286.88,
   :y 1453.216,
   :z 0,
   :data
   {:flow-item
    {:description "Push items to the client UI.",
     :category ":rabbit-base",
     :fn
     (fn [destination
          ref
          item-key
          thread-id
          message-name
          thread-desc
          &
          args]
       (rvbbit-backend.websockets/kick
         destination
         ref
         item-key
         thread-id
         message-name
         thread-desc
         args)),
     :name ":kick",
     :type :kick,
     :icon "images/pink-rabbit-head.png",
     :defaults
     {:destination :client-name,
      :item-key ":base",
      :thread-id :flow-id,
      :message-name "Unnamed Message",
      :thread-desc :flow-id,
      :ref :flow-id},
     :types
     {:destination [:keyword :vector :list :set],
      :ref :string,
      :item-key :keyword,
      :thread-id :string,
      :message-name :string,
      :thread-desc :string,
      :out :any},
     :pill-name "content",
     :input_types
     "[[:keyword :vector :list :set] :string :keyword :string :string :string]",
     :style {:color "#fc0fc0"},
     :selected-style {:color "#fc0fc0"},
     :inputs
     "[:destination :ref :item-key :thread-id :message-name :thread-desc]",
     :output_types ":any",
     :expandable? true,
     :full_map
     "{:description \"Push items to the client UI.\", :fn (fn [destination ref item-key thread-id message-name thread-desc & args] (rvbbit-backend.websockets/kick destination ref item-key thread-id message-name thread-desc args)), :type :kick, :icon \"images/pink-rabbit-head.png\", :defaults {:destination :client-name, :item-key \":base\", :thread-id :flow-id, :message-name \"Unnamed Message\", :thread-desc :flow-id, :ref :flow-id}, :types {:destination [:keyword :vector :list :set], :ref :string, :item-key :keyword, :thread-id :string, :message-name :string, :thread-desc :string, :out :any}, :pill-name \"content\", :style {:color \"#fc0fc0\"}, :selected-style {:color \"#fc0fc0\"}, :inputs [:destination :ref :item-key :thread-id :message-name :thread-desc], :expandable? true, :required [:destination :ref :item-key :thread-id :message-name :thread-desc]}",
     :required
     [:destination
      :ref
      :item-key
      :thread-id
      :message-name
      :thread-desc]},
    :name "drag-from-",
    :w 5,
    :source-panel :flow-fn-list*,
    :root [804 184],
    :h 6,
    :connection-id nil,
    :queries
    {:name-drag-37
     {:select
      [:name
       :full_map
       :description
       :inputs
       :icon
       :input_types
       :output_types
       :category],
      :from [[:query/flow-fn-sys :bb758]],
      :where [:= :name ":kick"]}},
    :drag-meta
    {:data-type "string",
     :source-query :flow-fn-sys,
     :param-full ":kick",
     :param-field :name,
     :source-panel-key :flow-fn-list*,
     :type :kick,
     :param-table :flow-fn-sys,
     :source-table :query/flow-fn-sys,
     :connection-id nil,
     :target :name,
     :row-num 3}},
   :icon "images/pink-rabbit-head.png",
   :ports
   {:in
    {:destination [:keyword :vector :list :set],
     :ref :string,
     :item-key :keyword,
     :thread-id :string,
     :message-name :string,
     :thread-desc :string,
     :content-6 :any,
     :content-7 :any},
    :out {:out :any}}},
  :open-input
  {:w 200,
   :h 100,
   :data
   {:drag-meta {:type :open-block},
    :flow-item {:expandable? true},
    :user-input [:speak "ok, for real, we need to talk."]},
   :z 0,
   :ports {:out {:idx0 :keyword, :idx1 :string, :* :vector}},
   :x 2836.4686254040953,
   :y 1772.686136179957},
  :open-input-4
  {:w 200,
   :h 100,
   :data
   {:drag-meta {:type :open-block},
    :flow-item {:expandable? true},
    :user-input [:speak "are you ready?"]},
   :z 0,
   :ports {:out {:idx0 :keyword, :idx1 :string, :* :vector}},
   :x 3927.9756465517244,
   :y 1762.0305765086207},
  :open-fn-3
  {:y 1499.6499843750003,
   :fn (fn [x] x),
   :w 200,
   :raw-fn (fn [x] (do (Thread/sleep 5000) x)),
   :right-click? true,
   :icon "zmdi-functions",
   :z 0,
   :ports {:in {:value :any}, :out {:out :any}},
   :h 100,
   :x 3852.9868359374996,
   :data
   {:flow-item
    {:description "Write you own Clojure function! Godspeed!",
     :category ":rabbit-base",
     :fn (fn [x] x),
     :name ":open-fn",
     :raw-fn (fn [x] x),
     :type :open-fn,
     :icon "zmdi-functions",
     :types {:value :any, :out :any},
     :input_types "[:any]",
     :inputs "[:value]",
     :output_types ":any",
     :expandable? true,
     :full_map
     "{:description \"Write you own Clojure function! Godspeed!\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}"},
    :name "drag-from-",
    :w 5,
    :source-panel :flow-fn-list*,
    :h 6,
    :connection-id nil,
    :queries
    {:name-drag-25
     {:select
      [:name
       :full_map
       :description
       :inputs
       :icon
       :input_types
       :output_types
       :category],
      :from [[:query/flow-fn-sys :ii11]],
      :where [:= :name ":open-fn"]}},
    :drag-meta
    {:data-type "string",
     :source-query :flow-fn-sys,
     :param-full ":open-fn",
     :param-field :name,
     :source-panel-key :flow-fn-list*,
     :type :open-fn,
     :param-table :flow-fn-sys,
     :source-table :query/flow-fn-sys,
     :connection-id nil,
     :target :name,
     :row-num 5}}},
  :open-fn-4
  {:y 1324.8021054687501,
   :fn (fn [x] x),
   :w 200,
   :raw-fn (fn [x] (do (Thread/sleep 5000) x)),
   :right-click? true,
   :icon "zmdi-functions",
   :z 0,
   :ports {:in {:value :any}, :out {:out :any}},
   :h 100,
   :x 2316.3042578124996,
   :data
   {:flow-item
    {:description "Write you own Clojure function! Godspeed!",
     :category ":rabbit-base",
     :fn (fn [x] x),
     :name ":open-fn",
     :raw-fn (fn [x] x),
     :type :open-fn,
     :icon "zmdi-functions",
     :types {:value :any, :out :any},
     :input_types "[:any]",
     :inputs "[:value]",
     :output_types ":any",
     :expandable? true,
     :full_map
     "{:description \"Write you own Clojure function! Godspeed!\", :fn (fn [x] x), :raw-fn (fn [x] x), :type :open-fn, :icon \"zmdi-functions\", :types {:value :any, :out :any}, :inputs [:value], :expandable? true, :view (fn [_])}"},
    :name "drag-from-",
    :w 5,
    :source-panel :flow-fn-list*,
    :h 6,
    :connection-id nil,
    :queries
    {:name-drag-25
     {:select
      [:name
       :full_map
       :description
       :inputs
       :icon
       :input_types
       :output_types
       :category],
      :from [[:query/flow-fn-sys :ii11]],
      :where [:= :name ":open-fn"]}},
    :drag-meta
    {:data-type "string",
     :source-query :flow-fn-sys,
     :param-full ":open-fn",
     :param-field :name,
     :source-panel-key :flow-fn-list*,
     :type :open-fn,
     :param-table :flow-fn-sys,
     :source-table :query/flow-fn-sys,
     :connection-id nil,
     :target :name,
     :row-num 5}}},
  :open-input-2
  {:w 200,
   :h 100,
   :data
   {:drag-meta {:type :open-block},
    :flow-item {:expandable? true},
    :user-input [:speak "good evening, ryan. fancy a chat?"]},
   :z 0,
   :ports {:out {:idx0 :keyword, :idx1 :string, :* :vector}},
   :x 721.7320638020833,
   :y 1427.5397608901517}},
 :flow-id "calliope-loop1",
 :flowmaps-connections
 [[:open-input-1/* :kick-1/content-7]
  [:kick-1 :kick-2/content-6]
  [:open-input-3/* :kick-2/content-7]
  [:open-fn-1 :kick-3/content-6]
  [:kick-3 :open-fn-2/value]
  [:open-fn-2 :kick-4/content-6]
  [:kick-4 :open-fn-3/value]
  [:open-fn-3 :kick-5/content-6]
  [:kick-5 :done]
  [:open-input :kick-4/content-7]
  [:open-input-4 :kick-5/content-7]
  [:kick-2 :open-fn-4/value]
  [:open-fn-4 :open-fn-1/value]]}