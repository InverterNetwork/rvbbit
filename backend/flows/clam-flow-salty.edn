{:flowmaps
 {:open-input
  {:w 200,
   :h 60,
   :data {:drag-meta {:type :open-block}, :user-input 6},
   :z 0,
   :ports {:out {:out :integer}},
   :x 1191.4034637064874,
   :y 1165.906813686709},
  :add-then-multiply
  {:y 1218.5031101661393,
   :sub-flow
   {:flow-id "add-then-multiply",
    :file-path "./flows/add-then-multiply.edn",
    :map
    {:add-val-1
     {:w 200,
      :h 60,
      :data {:drag-meta {:type :open-block}, :user-input 345},
      :z 0,
      :ports {:out {:out :integer}},
      :x 1057.8198704075169,
      :y 1066.9231023015202},
     :add-val-2
     {:w 200,
      :h 60,
      :data {:drag-meta {:type :open-block}, :user-input 345},
      :z 0,
      :ports {:out {:out :integer}},
      :x 1062.9161378797087,
      :y 1206.60168420152},
     :+
     {:w 200,
      :h 100,
      :x 1368.1945356386304,
      :y 1106.0138566400349,
      :z 0,
      :data
      {:flow-item
       {:description "Clojure add function.",
        :category ":clojure-base",
        :name ":+",
        :icon "zmdi-plus",
        :types
        {:value1 [:integer :float],
         :value2 [:integer :float],
         :out [:integer :float]},
        :input_types "[[:integer :float] [:integer :float]]",
        :inputs [:value1 :value2],
        :output_types "[:integer :float]",
        :full_map
        "{:description \"Clojure add function.\", :view (fn [_]), :fn +, :inputs [:value1 :value2], :icon \"zmdi-plus\", :types {:value1 [:integer :float], :value2 [:integer :float], :out [:integer :float]}}"},
       :name "drag-from-",
       :w 5,
       :source-panel :flow-fn-list*,
       :root [499.6666564941406 178],
       :h 6,
       :connection-id nil,
       :queries
       {:name-drag-2
        {:select
         [:name
          :full_map
          :description
          :inputs
          :icon
          :input_types
          :output_types
          :category],
         :from [[:query/flow-fn-sys :pp330]],
         :where [:= :name ":+"]}},
       :drag-meta
       {:data-type "string",
        :source-query :flow-fn-sys,
        :param-full ":+",
        :param-field :name,
        :source-panel-key :flow-fn-list*,
        :type :where,
        :param-table :flow-fn-sys,
        :source-table :query/flow-fn-sys,
        :connection-id nil,
        :target :name,
        :row-num 12}},
      :icon "zmdi-plus",
      :ports
      {:in {:value1 [:integer :float], :value2 [:integer :float]},
       :out {:out [:integer :float]}}},
     :*
     {:w 200,
      :h 100,
      :x 1685.8783289053652,
      :y 1180.5206681450327,
      :z 0,
      :data
      {:flow-item
       {:description "Clojure multiply function.",
        :category ":clojure-base",
        :name ":*",
        :icon "zmdi-plus",
        :types
        {:value1 [:integer :float],
         :value2 [:integer :float],
         :out [:integer :float]},
        :input_types "[[:integer :float] [:integer :float]]",
        :inputs [:value1 :value2],
        :output_types "[:integer :float]",
        :full_map
        "{:description \"Clojure multiply function.\", :view (fn [_]), :fn *, :inputs [:value1 :value2], :icon \"zmdi-plus\", :types {:value1 [:integer :float], :value2 [:integer :float], :out [:integer :float]}}"},
       :name "drag-from-",
       :w 5,
       :source-panel :flow-fn-list*,
       :root [891.6666564941406 222],
       :h 6,
       :connection-id nil,
       :queries
       {:name-drag-40
        {:select
         [:name
          :full_map
          :description
          :inputs
          :icon
          :input_types
          :output_types
          :category],
         :from [[:query/flow-fn-sys :zz20]],
         :where [:= :name ":*"]}},
       :drag-meta
       {:data-type "string",
        :source-query :flow-fn-sys,
        :param-full ":*",
        :param-field :name,
        :source-panel-key :flow-fn-list*,
        :type :where,
        :param-table :flow-fn-sys,
        :source-table :query/flow-fn-sys,
        :connection-id nil,
        :target :name,
        :row-num 4}},
      :icon "zmdi-plus",
      :ports
      {:in {:value1 [:integer :float], :value2 [:integer :float]},
       :out {:out [:integer :float]}}},
     :multiplier
     {:w 200,
      :h 60,
      :data {:drag-meta {:type :open-block}, :user-input 45},
      :z 0,
      :ports {:out {:out :integer}},
      :x 1404.4340674639468,
      :y 1270.5397213477743}},
    :connections
    [[:add-val-1 :+/value1]
     [:add-val-2 :+/value2]
     [:+ :*/value1]
     [:multiplier :*/value2]
     [:* :done]]},
   :flow-id "add-then-multiply",
   :w 200,
   :icon "zmdi-puzzle-piece",
   :z 0,
   :ports
   {:in
    {:add-val-1 :integer, :add-val-2 :integer, :multiplier :integer},
    :out {:out [:integer :float]}},
   :h 100,
   :file-path "./flows/add-then-multiply.edn",
   :x 1515.0386249011076,
   :data
   {:flow-item nil,
    :name "drag-from-",
    :w 5,
    :source-panel :flow-list*,
    :root [1019 174.5],
    :h 6,
    :connection-id nil,
    :queries
    {:flow-id-drag-19
     {:select [:flow_id :file_path :last_modified],
      :from [[:query/flows-sys :qq389]],
      :where [:= :flow_id "add-then-multiply"]}},
    :drag-meta
    {:data-type "string",
     :done-block :*,
     :source-query :flows-sys,
     :param-full "add-then-multiply",
     :param-field :flow_id,
     :source-panel-key :flow-list*,
     :type :sub-flow,
     :param-table :flows-sys,
     :source-table :query/flows-sys,
     :connection-id nil,
     :target :flow_id,
     :row-num 7}}},
  :open-input-1
  {:w 200,
   :h 60,
   :data {:drag-meta {:type :open-block}, :user-input 4},
   :z 0,
   :ports {:out {:out :integer}},
   :x 1210.7015748615504,
   :y 1296.415491495253}},
 :flow-id "clam-flow-salty",
 :flowmaps-connections
 [[:open-input-1 :add-then-multiply/multiplier]
  [:open-input :add-then-multiply/add-val-1]
  [:add-then-multiply :done]]}