{:flowmaps
 {:open-input
  {:w 200,
   :h 60,
   :data {:drag-meta {:type :open-block}, :user-input 14500},
   :z 0,
   :ports {:out {:out :integer}},
   :x 942.0329065074646,
   :y 1123.9444423262357},
  :open-input-1
  {:w 200,
   :h 60,
   :data {:drag-meta {:type :open-block}, :user-input 2250},
   :z 0,
   :ports {:out {:out :integer}},
   :x 954.4788511902417,
   :y 1290.711322467333},
  :+
  {:w 200,
   :h 100,
   :x 1272.3041357120258,
   :y 1225.1767899847719,
   :z 0,
   :data
   {:flow-item
    {:description "Clojure add function.",
     :category ":clojure-base",
     :name ":+",
     :icon "zmdi-pizza",
     :types
     {:value1 [:integer :float],
      :value2 [:integer :float],
      :out :integer},
     :input_types "[[:integer :float] [:integer :float]]",
     :inputs [:value1 :value2],
     :output_types ":integer",
     :full_map
     "{:description \"Clojure add function.\", :view (fn [_]), :fn +, :inputs [:value1 :value2], :icon \"zmdi-plus\", :types {:value1 [:integer :float], :value2 [:integer :float], :out :integer}}"},
    :name "drag-from-",
    :w 5,
    :source-panel :flow-fn-list*,
    :root [536.3333435058594 137],
    :h 6,
    :connection-id nil,
    :queries
    {:name-drag-11
     {:select
      [:name
       :full_map
       :description
       :inputs
       :icon
       :input_types
       :output_types
       :category],
      :from [[:query/flow-fn-sys :xx118]],
      :where [:= :name ":+"]}},
    :drag-meta
    {:data-type "string",
     :source-query :flow-fn-sys,
     :param-full ":+",
     :param-field :name,
     :source-panel-key :flow-fn-list*,
     :type :where,
     :param-table :flow-fn-sys,
     :source-table :query/flow-fn-sys,
     :connection-id nil,
     :target :name,
     :row-num 1}},
   :icon "zmdi-pizza",
   :ports
   {:in {:value1 [:integer :float], :value2 [:integer :float]},
    :out {:out :integer}}},
  :+-1
  {:w 200,
   :h 100,
   :x 1602.8051920349499,
   :y 1134.2543682237153,
   :z 0,
   :data
   {:flow-item
    {:description "Clojure add function.",
     :category ":clojure-base",
     :name ":+",
     :icon "zmdi-plus",
     :types
     {:value1 [:integer :float],
      :value2 [:integer :float],
      :out :integer},
     :input_types "[[:integer :float] [:integer :float]]",
     :inputs [:value1 :value2],
     :output_types ":integer",
     :full_map
     "{:description \"Clojure add function.\", :view (fn [_]), :fn +, :inputs [:value1 :value2], :icon \"zmdi-plus\", :types {:value1 [:integer :float], :value2 [:integer :float], :out :integer}}"},
    :name "drag-from-",
    :w 5,
    :source-panel :flow-fn-list*,
    :root [1116.3333435058594 236],
    :h 6,
    :connection-id nil,
    :queries
    {:name-drag-14
     {:select
      [:name
       :full_map
       :description
       :inputs
       :icon
       :input_types
       :output_types
       :category],
      :from [[:query/flow-fn-sys :vv706]],
      :where [:= :name ":+"]}},
    :drag-meta
    {:data-type "string",
     :source-query :flow-fn-sys,
     :param-full ":+",
     :param-field :name,
     :source-panel-key :flow-fn-list*,
     :type :where,
     :param-table :flow-fn-sys,
     :source-table :query/flow-fn-sys,
     :connection-id nil,
     :target :name,
     :row-num 1}},
   :icon "zmdi-plus",
   :ports
   {:in {:value1 [:integer :float], :value2 [:integer :float]},
    :out {:out :integer}}},
  :open-input-2
  {:w 200,
   :h 60,
   :data
   {:drag-meta {:type :open-block}, :user-input "feed me, seymour!"},
   :z 0,
   :ports {:out {:out :string}},
   :x 1605.4835336615795,
   :y 1302.669822677162},
  :open-input-3
  {:w 200,
   :h 60,
   :data
   {:drag-meta {:type :open-block}, :user-input "feed me, seymour!"},
   :z 0,
   :ports {:out {:out :string}},
   :x 1828.5558448639651,
   :y 1246.3955761785776}},
 :flow-id "live-scratch-flow",
 :flowmaps-connections
 [[:open-input :+/value1]
  [:open-input-1 :+/value2]
  [:+ :+-1/value1]
  [:open-input :+-1/value2]
  [:+-1 :done]]}